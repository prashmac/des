import{I as at,o as so,a as ui,u as io,M as ro,V as cs,S as Wi,G as hi,b as Cs,R as di,c as Je,F as oo,B as ao,l as co,d as ji,e as pi,f as Vt,A as lo,Q as uo,g as ho,h as po,P as Bi,O as As,i as fo,j as mo,k as go,D as _o,C as Ui,m as vo,n as yo}from"./index.DHiLk8iU.js";import{_ as Ne,i as wo}from"./spring.DFr2K5lH.js";import{T as fi}from"./ticker.C4A55uCM.js";import{c as To,m as It}from"./math.DF5odKIs.js";import{l as bo}from"./loadGLTF.Dbtegvn5.js";import"./entry.HS_113TQ.js";import"./_commonjsHelpers.CZnAS8i4.js";import"./_plugin-vue_export-helper.DlAUqK2U.js";const Gi=(...s)=>{let{friction:e}=s[0];e=e||.2;const t=at.getContext(),n=[],i=Ne.without(Ne.keys(s[0]),"friction"),r=s[0],o=Ne.object(i,i.map(()=>0));let a=!1,c;const l=so(Ne.object(i,i.map(()=>0))),u=h=>{h*=1e3,h=To(h,0,50),a||(c=s[0].friction||e),Ne.each(i,(d,f)=>{l[d]+=(o[d]-l[d])*c*h*.16})};return at.onSetup(()=>{Ne.each(i,(h,d)=>{l[h]=r[h](t.props,{context:t}),n.push(ui(()=>{o[h]=r[h](t.props,{context:t})}))}),wo(e)?(a=!0,n.push(ui(()=>{c=e(t.props,{context:t})}))):c=e,fi.add(u)}),at.onDestroy(()=>{fi.remove(u),n.forEach(io)}),l};class xo extends ro{constructor(e){super(e),this.uniforms={rotation:{value:new cs},iridescenceMap:{value:null},...Wi.standard.uniforms},this.isMeshStandardMaterial=!0,this.type="CDStandardMaterial",this.vertexShader=`
        #define STANDARD
        varying vec3 vViewPosition;
        #ifdef USE_TRANSMISSION
            varying vec3 vWorldPosition;
        #endif
        #include <common>
        #include <batching_pars_vertex>
        #include <uv_pars_vertex>
        #include <displacementmap_pars_vertex>
        #include <color_pars_vertex>
        #include <fog_pars_vertex>
        #include <normal_pars_vertex>
        #include <morphtarget_pars_vertex>
        #include <skinning_pars_vertex>
        #include <shadowmap_pars_vertex>
        #include <logdepthbuf_pars_vertex>
        #include <clipping_planes_pars_vertex>

        uniform vec3 rotation;
        varying vec3 vPositionW;
        varying vec3 vPosition;
        varying vec3 vNormalW;
        vec2 rotate(vec2 v, float a) {
            float s = sin(a);
            float c = cos(a);
            mat2 m = mat2(c, s, -s, c);
            return m * v;
        }        
        void main() {
            #include <uv_vertex>
            #include <color_vertex>
            #include <morphinstance_vertex>
            #include <morphcolor_vertex>
            #include <batching_vertex>
            #include <beginnormal_vertex>
            #include <morphnormal_vertex>
            #include <skinbase_vertex>
            #include <skinnormal_vertex>
            #include <defaultnormal_vertex>
            #include <normal_vertex>
            #include <begin_vertex>
            #include <morphtarget_vertex>
            #include <skinning_vertex>
            #include <displacementmap_vertex>
            #include <project_vertex>
            #include <logdepthbuf_vertex>
            #include <clipping_planes_vertex>
            vViewPosition = - mvPosition.xyz;
            #include <worldpos_vertex>
            #include <shadowmap_vertex>
            #include <fog_vertex>
        #ifdef USE_TRANSMISSION
            vWorldPosition = worldPosition.xyz;
        #endif
            vPositionW = vec3( vec4( position, 1.0 ) * modelMatrix );
            vPosition = position;
            vPosition.xy = rotate(vPosition.xy, rotation.y);
            vNormalW = normalize( vec3( vec4( normal, 0.0 ) * modelMatrix ) );
        }
    `,this.fragmentShader=`
        #define STANDARD
        #ifdef PHYSICAL
            #define IOR
            #define USE_SPECULAR
        #endif
        uniform vec3 diffuse;
        uniform vec3 emissive;
        uniform float roughness;
        uniform float metalness;
        uniform float opacity;
        #ifdef IOR
            uniform float ior;
        #endif
        #ifdef USE_SPECULAR
            uniform float specularIntensity;
            uniform vec3 specularColor;
            #ifdef USE_SPECULAR_COLORMAP
                uniform sampler2D specularColorMap;
            #endif
            #ifdef USE_SPECULAR_INTENSITYMAP
                uniform sampler2D specularIntensityMap;
            #endif
        #endif
        #ifdef USE_CLEARCOAT
            uniform float clearcoat;
            uniform float clearcoatRoughness;
        #endif
        #ifdef USE_IRIDESCENCE
            uniform float iridescence;
            uniform float iridescenceIOR;
            uniform float iridescenceThicknessMinimum;
            uniform float iridescenceThicknessMaximum;
        #endif
        #ifdef USE_SHEEN
            uniform vec3 sheenColor;
            uniform float sheenRoughness;
            #ifdef USE_SHEEN_COLORMAP
                uniform sampler2D sheenColorMap;
            #endif
            #ifdef USE_SHEEN_ROUGHNESSMAP
                uniform sampler2D sheenRoughnessMap;
            #endif
        #endif
        #ifdef USE_ANISOTROPY
            uniform vec2 anisotropyVector;
            #ifdef USE_ANISOTROPYMAP
                uniform sampler2D anisotropyMap;
            #endif
        #endif
        varying vec3 vViewPosition;
        #include <common>
        #include <packing>
        #include <dithering_pars_fragment>
        #include <color_pars_fragment>
        #include <uv_pars_fragment>
        #include <map_pars_fragment>
        #include <alphamap_pars_fragment>
        #include <alphatest_pars_fragment>
        #include <alphahash_pars_fragment>
        #include <aomap_pars_fragment>
        #include <lightmap_pars_fragment>
        #include <emissivemap_pars_fragment>
        #include <iridescence_fragment>
        #include <cube_uv_reflection_fragment>
        #include <envmap_common_pars_fragment>
        #include <envmap_physical_pars_fragment>
        #include <fog_pars_fragment>
        #include <lights_pars_begin>
        #include <normal_pars_fragment>
        #include <lights_physical_pars_fragment>
        #include <transmission_pars_fragment>
        #include <shadowmap_pars_fragment>
        #include <bumpmap_pars_fragment>
        #include <normalmap_pars_fragment>
        #include <clearcoat_pars_fragment>
        #include <iridescence_pars_fragment>
        #include <roughnessmap_pars_fragment>
        #include <metalnessmap_pars_fragment>
        #include <logdepthbuf_pars_fragment>
        #include <clipping_planes_pars_fragment>

        uniform vec3 rotation;
        varying vec3 vPositionW;
        varying vec3 vNormalW;
        varying vec3 vPosition;

        uniform sampler2D iridescenceMap;

        float rand(float n){return fract(sin(n) * 43758.5453123);}

        float noise(float p){
            float fl = floor(p);
          float fc = fract(p);
            return mix(rand(fl), rand(fl + 1.0), fc);
        }
            
        float noise(vec2 n) {
            const vec2 d = vec2(0.0, 1.0);
          vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));
            return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);
        }

        float atan3(vec2 st){
            return mod(atan(st.t, st.s), 2. * PI);
        }
        void main() {
            vec4 diffuseColor = vec4( diffuse, opacity );
            #include <clipping_planes_fragment>
            ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
            vec3 totalEmissiveRadiance = emissive;
            #include <logdepthbuf_fragment>
            #include <map_fragment>
            #include <color_fragment>
            diffuseColor.rgb = mix(vec3(0.9), vec3(1.0), diffuseColor.r);
            #include <alphamap_fragment>
            #include <alphatest_fragment>
            #include <alphahash_fragment>
            #include <roughnessmap_fragment>
            // roughnessFactor = 1.0;
            float iridescence = 1.0;
            #ifdef USE_MAP
                roughnessFactor = mix(0.0, 0.7, sampledDiffuseColor.r);
                iridescence = mix(1.0, 0.0, sampledDiffuseColor.r);
            #endif
            #include <metalnessmap_fragment>
            #ifdef USE_MAP
                metalnessFactor = mix(0.4, 0.7, sampledDiffuseColor.r);
            #endif
            #include <normal_fragment_begin>
            #include <normal_fragment_maps>
            #include <clearcoat_normal_fragment_begin>
            #include <clearcoat_normal_fragment_maps>
            #include <emissivemap_fragment>
            #include <lights_physical_fragment>
            #include <lights_fragment_begin>
            #include <lights_fragment_maps>
            #include <lights_fragment_end>
            #include <aomap_fragment>
            vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
            vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
            #include <transmission_fragment>
            vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
            #ifdef USE_SHEEN
                float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
                outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
            #endif
            #ifdef USE_CLEARCOAT
                float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
                vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
                outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
            #endif

            #include <opaque_fragment>

            float fresnel = ( -min(dot(vPositionW, normalize(vNormalW) ), 0.0) );    
            // gl_FragColor.r += fresnel;
            float angleV = atan3(vPosition.xy) / (PI * 2.0);
            float iridescenceVal1 = sin(-rotation.y * 0.4 + angleV * 5.0);
            float iridescenceVal2 = cos(rotation.y * 0.2 + angleV * 4.5);
            float iridescenceVal = iridescenceVal1 * iridescenceVal2;

            vec2 n = vec2(0.0);
            n.x = (noise(vPosition.xy * 500.0) - 0.5) * 0.033;
            n.y = (noise(vPosition.xy * 500.0) - 0.5) * 0.033;

            vec3 iridescenceColor = texture2D(iridescenceMap, vec2(iridescenceVal, 0.5) + n).rgb; 
            float iridescenceMask = smoothstep(0.0, 0.1, angleV) -  smoothstep(0.9, 1.0, angleV);// * smoothstep(0.8, 1.0, angleV);
            gl_FragColor.rgb += iridescenceMask * iridescence * (iridescenceColor - 0.25);
            // gl_FragColor.rgb = vec3(iridescenceMask);



            #include <tonemapping_fragment>
            #include <colorspace_fragment>
            #include <fog_fragment>
            #include <premultiplied_alpha_fragment>
            #include <dithering_fragment>

            // gl_FragColor.rgb = vec3(angleV / (PI * 2.0));
            // gl_FragColor.a = 1.0;
        }
    `}}const So=at.Component("CD",{options:{addTo:null},props(){return{active:!0,debugMode:(s,{context:e})=>e.$rendererProps.mode==="debug",mouseDownSmooth:{value:0}}},async setup({options:s}){this.group=new hi,this.group.name="CD",this.group.scale.setScalar(3),this.group.rotation.y=2.1,this.group.position.y=.75,s.addTo&&s.addTo.add(this.group),this.innerGroup=new hi,this.innerGroup.rotation.set(-.75,-.5,-.5),this.group.add(this.innerGroup),this.hitMesh=new Cs(new di(.13,.99,32,1,32),new Je({color:"blue",side:oo})),this.hitMesh.position.z=.01,this.hitMesh.layers.enable(3),this.innerGroup.add(this.hitMesh),this.hitMeshBack=new Cs(new di(.13,.99,32,1,32).rotateZ(Math.PI),new Je({color:"red",side:ao})),this.hitMeshBack.position.z=-.02,this.hitMeshBack.layers.enable(3),this.innerGroup.add(this.hitMeshBack),this.materials=[];const[e,t,n]=await Promise.all([bo("/gl/gltf/cd/index.glb",{renderer:this.$renderer}),co("/gl/textures/envmap/studio-3.png",{renderer:this.$renderer}),ji("/gl/textures/cd-landing/iridescence-grad.png")]),{scene:i}=e;i.traverse(r=>{r.material&&r.material.map&&(r.material.map.anisotropy=this.$renderer.capabilities.getMaxAnisotropy())}),n.wrapS=pi,n.wrapT=pi,i.traverse(r=>{if(r.material)if(r.material.roughness=0,r.material.envMap=t,r.material.envMapRotation.y=1.2,r.material.envMapIntensity=1.5,r.name==="CD-Center")r.material.opacity=.8,r.material.transparent=!0;else{const o=r.material;r.material=new xo,r.material.copy(o),r.material.uniforms.iridescenceMap.value=n,this.materials.push(r.material)}}),this.innerGroup.add(i)},hooks:{"while:active"(s){this.group.rotation.y-=s*.5+this.props.mouseDownSmooth.value*s*2,this.materials.forEach(e=>e.uniforms.rotation.value.copy(this.group.rotation))},"set:debugMode"(s){this.hitMesh.material.visible=s,this.hitMeshBack.material.visible=s}}});class Co extends Je{constructor(e){super(e),this.uniforms={...Wi.basic.uniforms},this.isMeshBasicMaterial=!0,this.type="LaserGlowMaterial",this.vertexShader=`
        #include <common>
        #include <batching_pars_vertex>
        #include <uv_pars_vertex>
        #include <envmap_pars_vertex>
        #include <color_pars_vertex>
        #include <fog_pars_vertex>
        #include <morphtarget_pars_vertex>
        #include <skinning_pars_vertex>
        #include <logdepthbuf_pars_vertex>
        #include <clipping_planes_pars_vertex>
        varying vec3 vPosition;
        varying vec3 vNormal;
        void main() {
            #include <uv_vertex>
            #include <color_vertex>
            #include <morphinstance_vertex>
            #include <morphcolor_vertex>
            #include <batching_vertex>
            #if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
                #include <beginnormal_vertex>
                #include <morphnormal_vertex>
                #include <skinbase_vertex>
                #include <skinnormal_vertex>
                #include <defaultnormal_vertex>
            #endif
            #include <begin_vertex>
            #include <morphtarget_vertex>
            #include <skinning_vertex>
            #include <project_vertex>
            #include <logdepthbuf_vertex>
            #include <clipping_planes_vertex>
            #include <worldpos_vertex>
            #include <envmap_vertex>
            #include <fog_vertex>

            vec3 transformedNormal = normal;
            #ifdef USE_INSTANCING
                mat3 im = mat3( instanceMatrix );
                transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
                transformedNormal = im * transformedNormal;
            #endif
            // transformedNormal = normalMatrix * transformedNormal;

            vec4 modelPosition = modelMatrix * vec4(position, 1.0);
            vec4 modelNormal = modelMatrix * vec4(transformedNormal, 0.0);
            vPosition = modelPosition.xyz;
            vNormal = modelNormal.xyz;
        }
    `,this.fragmentShader=`
    uniform vec3 diffuse;
    uniform float opacity;
    #ifndef FLAT_SHADED
        varying vec3 vNormal;
    #endif
    #include <common>
    #include <dithering_pars_fragment>
    #include <color_pars_fragment>
    #include <uv_pars_fragment>
    #include <map_pars_fragment>
    #include <alphamap_pars_fragment>
    #include <alphatest_pars_fragment>
    #include <alphahash_pars_fragment>
    #include <aomap_pars_fragment>
    #include <lightmap_pars_fragment>
    #include <envmap_common_pars_fragment>
    #include <envmap_pars_fragment>
    #include <fog_pars_fragment>
    #include <specularmap_pars_fragment>
    #include <logdepthbuf_pars_fragment>
    #include <clipping_planes_pars_fragment>
    varying vec3 vPosition;
    // varying vec3 vNormal;
    void main() {
        vec4 diffuseColor = vec4( diffuse, opacity );
        #include <clipping_planes_fragment>
        #include <logdepthbuf_fragment>
        #include <map_fragment>
        #include <color_fragment>
        #include <alphamap_fragment>
        #include <alphatest_fragment>
        #include <alphahash_fragment>
        #include <specularmap_fragment>
        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
        #ifdef USE_LIGHTMAP
            vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
            reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
        #else
            reflectedLight.indirectDiffuse += vec3( 1.0 );
        #endif
        #include <aomap_fragment>
        reflectedLight.indirectDiffuse *= diffuseColor.rgb;
        vec3 outgoingLight = reflectedLight.indirectDiffuse;
        #include <envmap_fragment>
        #include <opaque_fragment>

        float glowInternalRadius = 6.0;
        float falloffAmount = 0.1;
        float glowSharpness = 0.0;

         // Normal
         vec3 normal = normalize(vNormal);
        //  if(!gl_FrontFacing)
            //  normal *= - 1.0;
         vec3 viewDirection = normalize(cameraPosition - vPosition);
         float fresnel = dot(viewDirection, normal);
         fresnel = pow(fresnel, glowInternalRadius + 0.1);
         float falloff = smoothstep(0., falloffAmount, fresnel);
         float fakeGlow = fresnel;
        //  fakeGlow += fresnel * glowSharpness;
         fakeGlow *= falloff;

        //  gl_FragColor.rgb *= fakeGlow;
        //  gl_FragColor.rgb = clamp(gl_FragColor.rgb, 0.0, 1.0);
        //  gl_FragColor.a *= 0.5;



        #include <tonemapping_fragment>
        #include <colorspace_fragment>
        #include <fog_fragment>
        // #ifdef USE_FOG
            gl_FragColor.a *= 1.0 - fogFactor;
        // #endif
        #include <premultiplied_alpha_fragment>
        #include <dithering_fragment>
    }
    `}}const Ao=new po(.1,.1,.1),ko=new Bi(2*.85,.5*.85),Ot=new As,On=new cs,mi=new fo,No=at.Component("LasersHits",{options:{addTo:null,lasers:[],reflections:[],hitMeshes:[]},props(){return{active:!0,debugMode:(s,{context:e})=>e.$rendererProps.mode==="debug"}},async setup({options:s}){this.mesh=new Vt(Ao,new Je({color:"white"}),s.lasers.length),this.mesh.name="LasersHits",this.mesh.layers.set(3),s.addTo&&s.addTo.add(this.mesh),this.quads=new Vt(ko,new Je({color:"white",wireframe:!0}),s.lasers.length),this.quadsWireMaterial=this.quads.material,this.quadsGlowMaterial=new Je({transparent:!0,depthWrite:!1}),(async()=>(this.quadsGlowMaterial.map=await ji("/gl/textures/cd-landing/glow-map.png"),this.quadsGlowMaterial.needsUpdate=!0))(),this.quads.name="LasersGlowHits",this.quads.renderOrder=3,this.quads.layers.enable(3),s.addTo&&s.addTo.add(this.quads),this.arrows=Ne.range(s.lasers.length).map(()=>{const e=new lo(On,On,.75,16777215,.2,.2);return s.addTo&&s.addTo.add(e),e.line.layers.set(3),e.cone.layers.set(3),e}),this.data=Ne.range(s.lasers.length).map(e=>({x:0,y:0,z:0,quaternion:new uo,visible:!1}))},destroy(){},hooks:{"set:debugMode"(s){this.quads.material=s?this.quadsWireMaterial:this.quadsGlowMaterial},"while:active"(s){this.options.lasers.forEach(({dummy:e},t)=>{mi.set(e.position,e.getWorldDirection(On));const n=mi.intersectObjects(this.options.hitMeshes);if(n.length){const i=n[0].normal,r=new ho().getNormalMatrix(n[0].object.matrixWorld);i.applyMatrix3(r).normalize(),this.options.lasers[t].length=n[0].distance,this.options.reflections[t].dummy.scale.set(1,1,1),this.options.reflections[t].dummy.position.copy(n[0].point),this.options.reflections[t].dummy.lookAt(On.copy(n[0].point).add(i)),this.data[t].quaternion.copy(this.options.reflections[t].dummy.quaternion),this.data[t].x=n[0].point.x+i.x*.03,this.data[t].y=n[0].point.y+i.y*.03,this.data[t].z=n[0].point.z+i.z*.03,this.data[t].visible=!0,this.arrows[t].position.copy(n[0].point),this.arrows[t].setDirection(i),this.arrows[t].visible=!0}else this.data[t].visible=!1,this.options.lasers[t].length=100,this.options.reflections[t].dummy.scale.set(0,0,0),this.arrows[t].visible=!1}),this.data.forEach(({x:e,y:t,z:n,quaternion:i,visible:r},o)=>{Ot.position.set(e,t,n),Ot.scale.setScalar(r?1:0),Ot.quaternion.copy(i),Ot.updateMatrix(),this.mesh.setMatrixAt(o,Ot.matrix),this.quads.setMatrixAt(o,Ot.matrix)}),this.mesh.instanceMatrix.needsUpdate=!0,this.mesh.computeBoundingSphere(),this.quads.instanceMatrix.needsUpdate=!0,this.quads.computeBoundingSphere()}}}),gi=new Ui(.017,.017,100).translate(0,50,0).rotateX(Math.PI/2),_i=new Ui(.04,.04,100).translate(0,50,0).rotateX(Math.PI/2),bs=new vo("#13FF8B"),vi=new cs,Mo=at.Component("Lasers",{options:{addTo:null,amount:5,hitMeshes:[]},props(){return{active:!0,mouse:mo(),mouseSmooth:Gi({x:s=>s.mouse.x,y:s=>s.mouse.y,friction:.05}),mouseDownSmooth:{value:0},intersects:Ne.range(5).map(()=>!1)}},async setup({options:s}){this.mesh=new Vt(gi,new Je({color:bs,transparent:!0,opacity:.8}),s.amount),this.mesh.name="Lasers",this.mesh.layers.enable(3),s.addTo&&s.addTo.add(this.mesh),this.glows=new Vt(_i,new Co({color:bs,transparent:!0,opacity:.05,blending:go,side:_o,depthWrite:!1}),s.amount),this.glows.name="LaserGlows",s.addTo&&s.addTo.add(this.glows),this.glows.renderOrder=2,this.data=Ne.range(s.amount).map(e=>{const t=new As;return this.mesh.add(t),{angle:It(e,0,s.amount,0,Math.PI*2),y:20,target:new cs,dummy:t,length:100}}),this.reflections=new Vt(gi,new Je({color:bs,transparent:!0,opacity:.8}),s.amount),this.reflections.name="LaserReflections",this.reflections.layers.enable(3),s.addTo&&s.addTo.add(this.reflections),this.reflectionGlows=new Vt(_i,this.glows.material,s.amount),this.reflectionGlows.name="LaserReflectionGlows",this.reflectionGlows.renderOrder=2,s.addTo&&s.addTo.add(this.reflectionGlows),this.reflectionsData=Ne.range(s.amount).map(e=>{const t=new As;return this.reflections.add(t),{dummy:t}}),this.hits=new No({options:{addTo:s.addTo,lasers:this.data,reflections:this.reflectionsData,hitMeshes:s.hitMeshes}})},hooks:{"while:active"(s){this.t=this.t||0,this.t+=s*.05,this.data.forEach((e,t)=>{t++;const n=It(this.props.mouseDownSmooth.value,1,0,20,It(this.props.mouseSmooth.x,-1,1,10,30,!0));e.angle+=s*.05,e.angle+=s*this.props.mouseDownSmooth.value*4;const i=n*Math.sin(e.angle),r=e.y,o=n*Math.cos(e.angle);e.dummy.position.set(i,r,o).lerp(vi.set(It(t,0,this.options.amount+1,-2,2),r,0),this.props.mouseDownSmooth.value),e.target.set(2*Math.sin(.537*this.t*t+3816.2372*t),5*Math.sin(this.t*t+83737.7463*t)+this.props.mouseSmooth.y*10,2*Math.cos(.823646*this.t*t+7361.836*t)).lerp(vi.set(It(t,0,this.options.amount+1,-2,2),0,0),this.props.mouseDownSmooth.value),e.dummy.lookAt(e.target),e.dummy.scale.set(1,1,e.length/100),e.dummy.updateMatrix(),this.mesh.setMatrixAt(t-1,e.dummy.matrix),this.glows.setMatrixAt(t-1,e.dummy.matrix)}),this.mesh.instanceMatrix.needsUpdate=!0,this.mesh.computeBoundingSphere(),this.glows.instanceMatrix.needsUpdate=!0,this.glows.computeBoundingSphere(),this.reflectionsData.forEach(({dummy:e},t)=>{this.reflections.setMatrixAt(t,e.matrix),this.reflectionGlows.setMatrixAt(t,e.matrix)}),this.props.intersects=this.reflectionsData.map(e=>e.dummy.scale.x>0),this.reflections.instanceMatrix.needsUpdate=!0,this.reflections.computeBoundingSphere(),this.reflectionGlows.instanceMatrix.needsUpdate=!0,this.reflectionGlows.computeBoundingSphere()}}}),zi="14.7.77",yi=(s,e,t)=>({endTime:e,insertTime:t,type:"exponentialRampToValue",value:s}),wi=(s,e,t)=>({endTime:e,insertTime:t,type:"linearRampToValue",value:s}),ks=(s,e)=>({startTime:e,type:"setValue",value:s}),$i=(s,e,t)=>({duration:t,startTime:e,type:"setValueCurve",values:s}),Zi=(s,e,{startTime:t,target:n,timeConstant:i})=>n+(e-n)*Math.exp((t-s)/i),Pt=s=>s.type==="exponentialRampToValue",qn=s=>s.type==="linearRampToValue",ot=s=>Pt(s)||qn(s),Fs=s=>s.type==="setValue",Ye=s=>s.type==="setValueCurve",Ln=(s,e,t,n)=>{const i=s[e];return i===void 0?n:ot(i)||Fs(i)?i.value:Ye(i)?i.values[i.values.length-1]:Zi(t,Ln(s,e-1,i.startTime,n),i)},Ti=(s,e,t,n,i)=>t===void 0?[n.insertTime,i]:ot(t)?[t.endTime,t.value]:Fs(t)?[t.startTime,t.value]:Ye(t)?[t.startTime+t.duration,t.values[t.values.length-1]]:[t.startTime,Ln(s,e-1,t.startTime,i)],Ns=s=>s.type==="cancelAndHold",Ms=s=>s.type==="cancelScheduledValues",rt=s=>Ns(s)||Ms(s)?s.cancelTime:Pt(s)||qn(s)?s.endTime:s.startTime,bi=(s,e,t,{endTime:n,value:i})=>t===i?i:0<t&&0<i||t<0&&i<0?t*(i/t)**((s-e)/(n-e)):0,xi=(s,e,t,{endTime:n,value:i})=>t+(s-e)/(n-e)*(i-t),Do=(s,e)=>{const t=Math.floor(e),n=Math.ceil(e);return t===n?s[t]:(1-(e-t))*s[t]+(1-(n-e))*s[n]},Oo=(s,{duration:e,startTime:t,values:n})=>{const i=(s-t)/e*(n.length-1);return Do(n,i)},En=s=>s.type==="setTarget";class Eo{constructor(e){this._automationEvents=[],this._currenTime=0,this._defaultValue=e}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(e){const t=rt(e);if(Ns(e)||Ms(e)){const n=this._automationEvents.findIndex(r=>Ms(e)&&Ye(r)?r.startTime+r.duration>=t:rt(r)>=t),i=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),Ns(e)){const r=this._automationEvents[this._automationEvents.length-1];if(i!==void 0&&ot(i)){if(r!==void 0&&En(r))throw new Error("The internal list is malformed.");const o=r===void 0?i.insertTime:Ye(r)?r.startTime+r.duration:rt(r),a=r===void 0?this._defaultValue:Ye(r)?r.values[r.values.length-1]:r.value,c=Pt(i)?bi(t,o,a,i):xi(t,o,a,i),l=Pt(i)?yi(c,t,this._currenTime):wi(c,t,this._currenTime);this._automationEvents.push(l)}if(r!==void 0&&En(r)&&this._automationEvents.push(ks(this.getValue(t),t)),r!==void 0&&Ye(r)&&r.startTime+r.duration>t){const o=t-r.startTime,a=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(o*a)),l=o/(c-1)*a,u=r.values.slice(0,c);if(l<1)for(let h=1;h<c;h+=1){const d=l*h%1;u[h]=r.values[h-1]*(1-d)+r.values[h]*d}this._automationEvents[this._automationEvents.length-1]=$i(u,r.startTime,o)}}}else{const n=this._automationEvents.findIndex(o=>rt(o)>t),i=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(i!==void 0&&Ye(i)&&rt(i)+i.duration>t)return!1;const r=Pt(e)?yi(e.value,e.endTime,this._currenTime):qn(e)?wi(e.value,t,this._currenTime):e;if(n===-1)this._automationEvents.push(r);else{if(Ye(e)&&t+e.duration>rt(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(e){const t=this._automationEvents.findIndex(n=>rt(n)>e);if(t>1){const n=this._automationEvents.slice(t-1),i=n[0];En(i)&&n.unshift(ks(Ln(this._automationEvents,t-2,i.startTime,this._defaultValue),i.startTime)),this._automationEvents=n}}getValue(e){if(this._automationEvents.length===0)return this._defaultValue;const t=this._automationEvents.findIndex(o=>rt(o)>e),n=this._automationEvents[t],i=(t===-1?this._automationEvents.length:t)-1,r=this._automationEvents[i];if(r!==void 0&&En(r)&&(n===void 0||!ot(n)||n.insertTime>e))return Zi(e,Ln(this._automationEvents,i-1,r.startTime,this._defaultValue),r);if(r!==void 0&&Fs(r)&&(n===void 0||!ot(n)))return r.value;if(r!==void 0&&Ye(r)&&(n===void 0||!ot(n)||r.startTime+r.duration>e))return e<r.startTime+r.duration?Oo(e,r):r.values[r.values.length-1];if(r!==void 0&&ot(r)&&(n===void 0||!ot(n)))return r.value;if(n!==void 0&&Pt(n)){const[o,a]=Ti(this._automationEvents,i,r,n,this._defaultValue);return bi(e,o,a,n)}if(n!==void 0&&qn(n)){const[o,a]=Ti(this._automationEvents,i,r,n,this._defaultValue);return xi(e,o,a,n)}return this._defaultValue}}const Io=s=>({cancelTime:s,type:"cancelAndHold"}),Ro=s=>({cancelTime:s,type:"cancelScheduledValues"}),Vo=(s,e)=>({endTime:e,type:"exponentialRampToValue",value:s}),Po=(s,e)=>({endTime:e,type:"linearRampToValue",value:s}),Fo=(s,e,t)=>({startTime:e,target:s,timeConstant:t,type:"setTarget"}),qo=()=>new DOMException("","AbortError"),Lo=s=>(e,t,[n,i,r],o)=>{s(e[i],[t,n,r],a=>a[0]===t&&a[1]===n,o)},Wo=s=>(e,t,n)=>{const i=[];for(let r=0;r<n.numberOfInputs;r+=1)i.push(new Set);s.set(e,{activeInputs:i,outputs:new Set,passiveInputs:new WeakMap,renderer:t})},jo=s=>(e,t)=>{s.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})},Wt=new WeakSet,Xi=new WeakMap,qs=new WeakMap,Hi=new WeakMap,Ls=new WeakMap,ls=new WeakMap,Yi=new WeakMap,Ds=new WeakMap,Os=new WeakMap,Es=new WeakMap,Qi={construct(){return Qi}},Bo=s=>{try{const e=new Proxy(s,Qi);new e}catch{return!1}return!0},Si=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,Ci=(s,e)=>{const t=[];let n=s.replace(/^[\s]+/,""),i=n.match(Si);for(;i!==null;){const r=i[1].slice(1,-1),o=i[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,e).toString());t.push(o),n=n.slice(i[0].length).replace(/^[\s]+/,""),i=n.match(Si)}return[t.join(";"),n]},Ai=s=>{if(s!==void 0&&!Array.isArray(s))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},ki=s=>{if(!Bo(s))throw new TypeError("The given value for processorCtor should be a constructor.");if(s.prototype===null||typeof s.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},Uo=(s,e,t,n,i,r,o,a,c,l,u,h,d)=>{let f=0;return(p,m,g={credentials:"omit"})=>{const v=u.get(p);if(v!==void 0&&v.has(m))return Promise.resolve();const b=l.get(p);if(b!==void 0){const _=b.get(m);if(_!==void 0)return _}const x=r(p),A=x.audioWorklet===void 0?i(m).then(([_,w])=>{const[T,y]=Ci(_,w),M=`${T};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${y}
})})(window,'_AWGS')`;return t(M)}).then(()=>{const _=d._AWGS.pop();if(_===void 0)throw new SyntaxError;n(x.currentTime,x.sampleRate,()=>_(class{},void 0,(w,T)=>{if(w.trim()==="")throw e();const y=Os.get(x);if(y!==void 0){if(y.has(w))throw e();ki(T),Ai(T.parameterDescriptors),y.set(w,T)}else ki(T),Ai(T.parameterDescriptors),Os.set(x,new Map([[w,T]]))},x.sampleRate,void 0,void 0))}):Promise.all([i(m),Promise.resolve(s(h,h))]).then(([[_,w],T])=>{const y=f+1;f=y;const[M,N]=Ci(_,w),O=`${M};((AudioWorkletProcessor,registerProcessor)=>{${N}
})(${T?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${T?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${T?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${y}',class extends AudioWorkletProcessor{process(){return !1}})`,F=new Blob([O],{type:"application/javascript; charset=utf-8"}),I=URL.createObjectURL(F);return x.audioWorklet.addModule(I,g).then(()=>{if(a(x))return x;const R=o(x);return R.audioWorklet.addModule(I,g).then(()=>R)}).then(R=>{if(c===null)throw new SyntaxError;try{new c(R,`__sac${y}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(I))});return b===void 0?l.set(p,new Map([[m,A]])):b.set(m,A),A.then(()=>{const _=u.get(p);_===void 0?u.set(p,new Set([m])):_.add(m)}).finally(()=>{const _=l.get(p);_!==void 0&&_.delete(m)}),A}},Pe=(s,e)=>{const t=s.get(e);if(t===void 0)throw new Error("A value with the given key could not be found.");return t},us=(s,e)=>{const t=Array.from(s).filter(e);if(t.length>1)throw Error("More than one element was found.");if(t.length===0)throw Error("No element was found.");const[n]=t;return s.delete(n),n},Ji=(s,e,t,n)=>{const i=Pe(s,e),r=us(i,o=>o[0]===t&&o[1]===n);return i.size===0&&s.delete(e),r},Tn=s=>Pe(Yi,s),jt=s=>{if(Wt.has(s))throw new Error("The AudioNode is already stored.");Wt.add(s),Tn(s).forEach(e=>e(!0))},Ki=s=>"port"in s,bn=s=>{if(!Wt.has(s))throw new Error("The AudioNode is not stored.");Wt.delete(s),Tn(s).forEach(e=>e(!1))},Is=(s,e)=>{!Ki(s)&&e.every(t=>t.size===0)&&bn(s)},Go=(s,e,t,n,i,r,o,a,c,l,u,h,d)=>{const f=new WeakMap;return(p,m,g,v,b)=>{const{activeInputs:x,passiveInputs:A}=r(m),{outputs:_}=r(p),w=a(p),T=y=>{const M=c(m),N=c(p);if(y){const k=Ji(A,p,g,v);s(x,p,k,!1),!b&&!h(p)&&t(N,M,g,v),d(m)&&jt(m)}else{const k=n(x,p,g,v);e(A,v,k,!1),!b&&!h(p)&&i(N,M,g,v);const C=o(m);if(C===0)u(m)&&Is(m,x);else{const E=f.get(m);E!==void 0&&clearTimeout(E),f.set(m,setTimeout(()=>{u(m)&&Is(m,x)},C*1e3))}}};return l(_,[m,g,v],y=>y[0]===m&&y[1]===g&&y[2]===v,!0)?(w.add(T),u(p)?s(x,p,[g,v,T],!0):e(A,v,[p,g,T],!0),!0):!1}},zo=s=>(e,t,[n,i,r],o)=>{const a=e.get(n);a===void 0?e.set(n,new Set([[i,t,r]])):s(a,[i,t,r],c=>c[0]===i&&c[1]===t,o)},$o=s=>(e,t)=>{const n=s(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});t.connect(n).connect(e.destination);const i=()=>{t.removeEventListener("ended",i),t.disconnect(n),n.disconnect()};t.addEventListener("ended",i)},Zo=s=>(e,t)=>{s(e).add(t)},Xo={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},Ho=(s,e,t,n,i,r)=>class extends s{constructor(a,c){const l=i(a),u={...Xo,...c},h=n(l,u),d=r(l)?e():null;super(a,!1,h,d),this._nativeAnalyserNode=h}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,t()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,t()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},_e=(s,e)=>s.context===e,Yo=(s,e,t)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=e(r);if(!_e(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=s(o,l)}return n.set(o,a),await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Wn=s=>{try{s.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},ze=()=>new DOMException("","IndexSizeError"),Ws=s=>{s.getChannelData=(e=>t=>{try{return e.call(s,t)}catch(n){throw n.code===12?ze():n}})(s.getChannelData)},Qo={numberOfChannels:1},Jo=(s,e,t,n,i,r,o,a)=>{let c=null;return class er{constructor(u){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:h,numberOfChannels:d,sampleRate:f}={...Qo,...u};c===null&&(c=new i(1,1,44100));const p=n!==null&&e(r,r)?new n({length:h,numberOfChannels:d,sampleRate:f}):c.createBuffer(d,h,f);if(p.numberOfChannels===0)throw t();return typeof p.copyFromChannel!="function"?(o(p),Ws(p)):e(Wn,()=>Wn(p))||a(p),s.add(p),p}static[Symbol.hasInstance](u){return u!==null&&typeof u=="object"&&Object.getPrototypeOf(u)===er.prototype||s.has(u)}}},be=-34028234663852886e22,ye=-be,Ke=s=>Wt.has(s),Ko={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},ea=(s,e,t,n,i,r,o,a)=>class extends s{constructor(l,u){const h=r(l),d={...Ko,...u},f=i(h,d),p=o(h),m=p?e():null;super(l,!1,f,m),this._audioBufferSourceNodeRenderer=m,this._isBufferNullified=!1,this._isBufferSet=d.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=t(this,p,f.playbackRate,ye,be)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?a(this,l):null;this._nativeAudioBufferSourceNode.onended=u;const h=this._nativeAudioBufferSourceNode.onended;this._onended=h!==null&&h===u?l:h}get playbackRate(){return this._playbackRate}start(l=0,u=0,h){if(this._nativeAudioBufferSourceNode.start(l,u,h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=h===void 0?[l,u]:[l,u,h]),this.context.state!=="closed"){jt(this);const d=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",d),Ke(this)&&bn(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",d)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},ta=(s,e,t,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,u)=>{let h=t(l);const d=_e(h,u);if(!d){const f={buffer:h.buffer,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,loop:h.loop,loopEnd:h.loopEnd,loopStart:h.loopStart,playbackRate:h.playbackRate.value};h=e(u,f),o!==null&&h.start(...o),a!==null&&h.stop(a)}return r.set(u,h),d?await s(u,l.playbackRate,h.playbackRate):await n(u,l.playbackRate,h.playbackRate),await i(l,u,h),h};return{set start(l){o=l},set stop(l){a=l},render(l,u){const h=r.get(u);return h!==void 0?Promise.resolve(h):c(l,u)}}},na=s=>"playbackRate"in s,sa=s=>"frequency"in s&&"gain"in s,ia=s=>"offset"in s,ra=s=>!("frequency"in s)&&"gain"in s,oa=s=>"detune"in s&&"frequency"in s,aa=s=>"pan"in s,we=s=>Pe(Xi,s),xn=s=>Pe(Hi,s),Rs=(s,e)=>{const{activeInputs:t}=we(s);t.forEach(i=>i.forEach(([r])=>{e.includes(s)||Rs(r,[...e,s])}));const n=na(s)?[s.playbackRate]:Ki(s)?Array.from(s.parameters.values()):sa(s)?[s.Q,s.detune,s.frequency,s.gain]:ia(s)?[s.offset]:ra(s)?[s.gain]:oa(s)?[s.detune,s.frequency]:aa(s)?[s.pan]:[];for(const i of n){const r=xn(i);r!==void 0&&r.activeInputs.forEach(([o])=>Rs(o,e))}Ke(s)&&bn(s)},tr=s=>{Rs(s.destination,[])},ca=s=>s===void 0||typeof s=="number"||typeof s=="string"&&(s==="balanced"||s==="interactive"||s==="playback"),la=(s,e,t,n,i,r,o,a,c)=>class extends s{constructor(u={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let h;try{h=new c(u)}catch(p){throw p.code===12&&p.message==="sampleRate is not in range"?t():p}if(h===null)throw n();if(!ca(u.latencyHint))throw new TypeError(`The provided value '${u.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(u.sampleRate!==void 0&&h.sampleRate!==u.sampleRate)throw t();super(h,2);const{latencyHint:d}=u,{sampleRate:f}=h;if(this._baseLatency=typeof h.baseLatency=="number"?h.baseLatency:d==="balanced"?512/f:d==="interactive"||d===void 0?256/f:d==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(d*f/128)))*128/f,this._nativeAudioContext=h,c.name==="webkitAudioContext"?(this._nativeGainNode=h.createGain(),this._nativeOscillatorNode=h.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(h.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,h.state==="running"){this._state="suspended";const p=()=>{this._state==="suspended"&&(this._state=null),h.removeEventListener("statechange",p)};h.addEventListener("statechange",p)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw e()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),tr(this)}))}createMediaElementSource(u){return new i(this,{mediaElement:u})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(u){return new o(this,{mediaStream:u})}createMediaStreamTrackSource(u){return new a(this,{mediaStreamTrack:u})}resume(){return this._state==="suspended"?new Promise((u,h)=>{const d=()=>{this._nativeAudioContext.removeEventListener("statechange",d),this._nativeAudioContext.state==="running"?u():this.resume().then(u,h)};this._nativeAudioContext.addEventListener("statechange",d)}):this._nativeAudioContext.resume().catch(u=>{throw u===void 0||u.code===15?e():u})}suspend(){return this._nativeAudioContext.suspend().catch(u=>{throw u===void 0?e():u})}},ua=(s,e,t,n,i,r,o,a)=>class extends s{constructor(l,u){const h=r(l),d=o(h),f=i(h,u,d),p=d?e(a):null;super(l,!1,f,p),this._isNodeOfNativeOfflineAudioContext=d,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw t();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},ha=s=>{const e=new WeakMap,t=async(n,i)=>{const r=i.destination;return e.set(i,r),await s(n,i,r),r};return{render(n,i){const r=e.get(i);return r!==void 0?Promise.resolve(r):t(n,i)}}},da=(s,e,t,n,i,r,o,a)=>(c,l)=>{const u=l.listener,h=()=>{const _=new Float32Array(1),w=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),T=o(l);let y=!1,M=[0,0,-1,0,1,0],N=[0,0,0];const k=()=>{if(y)return;y=!0;const F=n(l,256,9,0);F.onaudioprocess=({inputBuffer:I})=>{const R=[r(I,_,0),r(I,_,1),r(I,_,2),r(I,_,3),r(I,_,4),r(I,_,5)];R.some((q,B)=>q!==M[B])&&(u.setOrientation(...R),M=R);const U=[r(I,_,6),r(I,_,7),r(I,_,8)];U.some((q,B)=>q!==N[B])&&(u.setPosition(...U),N=U)},w.connect(F)},C=F=>I=>{I!==M[F]&&(M[F]=I,u.setOrientation(...M))},E=F=>I=>{I!==N[F]&&(N[F]=I,u.setPosition(...N))},O=(F,I,R)=>{const U=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:I});U.connect(w,0,F),U.start(),Object.defineProperty(U.offset,"defaultValue",{get(){return I}});const q=s({context:c},T,U.offset,ye,be);return a(q,"value",B=>()=>B.call(q),B=>W=>{try{B.call(q,W)}catch(Q){if(Q.code!==9)throw Q}k(),T&&R(W)}),q.cancelAndHoldAtTime=(B=>T?()=>{throw i()}:(...W)=>{const Q=B.apply(q,W);return k(),Q})(q.cancelAndHoldAtTime),q.cancelScheduledValues=(B=>T?()=>{throw i()}:(...W)=>{const Q=B.apply(q,W);return k(),Q})(q.cancelScheduledValues),q.exponentialRampToValueAtTime=(B=>T?()=>{throw i()}:(...W)=>{const Q=B.apply(q,W);return k(),Q})(q.exponentialRampToValueAtTime),q.linearRampToValueAtTime=(B=>T?()=>{throw i()}:(...W)=>{const Q=B.apply(q,W);return k(),Q})(q.linearRampToValueAtTime),q.setTargetAtTime=(B=>T?()=>{throw i()}:(...W)=>{const Q=B.apply(q,W);return k(),Q})(q.setTargetAtTime),q.setValueAtTime=(B=>T?()=>{throw i()}:(...W)=>{const Q=B.apply(q,W);return k(),Q})(q.setValueAtTime),q.setValueCurveAtTime=(B=>T?()=>{throw i()}:(...W)=>{const Q=B.apply(q,W);return k(),Q})(q.setValueCurveAtTime),q};return{forwardX:O(0,0,C(0)),forwardY:O(1,0,C(1)),forwardZ:O(2,-1,C(2)),positionX:O(6,0,E(0)),positionY:O(7,0,E(1)),positionZ:O(8,0,E(2)),upX:O(3,0,C(3)),upY:O(4,1,C(4)),upZ:O(5,0,C(5))}},{forwardX:d,forwardY:f,forwardZ:p,positionX:m,positionY:g,positionZ:v,upX:b,upY:x,upZ:A}=u.forwardX===void 0?h():u;return{get forwardX(){return d},get forwardY(){return f},get forwardZ(){return p},get positionX(){return m},get positionY(){return g},get positionZ(){return v},get upX(){return b},get upY(){return x},get upZ(){return A}}},jn=s=>"context"in s,Sn=s=>jn(s[0]),At=(s,e,t,n)=>{for(const i of s)if(t(i)){if(n)return!1;throw Error("The set contains at least one similar element.")}return s.add(e),!0},Ni=(s,e,[t,n],i)=>{At(s,[e,t,n],r=>r[0]===e&&r[1]===t,i)},Mi=(s,[e,t,n],i)=>{const r=s.get(e);r===void 0?s.set(e,new Set([[t,n]])):At(r,[t,n],o=>o[0]===t,i)},Zt=s=>"inputs"in s,Bn=(s,e,t,n)=>{if(Zt(e)){const i=e.inputs[n];return s.connect(i,t,0),[i,t,0]}return s.connect(e,t,n),[e,t,n]},nr=(s,e,t)=>{for(const n of s)if(n[0]===e&&n[1]===t)return s.delete(n),n;return null},pa=(s,e,t)=>us(s,n=>n[0]===e&&n[1]===t),sr=(s,e)=>{if(!Tn(s).delete(e))throw new Error("Missing the expected event listener.")},ir=(s,e,t)=>{const n=Pe(s,e),i=us(n,r=>r[0]===t);return n.size===0&&s.delete(e),i},Un=(s,e,t,n)=>{Zt(e)?s.disconnect(e.inputs[n],t,0):s.disconnect(e,t,n)},ne=s=>Pe(qs,s),tn=s=>Pe(Ls,s),wt=s=>Ds.has(s),Pn=s=>!Wt.has(s),Di=(s,e)=>new Promise(t=>{if(e!==null)t(!0);else{const n=s.createScriptProcessor(256,1,1),i=s.createGain(),r=s.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=s.createBufferSource();a.buffer=r,a.loop=!0,a.connect(n).connect(s.destination),a.connect(i),a.disconnect(i),n.onaudioprocess=c=>{const l=c.inputBuffer.getChannelData(0);Array.prototype.some.call(l,u=>u===1)?t(!0):t(!1),a.stop(),n.onaudioprocess=null,a.disconnect(n),n.disconnect(s.destination)},a.start()}}),xs=(s,e)=>{const t=new Map;for(const n of s)for(const i of n){const r=t.get(i);t.set(i,r===void 0?1:r+1)}t.forEach((n,i)=>e(i,n))},Gn=s=>"context"in s,fa=s=>{const e=new Map;s.connect=(t=>(n,i=0,r=0)=>{const o=Gn(n)?t(n,i,r):t(n,i),a=e.get(n);return a===void 0?e.set(n,[{input:r,output:i}]):a.every(c=>c.input!==r||c.output!==i)&&a.push({input:r,output:i}),o})(s.connect.bind(s)),s.disconnect=(t=>(n,i,r)=>{if(t.apply(s),n===void 0)e.clear();else if(typeof n=="number")for(const[o,a]of e){const c=a.filter(l=>l.output!==n);c.length===0?e.delete(o):e.set(o,c)}else if(e.has(n))if(i===void 0)e.delete(n);else{const o=e.get(n);if(o!==void 0){const a=o.filter(c=>c.output!==i&&(c.input!==r||r===void 0));a.length===0?e.delete(n):e.set(n,a)}}for(const[o,a]of e)a.forEach(c=>{Gn(o)?s.connect(o,c.output,c.input):s.connect(o,c.output)})})(s.disconnect)},ma=(s,e,t,n)=>{const{activeInputs:i,passiveInputs:r}=xn(e),{outputs:o}=we(s),a=Tn(s),c=l=>{const u=ne(s),h=tn(e);if(l){const d=ir(r,s,t);Ni(i,s,d,!1),!n&&!wt(s)&&u.connect(h,t)}else{const d=pa(i,s,t);Mi(r,d,!1),!n&&!wt(s)&&u.disconnect(h,t)}};return At(o,[e,t],l=>l[0]===e&&l[1]===t,!0)?(a.add(c),Ke(s)?Ni(i,s,[t,c],!0):Mi(r,[s,t,c],!0),!0):!1},ga=(s,e,t,n)=>{const{activeInputs:i,passiveInputs:r}=we(e),o=nr(i[n],s,t);return o===null?[Ji(r,s,t,n)[2],!1]:[o[2],!0]},_a=(s,e,t)=>{const{activeInputs:n,passiveInputs:i}=xn(e),r=nr(n,s,t);return r===null?[ir(i,s,t)[1],!1]:[r[2],!0]},js=(s,e,t,n,i)=>{const[r,o]=ga(s,t,n,i);if(r!==null&&(sr(s,r),o&&!e&&!wt(s)&&Un(ne(s),ne(t),n,i)),Ke(t)){const{activeInputs:a}=we(t);Is(t,a)}},Bs=(s,e,t,n)=>{const[i,r]=_a(s,t,n);i!==null&&(sr(s,i),r&&!e&&!wt(s)&&ne(s).disconnect(tn(t),n))},va=(s,e)=>{const t=we(s),n=[];for(const i of t.outputs)Sn(i)?js(s,e,...i):Bs(s,e,...i),n.push(i[0]);return t.outputs.clear(),n},ya=(s,e,t)=>{const n=we(s),i=[];for(const r of n.outputs)r[1]===t&&(Sn(r)?js(s,e,...r):Bs(s,e,...r),i.push(r[0]),n.outputs.delete(r));return i},wa=(s,e,t,n,i)=>{const r=we(s);return Array.from(r.outputs).filter(o=>o[0]===t&&(n===void 0||o[1]===n)&&(i===void 0||o[2]===i)).map(o=>(Sn(o)?js(s,e,...o):Bs(s,e,...o),r.outputs.delete(o),o[0]))},Ta=(s,e,t,n,i,r,o,a,c,l,u,h,d,f,p,m)=>class extends l{constructor(v,b,x,A){super(x),this._context=v,this._nativeAudioNode=x;const _=u(v);h(_)&&t(Di,()=>Di(_,m))!==!0&&fa(x),qs.set(this,x),Yi.set(this,new Set),v.state!=="closed"&&b&&jt(this),s(this,A,x)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(v){this._nativeAudioNode.channelCount=v}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(v){this._nativeAudioNode.channelCountMode=v}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(v){this._nativeAudioNode.channelInterpretation=v}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(v,b=0,x=0){if(b<0||b>=this._nativeAudioNode.numberOfOutputs)throw i();const A=u(this._context),_=p(A);if(d(v)||f(v))throw r();if(jn(v)){const y=ne(v);try{const N=Bn(this._nativeAudioNode,y,b,x),k=Pn(this);(_||k)&&this._nativeAudioNode.disconnect(...N),this.context.state!=="closed"&&!k&&Pn(v)&&jt(v)}catch(N){throw N.code===12?r():N}if(e(this,v,b,x,_)){const N=c([this],v);xs(N,n(_))}return v}const w=tn(v);if(w.name==="playbackRate"&&w.maxValue===1024)throw o();try{this._nativeAudioNode.connect(w,b),(_||Pn(this))&&this._nativeAudioNode.disconnect(w,b)}catch(y){throw y.code===12?r():y}if(ma(this,v,b,_)){const y=c([this],v);xs(y,n(_))}}disconnect(v,b,x){let A;const _=u(this._context),w=p(_);if(v===void 0)A=va(this,w);else if(typeof v=="number"){if(v<0||v>=this.numberOfOutputs)throw i();A=ya(this,w,v)}else{if(b!==void 0&&(b<0||b>=this.numberOfOutputs)||jn(v)&&x!==void 0&&(x<0||x>=v.numberOfInputs))throw i();if(A=wa(this,w,v,b,x),A.length===0)throw r()}for(const T of A){const y=c([this],T);xs(y,a)}}},ba=(s,e,t,n,i,r,o,a,c,l,u,h,d)=>(f,p,m,g=null,v=null)=>{const b=m.value,x=new Eo(b),A=p?n(x):null,_={get defaultValue(){return b},get maxValue(){return g===null?m.maxValue:g},get minValue(){return v===null?m.minValue:v},get value(){return m.value},set value(w){m.value=w,_.setValueAtTime(w,f.context.currentTime)},cancelAndHoldAtTime(w){if(typeof m.cancelAndHoldAtTime=="function")A===null&&x.flush(f.context.currentTime),x.add(i(w)),m.cancelAndHoldAtTime(w);else{const T=Array.from(x).pop();A===null&&x.flush(f.context.currentTime),x.add(i(w));const y=Array.from(x).pop();m.cancelScheduledValues(w),T!==y&&y!==void 0&&(y.type==="exponentialRampToValue"?m.exponentialRampToValueAtTime(y.value,y.endTime):y.type==="linearRampToValue"?m.linearRampToValueAtTime(y.value,y.endTime):y.type==="setValue"?m.setValueAtTime(y.value,y.startTime):y.type==="setValueCurve"&&m.setValueCurveAtTime(y.values,y.startTime,y.duration))}return _},cancelScheduledValues(w){return A===null&&x.flush(f.context.currentTime),x.add(r(w)),m.cancelScheduledValues(w),_},exponentialRampToValueAtTime(w,T){if(w===0)throw new RangeError;if(!Number.isFinite(T)||T<0)throw new RangeError;const y=f.context.currentTime;return A===null&&x.flush(y),Array.from(x).length===0&&(x.add(l(b,y)),m.setValueAtTime(b,y)),x.add(o(w,T)),m.exponentialRampToValueAtTime(w,T),_},linearRampToValueAtTime(w,T){const y=f.context.currentTime;return A===null&&x.flush(y),Array.from(x).length===0&&(x.add(l(b,y)),m.setValueAtTime(b,y)),x.add(a(w,T)),m.linearRampToValueAtTime(w,T),_},setTargetAtTime(w,T,y){return A===null&&x.flush(f.context.currentTime),x.add(c(w,T,y)),m.setTargetAtTime(w,T,y),_},setValueAtTime(w,T){return A===null&&x.flush(f.context.currentTime),x.add(l(w,T)),m.setValueAtTime(w,T),_},setValueCurveAtTime(w,T,y){const M=w instanceof Float32Array?w:new Float32Array(w);if(h!==null&&h.name==="webkitAudioContext"){const N=T+y,k=f.context.sampleRate,C=Math.ceil(T*k),E=Math.floor(N*k),O=E-C,F=new Float32Array(O);for(let R=0;R<O;R+=1){const U=(M.length-1)/y*((C+R)/k-T),q=Math.floor(U),B=Math.ceil(U);F[R]=q===B?M[q]:(1-(U-q))*M[q]+(1-(B-U))*M[B]}A===null&&x.flush(f.context.currentTime),x.add(u(F,T,y)),m.setValueCurveAtTime(F,T,y);const I=E/k;I<N&&d(_,F[F.length-1],I),d(_,M[M.length-1],N)}else A===null&&x.flush(f.context.currentTime),x.add(u(M,T,y)),m.setValueCurveAtTime(M,T,y);return _}};return t.set(_,m),e.set(_,f),s(_,A),_},xa=s=>({replay(e){for(const t of s)if(t.type==="exponentialRampToValue"){const{endTime:n,value:i}=t;e.exponentialRampToValueAtTime(i,n)}else if(t.type==="linearRampToValue"){const{endTime:n,value:i}=t;e.linearRampToValueAtTime(i,n)}else if(t.type==="setTarget"){const{startTime:n,target:i,timeConstant:r}=t;e.setTargetAtTime(i,n,r)}else if(t.type==="setValue"){const{startTime:n,value:i}=t;e.setValueAtTime(i,n)}else if(t.type==="setValueCurve"){const{duration:n,startTime:i,values:r}=t;e.setValueCurveAtTime(r,i,n)}else throw new Error("Can't apply an unknown automation.")}});class rr{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e,t=null){return this._map.forEach((n,i)=>e.call(t,n,i,this))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const Sa={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},Ca=(s,e,t,n,i,r,o,a,c,l,u,h,d,f)=>class extends e{constructor(m,g,v){var b;const x=a(m),A=c(x),_=u({...Sa,...v});d(_);const w=Os.get(x),T=w==null?void 0:w.get(g),y=A||x.state!=="closed"?x:(b=o(x))!==null&&b!==void 0?b:x,M=i(y,A?null:m.baseLatency,l,g,T,_),N=A?n(g,_,T):null;super(m,!0,M,N);const k=[];M.parameters.forEach((E,O)=>{const F=t(this,A,E);k.push([O,F])}),this._nativeAudioWorkletNode=M,this._onprocessorerror=null,this._parameters=new rr(k),A&&s(x,this);const{activeInputs:C}=r(this);h(M,C)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(m){const g=typeof m=="function"?f(this,m):null;this._nativeAudioWorkletNode.onprocessorerror=g;const v=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=v!==null&&v===g?m:v}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function zn(s,e,t,n,i){if(typeof s.copyFromChannel=="function")e[t].byteLength===0&&(e[t]=new Float32Array(128)),s.copyFromChannel(e[t],n,i);else{const r=s.getChannelData(n);if(e[t].byteLength===0)e[t]=r.slice(i,i+128);else{const o=new Float32Array(r.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);e[t].set(o)}}}const or=(s,e,t,n,i)=>{typeof s.copyToChannel=="function"?e[t].byteLength!==0&&s.copyToChannel(e[t],n,i):e[t].byteLength!==0&&s.getChannelData(n).set(e[t],i)},$n=(s,e)=>{const t=[];for(let n=0;n<s;n+=1){const i=[],r=typeof e=="number"?e:e[n];for(let o=0;o<r;o+=1)i.push(new Float32Array(128));t.push(i)}return t},Aa=(s,e)=>{const t=Pe(Es,s),n=ne(e);return Pe(t,n)},ka=async(s,e,t,n,i,r,o)=>{const a=e===null?Math.ceil(s.context.length/128)*128:e.length,c=n.channelCount*n.numberOfInputs,l=i.reduce((g,v)=>g+v,0),u=l===0?null:t.createBuffer(l,a,t.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const h=we(s),d=await Aa(t,s),f=$n(n.numberOfInputs,n.channelCount),p=$n(n.numberOfOutputs,i),m=Array.from(s.parameters.keys()).reduce((g,v)=>({...g,[v]:new Float32Array(128)}),{});for(let g=0;g<a;g+=128){if(n.numberOfInputs>0&&e!==null)for(let v=0;v<n.numberOfInputs;v+=1)for(let b=0;b<n.channelCount;b+=1)zn(e,f[v],b,b,g);r.parameterDescriptors!==void 0&&e!==null&&r.parameterDescriptors.forEach(({name:v},b)=>{zn(e,m,v,c+b,g)});for(let v=0;v<n.numberOfInputs;v+=1)for(let b=0;b<i[v];b+=1)p[v][b].byteLength===0&&(p[v][b]=new Float32Array(128));try{const v=f.map((x,A)=>h.activeInputs[A].size===0?[]:x),b=o(g/t.sampleRate,t.sampleRate,()=>d.process(v,p,m));if(u!==null)for(let x=0,A=0;x<n.numberOfOutputs;x+=1){for(let _=0;_<i[x];_+=1)or(u,p[x],_,A+_,g);A+=i[x]}if(!b)break}catch(v){s.dispatchEvent(new ErrorEvent("processorerror",{colno:v.colno,filename:v.filename,lineno:v.lineno,message:v.message}));break}}return u},Na=(s,e,t,n,i,r,o,a,c,l,u,h,d,f,p,m)=>(g,v,b)=>{const x=new WeakMap;let A=null;const _=async(w,T)=>{let y=u(w),M=null;const N=_e(y,T),k=Array.isArray(v.outputChannelCount)?v.outputChannelCount:Array.from(v.outputChannelCount);if(h===null){const C=k.reduce((I,R)=>I+R,0),E=i(T,{channelCount:Math.max(1,C),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,C)}),O=[];for(let I=0;I<w.numberOfOutputs;I+=1)O.push(n(T,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:k[I]}));const F=o(T,{channelCount:v.channelCount,channelCountMode:v.channelCountMode,channelInterpretation:v.channelInterpretation,gain:1});F.connect=e.bind(null,O),F.disconnect=c.bind(null,O),M=[E,O,F]}else N||(y=new h(T,g));if(x.set(T,M===null?y:M[2]),M!==null){if(A===null){if(b===void 0)throw new Error("Missing the processor constructor.");if(d===null)throw new Error("Missing the native OfflineAudioContext constructor.");const R=w.channelCount*w.numberOfInputs,U=b.parameterDescriptors===void 0?0:b.parameterDescriptors.length,q=R+U;A=ka(w,q===0?null:await(async()=>{const W=new d(q,Math.ceil(w.context.length/128)*128,T.sampleRate),Q=[],Ce=[];for(let se=0;se<v.numberOfInputs;se+=1)Q.push(o(W,{channelCount:v.channelCount,channelCountMode:v.channelCountMode,channelInterpretation:v.channelInterpretation,gain:1})),Ce.push(i(W,{channelCount:v.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:v.channelCount}));const Ae=await Promise.all(Array.from(w.parameters.values()).map(async se=>{const ve=r(W,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:se.value});return await f(W,se,ve.offset),ve})),z=n(W,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,R+U)});for(let se=0;se<v.numberOfInputs;se+=1){Q[se].connect(Ce[se]);for(let ve=0;ve<v.channelCount;ve+=1)Ce[se].connect(z,ve,se*v.channelCount+ve)}for(const[se,ve]of Ae.entries())ve.connect(z,0,R+se),ve.start(0);return z.connect(W.destination),await Promise.all(Q.map(se=>p(w,W,se))),m(W)})(),T,v,k,b,l)}const C=await A,E=t(T,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[O,F,I]=M;C!==null&&(E.buffer=C,E.start(0)),E.connect(O);for(let R=0,U=0;R<w.numberOfOutputs;R+=1){const q=F[R];for(let B=0;B<k[R];B+=1)O.connect(q,U+B,B);U+=k[R]}return I}if(N)for(const[C,E]of w.parameters.entries())await s(T,E,y.parameters.get(C));else for(const[C,E]of w.parameters.entries())await f(T,E,y.parameters.get(C));return await p(w,T,y),y};return{render(w,T){a(T,w);const y=x.get(T);return y!==void 0?Promise.resolve(y):_(w,T)}}},Ma=(s,e,t,n,i,r,o,a,c,l,u,h,d,f,p,m,g,v,b,x)=>class extends p{constructor(_,w){super(_,w),this._nativeContext=_,this._audioWorklet=s===void 0?void 0:{addModule:(T,y)=>s(this,T,y)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new i(this)}createBuffer(_,w,T){return new t({length:w,numberOfChannels:_,sampleRate:T})}createBufferSource(){return new n(this)}createChannelMerger(_=6){return new r(this,{numberOfInputs:_})}createChannelSplitter(_=6){return new o(this,{numberOfOutputs:_})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(_=1){return new u(this,{maxDelayTime:_})}createDynamicsCompressor(){return new h(this)}createGain(){return new d(this)}createIIRFilter(_,w){return new f(this,{feedback:w,feedforward:_})}createOscillator(){return new m(this)}createPanner(){return new g(this)}createPeriodicWave(_,w,T={disableNormalization:!1}){return new v(this,{...T,imag:w,real:_})}createStereoPanner(){return new b(this)}createWaveShaper(){return new x(this)}decodeAudioData(_,w,T){return l(this._nativeContext,_).then(y=>(typeof w=="function"&&w(y),y),y=>{throw typeof T=="function"&&T(y),y})}},Da={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},Oa=(s,e,t,n,i,r,o,a)=>class extends s{constructor(l,u){const h=r(l),d={...Da,...u},f=i(h,d),p=o(h),m=p?t():null;super(l,!1,f,m),this._Q=e(this,p,f.Q,ye,be),this._detune=e(this,p,f.detune,1200*Math.log2(ye),-1200*Math.log2(ye)),this._frequency=e(this,p,f.frequency,l.sampleRate/2,0),this._gain=e(this,p,f.gain,40*Math.log10(ye),be),this._nativeBiquadFilterNode=f,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,u,h){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,u,h)}catch(d){throw d.code===11?n():d}if(l.length!==u.length||u.length!==h.length)throw n()}},Ea=(s,e,t,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=t(a);const u=_e(l,c);if(!u){const h={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=e(c,h)}return r.set(c,l),u?(await s(c,a.Q,l.Q),await s(c,a.detune,l.detune),await s(c,a.frequency,l.frequency),await s(c,a.gain,l.gain)):(await n(c,a.Q,l.Q),await n(c,a.detune,l.detune),await n(c,a.frequency,l.frequency),await n(c,a.gain,l.gain)),await i(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},Ia=(s,e)=>(t,n)=>{const i=e.get(t);if(i!==void 0)return i;const r=s.get(t);if(r!==void 0)return r;try{const o=n();return o instanceof Promise?(s.set(t,o),o.catch(()=>!1).then(a=>(s.delete(t),e.set(t,a),a))):(e.set(t,o),o)}catch{return e.set(t,!1),!1}},Ra={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},Va=(s,e,t,n,i)=>class extends s{constructor(o,a){const c=n(o),l={...Ra,...a},u=t(c,l),h=i(c)?e():null;super(o,!1,u,h)}},Pa=(s,e,t)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=e(r);if(!_e(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=s(o,l)}return n.set(o,a),await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Fa={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},qa=(s,e,t,n,i,r)=>class extends s{constructor(a,c){const l=n(a),u=r({...Fa,...c}),h=t(l,u),d=i(l)?e():null;super(a,!1,h,d)}},La=(s,e,t)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=e(r);if(!_e(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=s(o,l)}return n.set(o,a),await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Wa=s=>(e,t,n)=>s(t,e,n),ja=s=>(e,t,n=0,i=0)=>{const r=e[n];if(r===void 0)throw s();return Gn(t)?r.connect(t,0,i):r.connect(t,0)},Ba=s=>(e,t)=>{const n=s(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=e.createBuffer(1,2,44100);return n.buffer=i,n.loop=!0,n.connect(t),n.start(),()=>{n.stop(),n.disconnect(t)}},Ua={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},Ga=(s,e,t,n,i,r,o)=>class extends s{constructor(c,l){const u=i(c),h={...Ua,...l},d=n(u,h),f=r(u),p=f?t():null;super(c,!1,d,p),this._constantSourceNodeRenderer=p,this._nativeConstantSourceNode=d,this._offset=e(this,f,d.offset,ye,be),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=l;const u=this._nativeConstantSourceNode.onended;this._onended=u!==null&&u===l?c:u}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){jt(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),Ke(this)&&bn(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},za=(s,e,t,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,u)=>{let h=t(l);const d=_e(h,u);if(!d){const f={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,offset:h.offset.value};h=e(u,f),o!==null&&h.start(o),a!==null&&h.stop(a)}return r.set(u,h),d?await s(u,l.offset,h.offset):await n(u,l.offset,h.offset),await i(l,u,h),h};return{set start(l){o=l},set stop(l){a=l},render(l,u){const h=r.get(u);return h!==void 0?Promise.resolve(h):c(l,u)}}},$a=s=>e=>(s[0]=e,s[0]),Za={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Xa=(s,e,t,n,i,r)=>class extends s{constructor(a,c){const l=n(a),u={...Za,...c},h=t(l,u),f=i(l)?e():null;super(a,!1,h,f),this._isBufferNullified=!1,this._nativeConvolverNode=h,u.buffer!==null&&r(this,u.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},Ha=(s,e,t)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=e(r);if(!_e(a,o)){const l={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=s(o,l)}return n.set(o,a),Zt(a)?await t(r,o,a.inputs[0]):await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Ya=(s,e)=>(t,n,i)=>{if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(t,n,i)}catch(r){throw r.name==="SyntaxError"?s():r}},Qa=()=>new DOMException("","DataCloneError"),Oi=s=>{const{port1:e,port2:t}=new MessageChannel;return new Promise(n=>{const i=()=>{t.onmessage=null,e.close(),t.close(),n()};t.onmessage=()=>i();try{e.postMessage(s,[s])}catch{}finally{i()}})},Ja=(s,e,t,n,i,r,o,a,c,l,u)=>(h,d)=>{const f=o(h)?h:r(h);if(i.has(d)){const p=t();return Promise.reject(p)}try{i.add(d)}catch{}return e(c,()=>c(f))?f.decodeAudioData(d).then(p=>(Oi(d).catch(()=>{}),e(a,()=>a(p))||u(p),s.add(p),p)):new Promise((p,m)=>{const g=async()=>{try{await Oi(d)}catch{}},v=b=>{m(b),g()};try{f.decodeAudioData(d,b=>{typeof b.copyFromChannel!="function"&&(l(b),Ws(b)),s.add(b),g().then(()=>p(b))},b=>{v(b===null?n():b)})}catch(b){v(b)}})},Ka=(s,e,t,n,i,r,o,a)=>(c,l)=>{const u=e.get(c);if(u===void 0)throw new Error("Missing the expected cycle count.");const h=r(c.context),d=a(h);if(u===l){if(e.delete(c),!d&&o(c)){const f=n(c),{outputs:p}=t(c);for(const m of p)if(Sn(m)){const g=n(m[0]);s(f,g,m[1],m[2])}else{const g=i(m[0]);f.connect(g,m[1])}}}else e.set(c,u-l)},ec={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},tc=(s,e,t,n,i,r,o)=>class extends s{constructor(c,l){const u=i(c),h={...ec,...l},d=n(u,h),f=r(u),p=f?t(h.maxDelayTime):null;super(c,!1,d,p),this._delayTime=e(this,f,d.delayTime),o(this,h.maxDelayTime)}get delayTime(){return this._delayTime}},nc=(s,e,t,n,i)=>r=>{const o=new WeakMap,a=async(c,l)=>{let u=t(c);const h=_e(u,l);if(!h){const d={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:r};u=e(l,d)}return o.set(l,u),h?await s(l,c.delayTime,u.delayTime):await n(l,c.delayTime,u.delayTime),await i(c,l,u),u};return{render(c,l){const u=o.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},sc=s=>(e,t,n,i)=>s(e[i],r=>r[0]===t&&r[1]===n),ic=s=>(e,t)=>{s(e).delete(t)},rc=s=>"delayTime"in s,oc=(s,e,t)=>function n(i,r){const o=jn(r)?r:t(s,r);if(rc(o))return[];if(i[0]===o)return[i];if(i.includes(o))return[];const{outputs:a}=e(o);return Array.from(a).map(c=>n([...i,o],c[0])).reduce((c,l)=>c.concat(l),[])},In=(s,e,t)=>{const n=e[t];if(n===void 0)throw s();return n},ac=s=>(e,t=void 0,n=void 0,i=0)=>t===void 0?e.forEach(r=>r.disconnect()):typeof t=="number"?In(s,e,t).disconnect():Gn(t)?n===void 0?e.forEach(r=>r.disconnect(t)):i===void 0?In(s,e,n).disconnect(t,0):In(s,e,n).disconnect(t,0,i):n===void 0?e.forEach(r=>r.disconnect(t)):In(s,e,n).disconnect(t,0),cc={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},lc=(s,e,t,n,i,r,o,a)=>class extends s{constructor(l,u){const h=r(l),d={...cc,...u},f=n(h,d),p=o(h),m=p?t():null;super(l,!1,f,m),this._attack=e(this,p,f.attack),this._knee=e(this,p,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=e(this,p,f.ratio),this._release=e(this,p,f.release),this._threshold=e(this,p,f.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const u=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=u,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const u=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=u,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},uc=(s,e,t,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=t(a);const u=_e(l,c);if(!u){const h={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=e(c,h)}return r.set(c,l),u?(await s(c,a.attack,l.attack),await s(c,a.knee,l.knee),await s(c,a.ratio,l.ratio),await s(c,a.release,l.release),await s(c,a.threshold,l.threshold)):(await n(c,a.attack,l.attack),await n(c,a.knee,l.knee),await n(c,a.ratio,l.ratio),await n(c,a.release,l.release),await n(c,a.threshold,l.threshold)),await i(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},hc=()=>new DOMException("","EncodingError"),dc=s=>e=>new Promise((t,n)=>{if(s===null){n(new SyntaxError);return}const i=s.document.head;if(i===null)n(new SyntaxError);else{const r=s.document.createElement("script"),o=new Blob([e],{type:"application/javascript"}),a=URL.createObjectURL(o),c=s.onerror,l=()=>{s.onerror=c,URL.revokeObjectURL(a)};s.onerror=(u,h,d,f,p)=>{if(h===a||h===s.location.href&&d===1&&f===1)return l(),n(p),!1;if(c!==null)return c(u,h,d,f,p)},r.onerror=()=>{l(),n(new SyntaxError)},r.onload=()=>{l(),t()},r.src=a,r.type="module",i.appendChild(r)}}),pc=s=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(t,n,i){if(n!==null){let r=this._listeners.get(n);r===void 0&&(r=s(this,n),typeof n=="function"&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(t,r,i)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,n,i){const r=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(t,r===void 0?null:r,i)}},fc=s=>(e,t,n)=>{Object.defineProperties(s,{currentFrame:{configurable:!0,get(){return Math.round(e*t)}},currentTime:{configurable:!0,get(){return e}}});try{return n()}finally{s!==null&&(delete s.currentFrame,delete s.currentTime)}},mc=s=>async e=>{try{const t=await fetch(e);if(t.ok)return[await t.text(),t.url]}catch{}throw s()},gc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},_c=(s,e,t,n,i,r)=>class extends s{constructor(a,c){const l=i(a),u={...gc,...c},h=n(l,u),d=r(l),f=d?t():null;super(a,!1,h,f),this._gain=e(this,d,h.gain,ye,be)}get gain(){return this._gain}},vc=(s,e,t,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=t(a);const u=_e(l,c);if(!u){const h={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=e(c,h)}return r.set(c,l),u?await s(c,a.gain,l.gain):await n(c,a.gain,l.gain),await i(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},yc=(s,e)=>t=>e(s,t),wc=s=>e=>{const t=s(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return t.renderer},Tc=s=>e=>{var t;return(t=s.get(e))!==null&&t!==void 0?t:0},bc=s=>e=>{const t=s(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return t.renderer},xc=s=>e=>s.get(e),fe=()=>new DOMException("","InvalidStateError"),Sc=s=>e=>{const t=s.get(e);if(t===void 0)throw fe();return t},Cc=(s,e)=>t=>{let n=s.get(t);if(n!==void 0)return n;if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new e(1,1,44100),s.set(t,n),n},Ac=s=>e=>{const t=s.get(e);if(t===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return t},hs=()=>new DOMException("","InvalidAccessError"),kc=s=>{s.getFrequencyResponse=(e=>(t,n,i)=>{if(t.length!==n.length||n.length!==i.length)throw hs();return e.call(s,t,n,i)})(s.getFrequencyResponse)},Nc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},Mc=(s,e,t,n,i,r)=>class extends s{constructor(a,c){const l=n(a),u=i(l),h={...Nc,...c},d=e(l,u?null:a.baseLatency,h),f=u?t(h.feedback,h.feedforward):null;super(a,!1,d,f),kc(d),this._nativeIIRFilterNode=d,r(this,1)}getFrequencyResponse(a,c,l){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,l)}},ar=(s,e,t,n,i,r,o,a,c,l,u)=>{const h=l.length;let d=a;for(let f=0;f<h;f+=1){let p=t[0]*l[f];for(let m=1;m<i;m+=1){const g=d-m&c-1;p+=t[m]*r[g],p-=s[m]*o[g]}for(let m=i;m<n;m+=1)p+=t[m]*r[d-m&c-1];for(let m=i;m<e;m+=1)p-=s[m]*o[d-m&c-1];r[d]=l[f],o[d]=p,d=d+1&c-1,u[f]=p}return d},Dc=(s,e,t,n)=>{const i=t instanceof Float64Array?t:new Float64Array(t),r=n instanceof Float64Array?n:new Float64Array(n),o=i.length,a=r.length,c=Math.min(o,a);if(i[0]!==1){for(let p=0;p<o;p+=1)r[p]/=i[0];for(let p=1;p<a;p+=1)i[p]/=i[0]}const l=32,u=new Float32Array(l),h=new Float32Array(l),d=e.createBuffer(s.numberOfChannels,s.length,s.sampleRate),f=s.numberOfChannels;for(let p=0;p<f;p+=1){const m=s.getChannelData(p),g=d.getChannelData(p);u.fill(0),h.fill(0),ar(i,o,r,a,c,u,h,0,l,m,g)}return d},Oc=(s,e,t,n,i)=>(r,o)=>{const a=new WeakMap;let c=null;const l=async(u,h)=>{let d=null,f=e(u);const p=_e(f,h);if(h.createIIRFilter===void 0?d=s(h,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):p||(f=h.createIIRFilter(o,r)),a.set(h,d===null?f:d),d!==null){if(c===null){if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");const g=new t(u.context.destination.channelCount,u.context.length,h.sampleRate);c=(async()=>{await n(u,g,g.destination);const v=await i(g);return Dc(v,h,r,o)})()}const m=await c;return d.buffer=m,d.start(0),d}return await n(u,h,f),f};return{render(u,h){const d=a.get(h);return d!==void 0?Promise.resolve(d):l(u,h)}}},Ec=(s,e,t,n,i,r)=>o=>(a,c)=>{const l=s.get(a);if(l===void 0){if(!o&&r(a)){const u=n(a),{outputs:h}=t(a);for(const d of h)if(Sn(d)){const f=n(d[0]);e(u,f,d[1],d[2])}else{const f=i(d[0]);u.disconnect(f,d[1])}}s.set(a,c)}else s.set(a,l+c)},Ic=(s,e)=>t=>{const n=s.get(t);return e(n)||e(t)},Rc=(s,e)=>t=>s.has(t)||e(t),Vc=(s,e)=>t=>s.has(t)||e(t),Pc=(s,e)=>t=>{const n=s.get(t);return e(n)||e(t)},Fc=s=>e=>s!==null&&e instanceof s,qc=s=>e=>s!==null&&typeof s.AudioNode=="function"&&e instanceof s.AudioNode,Lc=s=>e=>s!==null&&typeof s.AudioParam=="function"&&e instanceof s.AudioParam,Wc=(s,e)=>t=>s(t)||e(t),jc=s=>e=>s!==null&&e instanceof s,Bc=s=>s!==null&&s.isSecureContext,Uc=(s,e,t,n)=>class extends s{constructor(r,o){const a=t(r),c=e(a,o);if(n(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},Gc={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},zc=(s,e,t,n)=>class extends s{constructor(r,o){const a=t(r);if(n(a))throw new TypeError;const c={...Gc,...o},l=e(a,c);super(r,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},$c=(s,e,t,n)=>class extends s{constructor(r,o){const a=t(r),c=e(a,o);if(n(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},Zc=(s,e,t)=>class extends s{constructor(i,r){const o=t(i),a=e(o,r);super(i,!0,a,null)}},Xc=(s,e,t,n,i,r)=>class extends t{constructor(a,c){super(a),this._nativeContext=a,ls.set(this,a),n(a)&&i.set(a,new Set),this._destination=new s(this,c),this._listener=e(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===c?a:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},nn=s=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const t=s.decodeAudioData(e.buffer,()=>{});return t===void 0?!1:(t.catch(()=>{}),!0)}catch{}return!1},Hc=(s,e)=>(t,n,i)=>{const r=new Set;return t.connect=(o=>(a,c=0,l=0)=>{const u=r.size===0;if(e(a))return o.call(t,a,c,l),s(r,[a,c,l],h=>h[0]===a&&h[1]===c&&h[2]===l,!0),u&&n(),a;o.call(t,a,c),s(r,[a,c],h=>h[0]===a&&h[1]===c,!0),u&&n()})(t.connect),t.disconnect=(o=>(a,c,l)=>{const u=r.size>0;if(a===void 0)o.apply(t),r.clear();else if(typeof a=="number"){o.call(t,a);for(const d of r)d[1]===a&&r.delete(d)}else{e(a)?o.call(t,a,c,l):o.call(t,a,c);for(const d of r)d[0]===a&&(c===void 0||d[1]===c)&&(l===void 0||d[2]===l)&&r.delete(d)}const h=r.size===0;u&&h&&i()})(t.disconnect),t},ie=(s,e,t)=>{const n=e[t];n!==void 0&&n!==s[t]&&(s[t]=n)},pe=(s,e)=>{ie(s,e,"channelCount"),ie(s,e,"channelCountMode"),ie(s,e,"channelInterpretation")},Ei=s=>typeof s.getFloatTimeDomainData=="function",Yc=s=>{s.getFloatTimeDomainData=e=>{const t=new Uint8Array(e.length);s.getByteTimeDomainData(t);const n=Math.max(t.length,s.fftSize);for(let i=0;i<n;i+=1)e[i]=(t[i]-128)*.0078125;return e}},Qc=(s,e)=>(t,n)=>{const i=t.createAnalyser();if(pe(i,n),!(n.maxDecibels>n.minDecibels))throw e();return ie(i,n,"fftSize"),ie(i,n,"maxDecibels"),ie(i,n,"minDecibels"),ie(i,n,"smoothingTimeConstant"),s(Ei,()=>Ei(i))||Yc(i),i},Jc=s=>s===null?null:s.hasOwnProperty("AudioBuffer")?s.AudioBuffer:null,ce=(s,e,t)=>{const n=e[t];n!==void 0&&n!==s[t].value&&(s[t].value=n)},Kc=s=>{s.start=(e=>{let t=!1;return(n=0,i=0,r)=>{if(t)throw fe();e.call(s,n,i,r),t=!0}})(s.start)},Us=s=>{s.start=(e=>(t=0,n=0,i)=>{if(typeof i=="number"&&i<0||n<0||t<0)throw new RangeError("The parameters can't be negative.");e.call(s,t,n,i)})(s.start)},Gs=s=>{s.stop=(e=>(t=0)=>{if(t<0)throw new RangeError("The parameter can't be negative.");e.call(s,t)})(s.stop)},el=(s,e,t,n,i,r,o,a,c,l,u)=>(h,d)=>{const f=h.createBufferSource();return pe(f,d),ce(f,d,"playbackRate"),ie(f,d,"buffer"),ie(f,d,"loop"),ie(f,d,"loopEnd"),ie(f,d,"loopStart"),e(t,()=>t(h))||Kc(f),e(n,()=>n(h))||c(f),e(i,()=>i(h))||l(f,h),e(r,()=>r(h))||Us(f),e(o,()=>o(h))||u(f,h),e(a,()=>a(h))||Gs(f),s(h,f),f},tl=s=>s===null?null:s.hasOwnProperty("AudioContext")?s.AudioContext:s.hasOwnProperty("webkitAudioContext")?s.webkitAudioContext:null,nl=(s,e)=>(t,n,i)=>{const r=t.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}i&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const o=s(t,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return e(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(l){if(c>r.maxChannelCount)throw l}}),e(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),e(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},sl=s=>s===null?null:s.hasOwnProperty("AudioWorkletNode")?s.AudioWorkletNode:null,il=s=>{const{port1:e}=new MessageChannel;try{e.postMessage(s)}finally{e.close()}},rl=(s,e,t,n,i)=>(r,o,a,c,l,u)=>{if(a!==null)try{const h=new a(r,c,u),d=new Map;let f=null;if(Object.defineProperties(h,{channelCount:{get:()=>u.channelCount,set:()=>{throw s()}},channelCountMode:{get:()=>"explicit",set:()=>{throw s()}},onprocessorerror:{get:()=>f,set:p=>{typeof f=="function"&&h.removeEventListener("processorerror",f),f=typeof p=="function"?p:null,typeof f=="function"&&h.addEventListener("processorerror",f)}}}),h.addEventListener=(p=>(...m)=>{if(m[0]==="processorerror"){const g=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(g!==null){const v=d.get(m[1]);v!==void 0?m[1]=v:(m[1]=b=>{b.type==="error"?(Object.defineProperties(b,{type:{value:"processorerror"}}),g(b)):g(new ErrorEvent(m[0],{...b}))},d.set(g,m[1]))}}return p.call(h,"error",m[1],m[2]),p.call(h,...m)})(h.addEventListener),h.removeEventListener=(p=>(...m)=>{if(m[0]==="processorerror"){const g=d.get(m[1]);g!==void 0&&(d.delete(m[1]),m[1]=g)}return p.call(h,"error",m[1],m[2]),p.call(h,m[0],m[1],m[2])})(h.removeEventListener),u.numberOfOutputs!==0){const p=t(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return h.connect(p).connect(r.destination),i(h,()=>p.disconnect(),()=>p.connect(r.destination))}return h}catch(h){throw h.code===11?n():h}if(l===void 0)throw n();return il(u),e(r,o,l,u)},cr=(s,e)=>s===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(s*e))))),ol=s=>new Promise((e,t)=>{const{port1:n,port2:i}=new MessageChannel;n.onmessage=({data:r})=>{n.close(),i.close(),e(r)},n.onmessageerror=({data:r})=>{n.close(),i.close(),t(r)},i.postMessage(s)}),al=async(s,e)=>{const t=await ol(e);return new s(t)},cl=(s,e,t,n)=>{let i=Es.get(s);i===void 0&&(i=new WeakMap,Es.set(s,i));const r=al(t,n);return i.set(e,r),r},ll=(s,e,t,n,i,r,o,a,c,l,u,h,d)=>(f,p,m,g)=>{if(g.numberOfInputs===0&&g.numberOfOutputs===0)throw c();const v=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(v.some(D=>D<1))throw c();if(v.length!==g.numberOfOutputs)throw e();if(g.channelCountMode!=="explicit")throw c();const b=g.channelCount*g.numberOfInputs,x=v.reduce((D,L)=>D+L,0),A=m.parameterDescriptors===void 0?0:m.parameterDescriptors.length;if(b+A>6||x>6)throw c();const _=new MessageChannel,w=[],T=[];for(let D=0;D<g.numberOfInputs;D+=1)w.push(o(f,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),T.push(i(f,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const y=[];if(m.parameterDescriptors!==void 0)for(const{defaultValue:D,maxValue:L,minValue:de,name:re}of m.parameterDescriptors){const Z=r(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:g.parameterData[re]!==void 0?g.parameterData[re]:D===void 0?0:D});Object.defineProperties(Z.offset,{defaultValue:{get:()=>D===void 0?0:D},maxValue:{get:()=>L===void 0?ye:L},minValue:{get:()=>de===void 0?be:de}}),y.push(Z)}const M=n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,b+A)}),N=cr(p,f.sampleRate),k=a(f,N,b+A,Math.max(1,x)),C=i(f,{channelCount:Math.max(1,x),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,x)}),E=[];for(let D=0;D<g.numberOfOutputs;D+=1)E.push(n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:v[D]}));for(let D=0;D<g.numberOfInputs;D+=1){w[D].connect(T[D]);for(let L=0;L<g.channelCount;L+=1)T[D].connect(M,L,D*g.channelCount+L)}const O=new rr(m.parameterDescriptors===void 0?[]:m.parameterDescriptors.map(({name:D},L)=>{const de=y[L];return de.connect(M,0,b+L),de.start(0),[D,de.offset]}));M.connect(k);let F=g.channelInterpretation,I=null;const R=g.numberOfOutputs===0?[k]:E,U={get bufferSize(){return N},get channelCount(){return g.channelCount},set channelCount(D){throw t()},get channelCountMode(){return g.channelCountMode},set channelCountMode(D){throw t()},get channelInterpretation(){return F},set channelInterpretation(D){for(const L of w)L.channelInterpretation=D;F=D},get context(){return k.context},get inputs(){return w},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return I},set onprocessorerror(D){typeof I=="function"&&U.removeEventListener("processorerror",I),I=typeof D=="function"?D:null,typeof I=="function"&&U.addEventListener("processorerror",I)},get parameters(){return O},get port(){return _.port2},addEventListener(...D){return k.addEventListener(D[0],D[1],D[2])},connect:s.bind(null,R),disconnect:l.bind(null,R),dispatchEvent(...D){return k.dispatchEvent(D[0])},removeEventListener(...D){return k.removeEventListener(D[0],D[1],D[2])}},q=new Map;_.port1.addEventListener=(D=>(...L)=>{if(L[0]==="message"){const de=typeof L[1]=="function"?L[1]:typeof L[1]=="object"&&L[1]!==null&&typeof L[1].handleEvent=="function"?L[1].handleEvent:null;if(de!==null){const re=q.get(L[1]);re!==void 0?L[1]=re:(L[1]=Z=>{u(f.currentTime,f.sampleRate,()=>de(Z))},q.set(de,L[1]))}}return D.call(_.port1,L[0],L[1],L[2])})(_.port1.addEventListener),_.port1.removeEventListener=(D=>(...L)=>{if(L[0]==="message"){const de=q.get(L[1]);de!==void 0&&(q.delete(L[1]),L[1]=de)}return D.call(_.port1,L[0],L[1],L[2])})(_.port1.removeEventListener);let B=null;Object.defineProperty(_.port1,"onmessage",{get:()=>B,set:D=>{typeof B=="function"&&_.port1.removeEventListener("message",B),B=typeof D=="function"?D:null,typeof B=="function"&&(_.port1.addEventListener("message",B),_.port1.start())}}),m.prototype.port=_.port1;let W=null;cl(f,U,m,g).then(D=>W=D);const Ce=$n(g.numberOfInputs,g.channelCount),Ae=$n(g.numberOfOutputs,v),z=m.parameterDescriptors===void 0?[]:m.parameterDescriptors.reduce((D,{name:L})=>({...D,[L]:new Float32Array(128)}),{});let se=!0;const ve=()=>{g.numberOfOutputs>0&&k.disconnect(C);for(let D=0,L=0;D<g.numberOfOutputs;D+=1){const de=E[D];for(let re=0;re<v[D];re+=1)C.disconnect(de,L+re,re);L+=v[D]}},P=new Map;k.onaudioprocess=({inputBuffer:D,outputBuffer:L})=>{if(W!==null){const de=h(U);for(let re=0;re<N;re+=128){for(let Z=0;Z<g.numberOfInputs;Z+=1)for(let ae=0;ae<g.channelCount;ae+=1)zn(D,Ce[Z],ae,ae,re);m.parameterDescriptors!==void 0&&m.parameterDescriptors.forEach(({name:Z},ae)=>{zn(D,z,Z,b+ae,re)});for(let Z=0;Z<g.numberOfInputs;Z+=1)for(let ae=0;ae<v[Z];ae+=1)Ae[Z][ae].byteLength===0&&(Ae[Z][ae]=new Float32Array(128));try{const Z=Ce.map((ke,it)=>{if(de[it].size>0)return P.set(it,N/128),ke;const Ts=P.get(it);return Ts===void 0?[]:(ke.every(to=>to.every(no=>no===0))&&(Ts===1?P.delete(it):P.set(it,Ts-1)),ke)});se=u(f.currentTime+re/f.sampleRate,f.sampleRate,()=>W.process(Z,Ae,z));for(let ke=0,it=0;ke<g.numberOfOutputs;ke+=1){for(let Jt=0;Jt<v[ke];Jt+=1)or(L,Ae[ke],Jt,it+Jt,re);it+=v[ke]}}catch(Z){se=!1,U.dispatchEvent(new ErrorEvent("processorerror",{colno:Z.colno,filename:Z.filename,lineno:Z.lineno,message:Z.message}))}if(!se){for(let Z=0;Z<g.numberOfInputs;Z+=1){w[Z].disconnect(T[Z]);for(let ae=0;ae<g.channelCount;ae+=1)T[re].disconnect(M,ae,Z*g.channelCount+ae)}if(m.parameterDescriptors!==void 0){const Z=m.parameterDescriptors.length;for(let ae=0;ae<Z;ae+=1){const ke=y[ae];ke.disconnect(M,0,b+ae),ke.stop()}}M.disconnect(k),k.onaudioprocess=null,mt?ve():Dt();break}}}};let mt=!1;const gt=o(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Mt=()=>k.connect(gt).connect(f.destination),Dt=()=>{k.disconnect(gt),gt.disconnect()},Kr=()=>{if(se){Dt(),g.numberOfOutputs>0&&k.connect(C);for(let D=0,L=0;D<g.numberOfOutputs;D+=1){const de=E[D];for(let re=0;re<v[D];re+=1)C.connect(de,L+re,re);L+=v[D]}}mt=!0},eo=()=>{se&&(Mt(),ve()),mt=!1};return Mt(),d(U,Kr,eo)},lr=(s,e)=>{const t=s.createBiquadFilter();return pe(t,e),ce(t,e,"Q"),ce(t,e,"detune"),ce(t,e,"frequency"),ce(t,e,"gain"),ie(t,e,"type"),t},ul=(s,e)=>(t,n)=>{const i=t.createChannelMerger(n.numberOfInputs);return s!==null&&s.name==="webkitAudioContext"&&e(t,i),pe(i,n),i},hl=s=>{const e=s.numberOfOutputs;Object.defineProperty(s,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw fe()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:t=>{if(t!=="explicit")throw fe()}}),Object.defineProperty(s,"channelInterpretation",{get:()=>"discrete",set:t=>{if(t!=="discrete")throw fe()}})},Cn=(s,e)=>{const t=s.createChannelSplitter(e.numberOfOutputs);return pe(t,e),hl(t),t},dl=(s,e,t,n,i)=>(r,o)=>{if(r.createConstantSource===void 0)return t(r,o);const a=r.createConstantSource();return pe(a,o),ce(a,o,"offset"),e(n,()=>n(r))||Us(a),e(i,()=>i(r))||Gs(a),s(r,a),a},Xt=(s,e)=>(s.connect=e.connect.bind(e),s.disconnect=e.disconnect.bind(e),s),pl=(s,e,t,n)=>(i,{offset:r,...o})=>{const a=i.createBuffer(1,2,44100),c=e(i,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),l=t(i,{...o,gain:r}),u=a.getChannelData(0);u[0]=1,u[1]=1,c.buffer=a,c.loop=!0;const h={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(p){l.channelCount=p},get channelCountMode(){return l.channelCountMode},set channelCountMode(p){l.channelCountMode=p},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(p){l.channelInterpretation=p},get context(){return l.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get offset(){return l.gain},get onended(){return c.onended},set onended(p){c.onended=p},addEventListener(...p){return c.addEventListener(p[0],p[1],p[2])},dispatchEvent(...p){return c.dispatchEvent(p[0])},removeEventListener(...p){return c.removeEventListener(p[0],p[1],p[2])},start(p=0){c.start.call(c,p)},stop(p=0){c.stop.call(c,p)}},d=()=>c.connect(l),f=()=>c.disconnect(l);return s(i,c),n(Xt(h,l),d,f)},fl=(s,e)=>(t,n)=>{const i=t.createConvolver();if(pe(i,n),n.disableNormalization===i.normalize&&(i.normalize=!n.disableNormalization),ie(i,n,"buffer"),n.channelCount>2||(e(i,"channelCount",r=>()=>r.call(i),r=>o=>{if(o>2)throw s();return r.call(i,o)}),n.channelCountMode==="max"))throw s();return e(i,"channelCountMode",r=>()=>r.call(i),r=>o=>{if(o==="max")throw s();return r.call(i,o)}),i},ur=(s,e)=>{const t=s.createDelay(e.maxDelayTime);return pe(t,e),ce(t,e,"delayTime"),t},ml=s=>(e,t)=>{const n=e.createDynamicsCompressor();if(pe(n,t),t.channelCount>2||t.channelCountMode==="max")throw s();return ce(n,t,"attack"),ce(n,t,"knee"),ce(n,t,"ratio"),ce(n,t,"release"),ce(n,t,"threshold"),n},Se=(s,e)=>{const t=s.createGain();return pe(t,e),ce(t,e,"gain"),t},gl=s=>(e,t,n)=>{if(e.createIIRFilter===void 0)return s(e,t,n);const i=e.createIIRFilter(n.feedforward,n.feedback);return pe(i,n),i};function _l(s,e){const t=e[0]*e[0]+e[1]*e[1];return[(s[0]*e[0]+s[1]*e[1])/t,(s[1]*e[0]-s[0]*e[1])/t]}function vl(s,e){return[s[0]*e[0]-s[1]*e[1],s[0]*e[1]+s[1]*e[0]]}function Ii(s,e){let t=[0,0];for(let n=s.length-1;n>=0;n-=1)t=vl(t,e),t[0]+=s[n];return t}const yl=(s,e,t,n)=>(i,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:l,feedforward:u})=>{const h=cr(r,i.sampleRate),d=l instanceof Float64Array?l:new Float64Array(l),f=u instanceof Float64Array?u:new Float64Array(u),p=d.length,m=f.length,g=Math.min(p,m);if(p===0||p>20)throw n();if(d[0]===0)throw e();if(m===0||m>20)throw n();if(f[0]===0)throw e();if(d[0]!==1){for(let y=0;y<m;y+=1)f[y]/=d[0];for(let y=1;y<p;y+=1)d[y]/=d[0]}const v=t(i,h,o,o);v.channelCount=o,v.channelCountMode=a,v.channelInterpretation=c;const b=32,x=[],A=[],_=[];for(let y=0;y<o;y+=1){x.push(0);const M=new Float32Array(b),N=new Float32Array(b);M.fill(0),N.fill(0),A.push(M),_.push(N)}v.onaudioprocess=y=>{const M=y.inputBuffer,N=y.outputBuffer,k=M.numberOfChannels;for(let C=0;C<k;C+=1){const E=M.getChannelData(C),O=N.getChannelData(C);x[C]=ar(d,p,f,m,g,A[C],_[C],x[C],b,E,O)}};const w=i.sampleRate/2;return Xt({get bufferSize(){return h},get channelCount(){return v.channelCount},set channelCount(y){v.channelCount=y},get channelCountMode(){return v.channelCountMode},set channelCountMode(y){v.channelCountMode=y},get channelInterpretation(){return v.channelInterpretation},set channelInterpretation(y){v.channelInterpretation=y},get context(){return v.context},get inputs(){return[v]},get numberOfInputs(){return v.numberOfInputs},get numberOfOutputs(){return v.numberOfOutputs},addEventListener(...y){return v.addEventListener(y[0],y[1],y[2])},dispatchEvent(...y){return v.dispatchEvent(y[0])},getFrequencyResponse(y,M,N){if(y.length!==M.length||M.length!==N.length)throw s();const k=y.length;for(let C=0;C<k;C+=1){const E=-Math.PI*(y[C]/w),O=[Math.cos(E),Math.sin(E)],F=Ii(f,O),I=Ii(d,O),R=_l(F,I);M[C]=Math.sqrt(R[0]*R[0]+R[1]*R[1]),N[C]=Math.atan2(R[1],R[0])}},removeEventListener(...y){return v.removeEventListener(y[0],y[1],y[2])}},v)},wl=(s,e)=>s.createMediaElementSource(e.mediaElement),Tl=(s,e)=>{const t=s.createMediaStreamDestination();return pe(t,e),t.numberOfOutputs===1&&Object.defineProperty(t,"numberOfOutputs",{get:()=>0}),t},bl=(s,{mediaStream:e})=>{const t=e.getAudioTracks();t.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const n=t.slice(0,1),i=s.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(i,"mediaStream",{value:e}),i},xl=(s,e)=>(t,{mediaStreamTrack:n})=>{if(typeof t.createMediaStreamTrackSource=="function")return t.createMediaStreamTrackSource(n);const i=new MediaStream([n]),r=t.createMediaStreamSource(i);if(n.kind!=="audio")throw s();if(e(t))throw new TypeError;return r},Sl=s=>s===null?null:s.hasOwnProperty("OfflineAudioContext")?s.OfflineAudioContext:s.hasOwnProperty("webkitOfflineAudioContext")?s.webkitOfflineAudioContext:null,Cl=(s,e,t,n,i,r)=>(o,a)=>{const c=o.createOscillator();return pe(c,a),ce(c,a,"detune"),ce(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):ie(c,a,"type"),e(t,()=>t(o))||Us(c),e(n,()=>n(o))||r(c,o),e(i,()=>i(o))||Gs(c),s(o,c),c},Al=s=>(e,t)=>{const n=e.createPanner();return n.orientationX===void 0?s(e,t):(pe(n,t),ce(n,t,"orientationX"),ce(n,t,"orientationY"),ce(n,t,"orientationZ"),ce(n,t,"positionX"),ce(n,t,"positionY"),ce(n,t,"positionZ"),ie(n,t,"coneInnerAngle"),ie(n,t,"coneOuterAngle"),ie(n,t,"coneOuterGain"),ie(n,t,"distanceModel"),ie(n,t,"maxDistance"),ie(n,t,"panningModel"),ie(n,t,"refDistance"),ie(n,t,"rolloffFactor"),n)},kl=(s,e,t,n,i,r,o,a,c,l)=>(u,{coneInnerAngle:h,coneOuterAngle:d,coneOuterGain:f,distanceModel:p,maxDistance:m,orientationX:g,orientationY:v,orientationZ:b,panningModel:x,positionX:A,positionY:_,positionZ:w,refDistance:T,rolloffFactor:y,...M})=>{const N=u.createPanner();if(M.channelCount>2||M.channelCountMode==="max")throw o();pe(N,M);const k={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},C=t(u,{...k,channelInterpretation:"speakers",numberOfInputs:6}),E=n(u,{...M,gain:1}),O=n(u,{...k,gain:1}),F=n(u,{...k,gain:0}),I=n(u,{...k,gain:0}),R=n(u,{...k,gain:0}),U=n(u,{...k,gain:0}),q=n(u,{...k,gain:0}),B=i(u,256,6,1),W=r(u,{...k,curve:new Float32Array([1,1]),oversample:"none"});let Q=[g,v,b],Ce=[A,_,w];const Ae=new Float32Array(1);B.onaudioprocess=({inputBuffer:P})=>{const mt=[c(P,Ae,0),c(P,Ae,1),c(P,Ae,2)];mt.some((Mt,Dt)=>Mt!==Q[Dt])&&(N.setOrientation(...mt),Q=mt);const gt=[c(P,Ae,3),c(P,Ae,4),c(P,Ae,5)];gt.some((Mt,Dt)=>Mt!==Ce[Dt])&&(N.setPosition(...gt),Ce=gt)},Object.defineProperty(F.gain,"defaultValue",{get:()=>0}),Object.defineProperty(I.gain,"defaultValue",{get:()=>0}),Object.defineProperty(R.gain,"defaultValue",{get:()=>0}),Object.defineProperty(U.gain,"defaultValue",{get:()=>0}),Object.defineProperty(q.gain,"defaultValue",{get:()=>0});const z={get bufferSize(){},get channelCount(){return N.channelCount},set channelCount(P){if(P>2)throw o();E.channelCount=P,N.channelCount=P},get channelCountMode(){return N.channelCountMode},set channelCountMode(P){if(P==="max")throw o();E.channelCountMode=P,N.channelCountMode=P},get channelInterpretation(){return N.channelInterpretation},set channelInterpretation(P){E.channelInterpretation=P,N.channelInterpretation=P},get coneInnerAngle(){return N.coneInnerAngle},set coneInnerAngle(P){N.coneInnerAngle=P},get coneOuterAngle(){return N.coneOuterAngle},set coneOuterAngle(P){N.coneOuterAngle=P},get coneOuterGain(){return N.coneOuterGain},set coneOuterGain(P){if(P<0||P>1)throw e();N.coneOuterGain=P},get context(){return N.context},get distanceModel(){return N.distanceModel},set distanceModel(P){N.distanceModel=P},get inputs(){return[E]},get maxDistance(){return N.maxDistance},set maxDistance(P){if(P<0)throw new RangeError;N.maxDistance=P},get numberOfInputs(){return N.numberOfInputs},get numberOfOutputs(){return N.numberOfOutputs},get orientationX(){return O.gain},get orientationY(){return F.gain},get orientationZ(){return I.gain},get panningModel(){return N.panningModel},set panningModel(P){N.panningModel=P},get positionX(){return R.gain},get positionY(){return U.gain},get positionZ(){return q.gain},get refDistance(){return N.refDistance},set refDistance(P){if(P<0)throw new RangeError;N.refDistance=P},get rolloffFactor(){return N.rolloffFactor},set rolloffFactor(P){if(P<0)throw new RangeError;N.rolloffFactor=P},addEventListener(...P){return E.addEventListener(P[0],P[1],P[2])},dispatchEvent(...P){return E.dispatchEvent(P[0])},removeEventListener(...P){return E.removeEventListener(P[0],P[1],P[2])}};h!==z.coneInnerAngle&&(z.coneInnerAngle=h),d!==z.coneOuterAngle&&(z.coneOuterAngle=d),f!==z.coneOuterGain&&(z.coneOuterGain=f),p!==z.distanceModel&&(z.distanceModel=p),m!==z.maxDistance&&(z.maxDistance=m),g!==z.orientationX.value&&(z.orientationX.value=g),v!==z.orientationY.value&&(z.orientationY.value=v),b!==z.orientationZ.value&&(z.orientationZ.value=b),x!==z.panningModel&&(z.panningModel=x),A!==z.positionX.value&&(z.positionX.value=A),_!==z.positionY.value&&(z.positionY.value=_),w!==z.positionZ.value&&(z.positionZ.value=w),T!==z.refDistance&&(z.refDistance=T),y!==z.rolloffFactor&&(z.rolloffFactor=y),(Q[0]!==1||Q[1]!==0||Q[2]!==0)&&N.setOrientation(...Q),(Ce[0]!==0||Ce[1]!==0||Ce[2]!==0)&&N.setPosition(...Ce);const se=()=>{E.connect(N),s(E,W,0,0),W.connect(O).connect(C,0,0),W.connect(F).connect(C,0,1),W.connect(I).connect(C,0,2),W.connect(R).connect(C,0,3),W.connect(U).connect(C,0,4),W.connect(q).connect(C,0,5),C.connect(B).connect(u.destination)},ve=()=>{E.disconnect(N),a(E,W,0,0),W.disconnect(O),O.disconnect(C),W.disconnect(F),F.disconnect(C),W.disconnect(I),I.disconnect(C),W.disconnect(R),R.disconnect(C),W.disconnect(U),U.disconnect(C),W.disconnect(q),q.disconnect(C),C.disconnect(B),B.disconnect(u.destination)};return l(Xt(z,N),se,ve)},Nl=s=>(e,{disableNormalization:t,imag:n,real:i})=>{const r=n instanceof Float32Array?n:new Float32Array(n),o=i instanceof Float32Array?i:new Float32Array(i),a=e.createPeriodicWave(o,r,{disableNormalization:t});if(Array.from(n).length<2)throw s();return a},An=(s,e,t,n)=>s.createScriptProcessor(e,t,n),Ml=(s,e)=>(t,n)=>{const i=n.channelCountMode;if(i==="clamped-max")throw e();if(t.createStereoPanner===void 0)return s(t,n);const r=t.createStereoPanner();return pe(r,n),ce(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>i,set:o=>{if(o!==i)throw e()}}),r},Dl=(s,e,t,n,i,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},u={...l,oversample:"none"},h=(p,m,g,v)=>{const b=new Float32Array(16385),x=new Float32Array(16385);for(let M=0;M<16385;M+=1){const N=M/16384*c;b[M]=Math.cos(N),x[M]=Math.sin(N)}const A=t(p,{...l,gain:0}),_=n(p,{...u,curve:b}),w=n(p,{...u,curve:a}),T=t(p,{...l,gain:0}),y=n(p,{...u,curve:x});return{connectGraph(){m.connect(A),m.connect(w.inputs===void 0?w:w.inputs[0]),m.connect(T),w.connect(g),g.connect(_.inputs===void 0?_:_.inputs[0]),g.connect(y.inputs===void 0?y:y.inputs[0]),_.connect(A.gain),y.connect(T.gain),A.connect(v,0,0),T.connect(v,0,1)},disconnectGraph(){m.disconnect(A),m.disconnect(w.inputs===void 0?w:w.inputs[0]),m.disconnect(T),w.disconnect(g),g.disconnect(_.inputs===void 0?_:_.inputs[0]),g.disconnect(y.inputs===void 0?y:y.inputs[0]),_.disconnect(A.gain),y.disconnect(T.gain),A.disconnect(v,0,0),T.disconnect(v,0,1)}}},d=(p,m,g,v)=>{const b=new Float32Array(16385),x=new Float32Array(16385),A=new Float32Array(16385),_=new Float32Array(16385),w=Math.floor(16385/2);for(let R=0;R<16385;R+=1)if(R>w){const U=(R-w)/(16384-w)*c;b[R]=Math.cos(U),x[R]=Math.sin(U),A[R]=0,_[R]=1}else{const U=R/(16384-w)*c;b[R]=1,x[R]=0,A[R]=Math.cos(U),_[R]=Math.sin(U)}const T=e(p,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),y=t(p,{...l,gain:0}),M=n(p,{...u,curve:b}),N=t(p,{...l,gain:0}),k=n(p,{...u,curve:x}),C=n(p,{...u,curve:a}),E=t(p,{...l,gain:0}),O=n(p,{...u,curve:A}),F=t(p,{...l,gain:0}),I=n(p,{...u,curve:_});return{connectGraph(){m.connect(T),m.connect(C.inputs===void 0?C:C.inputs[0]),T.connect(y,0),T.connect(N,0),T.connect(E,1),T.connect(F,1),C.connect(g),g.connect(M.inputs===void 0?M:M.inputs[0]),g.connect(k.inputs===void 0?k:k.inputs[0]),g.connect(O.inputs===void 0?O:O.inputs[0]),g.connect(I.inputs===void 0?I:I.inputs[0]),M.connect(y.gain),k.connect(N.gain),O.connect(E.gain),I.connect(F.gain),y.connect(v,0,0),E.connect(v,0,0),N.connect(v,0,1),F.connect(v,0,1)},disconnectGraph(){m.disconnect(T),m.disconnect(C.inputs===void 0?C:C.inputs[0]),T.disconnect(y,0),T.disconnect(N,0),T.disconnect(E,1),T.disconnect(F,1),C.disconnect(g),g.disconnect(M.inputs===void 0?M:M.inputs[0]),g.disconnect(k.inputs===void 0?k:k.inputs[0]),g.disconnect(O.inputs===void 0?O:O.inputs[0]),g.disconnect(I.inputs===void 0?I:I.inputs[0]),M.disconnect(y.gain),k.disconnect(N.gain),O.disconnect(E.gain),I.disconnect(F.gain),y.disconnect(v,0,0),E.disconnect(v,0,0),N.disconnect(v,0,1),F.disconnect(v,0,1)}}},f=(p,m,g,v,b)=>{if(m===1)return h(p,g,v,b);if(m===2)return d(p,g,v,b);throw i()};return(p,{channelCount:m,channelCountMode:g,pan:v,...b})=>{if(g==="max")throw i();const x=s(p,{...b,channelCount:1,channelCountMode:g,numberOfInputs:2}),A=t(p,{...b,channelCount:m,channelCountMode:g,gain:1}),_=t(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:v});let{connectGraph:w,disconnectGraph:T}=f(p,m,A,_,x);Object.defineProperty(_.gain,"defaultValue",{get:()=>0}),Object.defineProperty(_.gain,"maxValue",{get:()=>1}),Object.defineProperty(_.gain,"minValue",{get:()=>-1});const y={get bufferSize(){},get channelCount(){return A.channelCount},set channelCount(C){A.channelCount!==C&&(M&&T(),{connectGraph:w,disconnectGraph:T}=f(p,C,A,_,x),M&&w()),A.channelCount=C},get channelCountMode(){return A.channelCountMode},set channelCountMode(C){if(C==="clamped-max"||C==="max")throw i();A.channelCountMode=C},get channelInterpretation(){return A.channelInterpretation},set channelInterpretation(C){A.channelInterpretation=C},get context(){return A.context},get inputs(){return[A]},get numberOfInputs(){return A.numberOfInputs},get numberOfOutputs(){return A.numberOfOutputs},get pan(){return _.gain},addEventListener(...C){return A.addEventListener(C[0],C[1],C[2])},dispatchEvent(...C){return A.dispatchEvent(C[0])},removeEventListener(...C){return A.removeEventListener(C[0],C[1],C[2])}};let M=!1;const N=()=>{w(),M=!0},k=()=>{T(),M=!1};return r(Xt(y,x),N,k)}},Ol=(s,e,t,n,i,r,o)=>(a,c)=>{const l=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return t(a,c);pe(l,c);const u=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(u!==null&&u.length<2)throw e();ie(l,{curve:u},"curve"),ie(l,c,"oversample");let h=null,d=!1;return o(l,"curve",m=>()=>m.call(l),m=>g=>(m.call(l,g),d&&(n(g)&&h===null?h=s(a,l):!n(g)&&h!==null&&(h(),h=null)),g)),i(l,()=>{d=!0,n(l.curve)&&(h=s(a,l))},()=>{d=!1,h!==null&&(h(),h=null)})},El=(s,e,t,n,i)=>(r,{curve:o,oversample:a,...c})=>{const l=r.createWaveShaper(),u=r.createWaveShaper();pe(l,c),pe(u,c);const h=t(r,{...c,gain:1}),d=t(r,{...c,gain:-1}),f=t(r,{...c,gain:1}),p=t(r,{...c,gain:-1});let m=null,g=!1,v=null;const b={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(_){h.channelCount=_,d.channelCount=_,l.channelCount=_,f.channelCount=_,u.channelCount=_,p.channelCount=_},get channelCountMode(){return l.channelCountMode},set channelCountMode(_){h.channelCountMode=_,d.channelCountMode=_,l.channelCountMode=_,f.channelCountMode=_,u.channelCountMode=_,p.channelCountMode=_},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(_){h.channelInterpretation=_,d.channelInterpretation=_,l.channelInterpretation=_,f.channelInterpretation=_,u.channelInterpretation=_,p.channelInterpretation=_},get context(){return l.context},get curve(){return v},set curve(_){if(_!==null&&_.length<2)throw e();if(_===null)l.curve=_,u.curve=_;else{const w=_.length,T=new Float32Array(w+2-w%2),y=new Float32Array(w+2-w%2);T[0]=_[0],y[0]=-_[w-1];const M=Math.ceil((w+1)/2),N=(w+1)/2-1;for(let k=1;k<M;k+=1){const C=k/M*N,E=Math.floor(C),O=Math.ceil(C);T[k]=E===O?_[E]:(1-(C-E))*_[E]+(1-(O-C))*_[O],y[k]=E===O?-_[w-1-E]:-((1-(C-E))*_[w-1-E])-(1-(O-C))*_[w-1-O]}T[M]=w%2===1?_[M-1]:(_[M-2]+_[M-1])/2,l.curve=T,u.curve=y}v=_,g&&(n(v)&&m===null?m=s(r,h):m!==null&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get oversample(){return l.oversample},set oversample(_){l.oversample=_,u.oversample=_},addEventListener(..._){return h.addEventListener(_[0],_[1],_[2])},dispatchEvent(..._){return h.dispatchEvent(_[0])},removeEventListener(..._){return h.removeEventListener(_[0],_[1],_[2])}};o!==null&&(b.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==b.oversample&&(b.oversample=a);const x=()=>{h.connect(l).connect(f),h.connect(d).connect(u).connect(p).connect(f),g=!0,n(v)&&(m=s(r,h))},A=()=>{h.disconnect(l),l.disconnect(f),h.disconnect(d),d.disconnect(u),u.disconnect(p),p.disconnect(f),g=!1,m!==null&&(m(),m=null)};return i(Xt(b,f),x,A)},Te=()=>new DOMException("","NotSupportedError"),Il={numberOfChannels:1},Rl=(s,e,t,n,i)=>class extends s{constructor(o,a,c){let l;if(typeof o=="number"&&a!==void 0&&c!==void 0)l={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")l=o;else throw new Error("The given parameters are not valid.");const{length:u,numberOfChannels:h,sampleRate:d}={...Il,...l},f=n(h,u,d);e(nn,()=>nn(f))||f.addEventListener("statechange",(()=>{let p=0;const m=g=>{this._state==="running"&&(p>0?(f.removeEventListener("statechange",m),g.stopImmediatePropagation(),this._waitForThePromiseToSettle(g)):p+=1)};return m})()),super(f,h),this._length=u,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(t()):(this._state="running",i(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,tr(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},Vl={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Pl=(s,e,t,n,i,r,o)=>class extends s{constructor(c,l){const u=i(c),h={...Vl,...l},d=t(u,h),f=r(u),p=f?n():null,m=c.sampleRate/2;super(c,!1,d,p),this._detune=e(this,f,d.detune,153600,-153600),this._frequency=e(this,f,d.frequency,m,-m),this._nativeOscillatorNode=d,this._onended=null,this._oscillatorNodeRenderer=p,this._oscillatorNodeRenderer!==null&&h.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=h.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=l;const u=this._nativeOscillatorNode.onended;this._onended=u!==null&&u===l?c:u}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){jt(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),Ke(this)&&bn(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},Fl=(s,e,t,n,i)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const l=async(u,h)=>{let d=t(u);const f=_e(d,h);if(!f){const p={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,detune:d.detune.value,frequency:d.frequency.value,periodicWave:o===null?void 0:o,type:d.type};d=e(h,p),a!==null&&d.start(a),c!==null&&d.stop(c)}return r.set(h,d),f?(await s(h,u.detune,d.detune),await s(h,u.frequency,d.frequency)):(await n(h,u.detune,d.detune),await n(h,u.frequency,d.frequency)),await i(u,h,d),d};return{set periodicWave(u){o=u},set start(u){a=u},set stop(u){c=u},render(u,h){const d=r.get(h);return d!==void 0?Promise.resolve(d):l(u,h)}}},ql={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},Ll=(s,e,t,n,i,r,o)=>class extends s{constructor(c,l){const u=i(c),h={...ql,...l},d=t(u,h),f=r(u),p=f?n():null;super(c,!1,d,p),this._nativePannerNode=d,this._orientationX=e(this,f,d.orientationX,ye,be),this._orientationY=e(this,f,d.orientationY,ye,be),this._orientationZ=e(this,f,d.orientationZ,ye,be),this._positionX=e(this,f,d.positionX,ye,be),this._positionY=e(this,f,d.positionY,ye,be),this._positionZ=e(this,f,d.positionZ,ye,be),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},Wl=(s,e,t,n,i,r,o,a,c,l)=>()=>{const u=new WeakMap;let h=null;const d=async(f,p)=>{let m=null,g=r(f);const v={channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation},b={...v,coneInnerAngle:g.coneInnerAngle,coneOuterAngle:g.coneOuterAngle,coneOuterGain:g.coneOuterGain,distanceModel:g.distanceModel,maxDistance:g.maxDistance,panningModel:g.panningModel,refDistance:g.refDistance,rolloffFactor:g.rolloffFactor},x=_e(g,p);if("bufferSize"in g)m=n(p,{...v,gain:1});else if(!x){const A={...b,orientationX:g.orientationX.value,orientationY:g.orientationY.value,orientationZ:g.orientationZ.value,positionX:g.positionX.value,positionY:g.positionY.value,positionZ:g.positionZ.value};g=i(p,A)}if(u.set(p,m===null?g:m),m!==null){if(h===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const k=new o(6,f.context.length,p.sampleRate),C=e(k,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});C.connect(k.destination),h=(async()=>{const E=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(O,F)=>{const I=t(k,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:F===0?1:0});return await a(k,O,I.offset),I}));for(let O=0;O<6;O+=1)E[O].connect(C,0,O),E[O].start(0);return l(k)})()}const A=await h,_=n(p,{...v,gain:1});await c(f,p,_);const w=[];for(let k=0;k<A.numberOfChannels;k+=1)w.push(A.getChannelData(k));let T=[w[0][0],w[1][0],w[2][0]],y=[w[3][0],w[4][0],w[5][0]],M=n(p,{...v,gain:1}),N=i(p,{...b,orientationX:T[0],orientationY:T[1],orientationZ:T[2],positionX:y[0],positionY:y[1],positionZ:y[2]});_.connect(M).connect(N.inputs[0]),N.connect(m);for(let k=128;k<A.length;k+=128){const C=[w[0][k],w[1][k],w[2][k]],E=[w[3][k],w[4][k],w[5][k]];if(C.some((O,F)=>O!==T[F])||E.some((O,F)=>O!==y[F])){T=C,y=E;const O=k/p.sampleRate;M.gain.setValueAtTime(0,O),M=n(p,{...v,gain:0}),N=i(p,{...b,orientationX:T[0],orientationY:T[1],orientationZ:T[2],positionX:y[0],positionY:y[1],positionZ:y[2]}),M.gain.setValueAtTime(1,O),_.connect(M).connect(N.inputs[0]),N.connect(m)}}return m}return x?(await s(p,f.orientationX,g.orientationX),await s(p,f.orientationY,g.orientationY),await s(p,f.orientationZ,g.orientationZ),await s(p,f.positionX,g.positionX),await s(p,f.positionY,g.positionY),await s(p,f.positionZ,g.positionZ)):(await a(p,f.orientationX,g.orientationX),await a(p,f.orientationY,g.orientationY),await a(p,f.orientationZ,g.orientationZ),await a(p,f.positionX,g.positionX),await a(p,f.positionY,g.positionY),await a(p,f.positionZ,g.positionZ)),Zt(g)?await c(f,p,g.inputs[0]):await c(f,p,g),g};return{render(f,p){const m=u.get(p);return m!==void 0?Promise.resolve(m):d(f,p)}}},jl={disableNormalization:!1},Bl=(s,e,t,n)=>class hr{constructor(r,o){const a=e(r),c=n({...jl,...o}),l=s(a,c);return t.add(l),l}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===hr.prototype||t.has(r)}},Ul=(s,e)=>(t,n,i)=>(s(n).replay(i),e(n,t,i)),Gl=(s,e,t)=>async(n,i,r)=>{const o=s(n);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([l,u])=>{const d=await e(l).render(l,i),f=n.context.destination;!t(l)&&(n!==f||!t(n))&&d.connect(r,u,c)})).reduce((a,c)=>[...a,...c],[]))},zl=(s,e,t)=>async(n,i,r)=>{const o=e(n);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const u=await s(a).render(a,i);t(a)||u.connect(r,c)}))},$l=(s,e,t,n)=>i=>s(nn,()=>nn(i))?Promise.resolve(s(n,n)).then(r=>{if(!r){const o=t(i,512,0,1);i.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>i.currentTime,o.connect(i.destination)}return i.startRendering()}):new Promise(r=>{const o=e(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});i.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(i.destination),i.startRendering()}),Zl=s=>(e,t)=>{s.set(e,t)},Xl=s=>(e,t)=>s.set(e,t),Hl=(s,e,t,n,i,r,o,a)=>(c,l)=>t(c).render(c,l).then(()=>Promise.all(Array.from(n(l)).map(u=>t(u).render(u,l)))).then(()=>i(l)).then(u=>(typeof u.copyFromChannel!="function"?(o(u),Ws(u)):e(r,()=>r(u))||a(u),s.add(u),u)),Yl={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},Ql=(s,e,t,n,i,r)=>class extends s{constructor(a,c){const l=i(a),u={...Yl,...c},h=t(l,u),d=r(l),f=d?n():null;super(a,!1,h,f),this._pan=e(this,d,h.pan)}get pan(){return this._pan}},Jl=(s,e,t,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=t(a);const u=_e(l,c);if(!u){const h={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=e(c,h)}return r.set(c,l),u?await s(c,a.pan,l.pan):await n(c,a.pan,l.pan),Zt(l)?await i(a,c,l.inputs[0]):await i(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},Kl=s=>()=>{if(s===null)return!1;try{new s({length:1,sampleRate:44100})}catch{return!1}return!0},eu=(s,e)=>async()=>{if(s===null)return!0;if(e===null)return!1;const t=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new e(1,128,44100),i=URL.createObjectURL(t);let r=!1,o=!1;try{await n.audioWorklet.addModule(i);const a=new s(n,"a",{numberOfOutputs:0}),c=n.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await n.startRendering(),await new Promise(l=>setTimeout(l))}catch{}finally{URL.revokeObjectURL(i)}return r&&!o},tu=(s,e)=>()=>{if(e===null)return Promise.resolve(!1);const t=new e(1,1,44100),n=s(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(i=>{t.oncomplete=()=>{n.disconnect(),i(t.currentTime!==0)},t.startRendering()})},nu=()=>new DOMException("","UnknownError"),su={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},iu=(s,e,t,n,i,r,o)=>class extends s{constructor(c,l){const u=i(c),h={...su,...l},d=t(u,h),p=r(u)?n():null;super(c,!0,d,p),this._isCurveNullified=!1,this._nativeWaveShaperNode=d,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},ru=(s,e,t)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=e(r);if(!_e(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=s(o,l)}return n.set(o,a),Zt(a)?await t(r,o,a.inputs[0]):await t(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},ou=()=>typeof window>"u"?null:window,au=(s,e)=>t=>{t.copyFromChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=t.numberOfChannels)throw e();const c=t.length,l=t.getChannelData(a),u=n.length;for(let h=o<0?-o:0;h+o<c&&h<u;h+=1)n[h]=l[h+o]},t.copyToChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=t.numberOfChannels)throw e();const c=t.length,l=t.getChannelData(a),u=n.length;for(let h=o<0?-o:0;h+o<c&&h<u;h+=1)l[h+o]=n[h]}},cu=s=>e=>{e.copyFromChannel=(t=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<e.length)return t.call(e,n,a,o)})(e.copyFromChannel),e.copyToChannel=(t=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<e.length)return t.call(e,n,a,o)})(e.copyToChannel)},lu=s=>(e,t)=>{const n=t.createBuffer(1,1,44100);e.buffer===null&&(e.buffer=n),s(e,"buffer",i=>()=>{const r=i.call(e);return r===n?null:r},i=>r=>i.call(e,r===null?n:r))},uu=(s,e)=>(t,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw s()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw s()}});const i=t.createBufferSource();e(n,()=>{const a=n.numberOfInputs;for(let c=0;c<a;c+=1)i.connect(n,0,c)},()=>i.disconnect(n))},dr=(s,e,t)=>s.copyFromChannel===void 0?s.getChannelData(t)[0]:(s.copyFromChannel(e,t),e[0]),pr=s=>{if(s===null)return!1;const e=s.length;return e%2!==0?s[Math.floor(e/2)]!==0:s[e/2-1]+s[e/2]!==0},kn=(s,e,t,n)=>{let i=s;for(;!i.hasOwnProperty(e);)i=Object.getPrototypeOf(i);const{get:r,set:o}=Object.getOwnPropertyDescriptor(i,e);Object.defineProperty(s,e,{get:t(r),set:n(o)})},hu=s=>({...s,outputChannelCount:s.outputChannelCount!==void 0?s.outputChannelCount:s.numberOfInputs===1&&s.numberOfOutputs===1?[s.channelCount]:Array.from({length:s.numberOfOutputs},()=>1)}),du=s=>({...s,channelCount:s.numberOfOutputs}),pu=s=>{const{imag:e,real:t}=s;return e===void 0?t===void 0?{...s,imag:[0,0],real:[0,0]}:{...s,imag:Array.from(t,()=>0),real:t}:t===void 0?{...s,imag:e,real:Array.from(e,()=>0)}:{...s,imag:e,real:t}},fr=(s,e,t)=>{try{s.setValueAtTime(e,t)}catch(n){if(n.code!==9)throw n;fr(s,e,t+1e-7)}},fu=s=>{const e=s.createBufferSource();e.start();try{e.start()}catch{return!0}return!1},mu=s=>{const e=s.createBufferSource(),t=s.createBuffer(1,1,44100);e.buffer=t;try{e.start(0,1)}catch{return!1}return!0},gu=s=>{const e=s.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0},zs=s=>{const e=s.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},mr=s=>{const e=s.createBuffer(1,1,44100),t=s.createBufferSource();t.buffer=e,t.start(),t.stop();try{return t.stop(),!0}catch{return!1}},$s=s=>{const e=s.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},_u=s=>{const{port1:e,port2:t}=new MessageChannel;try{e.postMessage(s)}finally{e.close(),t.close()}},vu=s=>{s.start=(e=>(t=0,n=0,i)=>{const r=s.buffer,o=r===null?n:Math.min(r.duration,n);r!==null&&o>r.duration-.5/s.context.sampleRate?e.call(s,t,0,0):e.call(s,t,o,i)})(s.start)},gr=(s,e)=>{const t=e.createGain();s.connect(t);const n=(i=>()=>{i.call(s,t),s.removeEventListener("ended",n)})(s.disconnect);s.addEventListener("ended",n),Xt(s,t),s.stop=(i=>{let r=!1;return(o=0)=>{if(r)try{i.call(s,o)}catch{t.gain.setValueAtTime(0,o)}else i.call(s,o),r=!0}})(s.stop)},Ht=(s,e)=>t=>{const n={value:s};return Object.defineProperties(t,{currentTarget:n,target:n}),typeof e=="function"?e.call(s,t):e.handleEvent.call(s,t)},yu=Lo(At),wu=zo(At),Tu=sc(us),_r=new WeakMap,bu=Tc(_r),Le=Ia(new Map,new WeakMap),Be=ou(),vr=Qc(Le,ze),Zs=wc(we),me=Gl(we,Zs,wt),xu=Yo(vr,ne,me),te=Sc(ls),tt=Sl(Be),ee=jc(tt),yr=new WeakMap,wr=pc(Ht),Nn=tl(Be),Xs=Fc(Nn),Hs=qc(Be),Tr=Lc(Be),sn=sl(Be),he=Ta(Wo(Xi),Go(yu,wu,Bn,Tu,Un,we,bu,Tn,ne,At,Ke,wt,Pn),Le,Ec(Ds,Un,we,ne,tn,Ke),ze,hs,Te,Ka(Bn,Ds,we,ne,tn,te,Ke,ee),oc(yr,we,Pe),wr,te,Xs,Hs,Tr,ee,sn),Su=Ho(he,xu,ze,vr,te,ee),Ys=new WeakSet,Ri=Jc(Be),br=$a(new Uint32Array(1)),Qs=au(br,ze),Js=cu(br),Cu=Jo(Ys,Le,Te,Ri,tt,Kl(Ri),Qs,Js),ds=$o(Se),xr=zl(Zs,xn,wt),$e=Wa(xr),Yt=el(ds,Le,fu,mu,gu,zs,mr,$s,vu,lu(kn),gr),Ze=Ul(bc(xn),xr),Au=ta($e,Yt,ne,Ze,me),We=ba(jo(Hi),yr,Ls,xa,Io,Ro,Vo,Po,Fo,ks,$i,Nn,fr),ku=ea(he,Au,We,fe,Yt,te,ee,Ht),Nu=ua(he,ha,ze,fe,nl(Se,kn),te,ee,me),Mu=Ea($e,lr,ne,Ze,me),kt=Xl(_r),Du=Oa(he,We,Mu,hs,lr,te,ee,kt),pt=Hc(At,Hs),Ou=uu(fe,pt),ft=ul(Nn,Ou),Eu=Pa(ft,ne,me),Iu=Va(he,Eu,ft,te,ee),Ru=La(Cn,ne,me),Vu=qa(he,Ru,Cn,te,ee,du),Pu=pl(ds,Yt,Se,pt),Qt=dl(ds,Le,Pu,zs,$s),Fu=za($e,Qt,ne,Ze,me),qu=Ga(he,We,Fu,Qt,te,ee,Ht),Sr=fl(Te,kn),Lu=Ha(Sr,ne,me),Wu=Xa(he,Lu,Sr,te,ee,kt),ju=nc($e,ur,ne,Ze,me),Bu=tc(he,We,ju,ur,te,ee,kt),Cr=ml(Te),Uu=uc($e,Cr,ne,Ze,me),Gu=lc(he,We,Uu,Cr,Te,te,ee,kt),zu=vc($e,Se,ne,Ze,me),$u=_c(he,We,zu,Se,te,ee),Zu=yl(hs,fe,An,Te),ps=$l(Le,Se,An,tu(Se,tt)),Xu=Oc(Yt,ne,tt,me,ps),Hu=gl(Zu),Yu=Mc(he,Hu,Xu,te,ee,kt),Qu=da(We,ft,Qt,An,Te,dr,ee,kn),Ar=new WeakMap,Ju=Xc(Nu,Qu,wr,ee,Ar,Ht),kr=Cl(ds,Le,zs,mr,$s,gr),Ku=Fl($e,kr,ne,Ze,me),eh=Pl(he,We,kr,Ku,te,ee,Ht),Nr=Ba(Yt),th=El(Nr,fe,Se,pr,pt),fs=Ol(Nr,fe,th,pr,pt,Nn,kn),nh=kl(Bn,fe,ft,Se,An,fs,Te,Un,dr,pt),Mr=Al(nh),sh=Wl($e,ft,Qt,Se,Mr,ne,tt,Ze,me,ps),ih=Ll(he,We,Mr,sh,te,ee,kt),rh=Nl(ze),oh=Bl(rh,te,new WeakSet,pu),ah=Dl(ft,Cn,Se,fs,Te,pt),Dr=Ml(ah,Te),ch=Jl($e,Dr,ne,Ze,me),lh=Ql(he,We,Dr,ch,te,ee),uh=ru(fs,ne,me),hh=iu(he,fe,fs,uh,te,ee,kt),Or=Bc(Be),Ks=fc(Be),Er=new WeakMap,dh=Cc(Er,tt),ph=Or?Uo(Le,Te,dc(Be),Ks,mc(qo),te,dh,ee,sn,new WeakMap,new WeakMap,eu(sn,tt),Be):void 0,fh=Wc(Xs,ee),mh=Ja(Ys,Le,Qa,hc,new WeakSet,te,fh,Wn,nn,Qs,Js),Ir=Ma(ph,Su,Cu,ku,Du,Iu,Vu,qu,Wu,mh,Bu,Gu,$u,Yu,Ju,eh,ih,oh,lh,hh),gh=Uc(he,wl,te,ee),_h=zc(he,Tl,te,ee),vh=$c(he,bl,te,ee),yh=xl(fe,ee),wh=Zc(he,yh,te),Th=la(Ir,fe,Te,nu,gh,_h,vh,wh,Nn),ei=Ac(Ar),bh=Zo(ei),Rr=ja(ze),xh=ic(ei),Vr=ac(ze),Pr=new WeakMap,Sh=yc(Pr,Pe),Ch=ll(Rr,ze,fe,ft,Cn,Qt,Se,An,Te,Vr,Ks,Sh,pt),Ah=rl(fe,Ch,Se,Te,pt),kh=Na($e,Rr,Yt,ft,Cn,Qt,Se,xh,Vr,Ks,ne,sn,tt,Ze,me,ps),Nh=xc(Er),Mh=Zl(Pr),Vi=Or?Ca(bh,he,We,kh,Ah,we,Nh,te,ee,sn,hu,Mh,_u,Ht):void 0,Dh=Ya(Te,tt),Oh=Hl(Ys,Le,Zs,ei,ps,Wn,Qs,Js),Eh=Rl(Ir,Le,fe,Dh,Oh),Ih=Ic(ls,Xs),Rh=Rc(qs,Hs),Vh=Vc(Ls,Tr),Ph=Pc(ls,ee);function j(s,e){if(!s)throw new Error(e)}function Fe(s,e,t=1/0){if(!(e<=s&&s<=t))throw new RangeError(`Value must be within [${e}, ${t}], got: ${s}`)}function Fr(s){!s.isOffline&&s.state!=="running"&&Lr('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let qr=console;function Fh(...s){qr.log(...s)}function Lr(...s){qr.warn(...s)}function Oe(s){return typeof s>"u"}function $(s){return!Oe(s)}function qh(s){return typeof s=="function"}function lt(s){return typeof s=="number"}function vt(s){return Object.prototype.toString.call(s)==="[object Object]"&&s.constructor===Object}function Lh(s){return typeof s=="boolean"}function Ve(s){return Array.isArray(s)}function Ue(s){return typeof s=="string"}function Rn(s){return Ue(s)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(s)}function Wh(s){return new Th(s)}function jh(s,e,t){return new Eh(s,e,t)}const yt=typeof self=="object"?self:null,Bh=yt&&(yt.hasOwnProperty("AudioContext")||yt.hasOwnProperty("webkitAudioContext"));function Uh(s,e,t){return j($(Vi),"This node only works in a secure context (https or localhost)"),new Vi(s,e,t)}function je(s,e,t,n){var i=arguments.length,r=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(s,e,t,n);else for(var a=s.length-1;a>=0;a--)(o=s[a])&&(r=(i<3?o(r):i>3?o(e,t,r):o(e,t))||r);return i>3&&r&&Object.defineProperty(e,t,r),r}function ue(s,e,t,n){function i(r){return r instanceof t?r:new t(function(o){o(r)})}return new(t||(t=Promise))(function(r,o){function a(u){try{l(n.next(u))}catch(h){o(h)}}function c(u){try{l(n.throw(u))}catch(h){o(h)}}function l(u){u.done?r(u.value):i(u.value).then(a,c)}l((n=n.apply(s,e||[])).next())})}class Gh{constructor(e,t,n){this._callback=e,this._type=t,this._updateInterval=n,this._createClock()}_createWorker(){const e=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),t=URL.createObjectURL(e),n=new Worker(t);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){this._updateInterval=Math.max(e,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(e*1e3,1))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function Tt(s){return Vh(s)}function ct(s){return Rh(s)}function Fn(s){return Ph(s)}function Rt(s){return Ih(s)}function Wr(s){return s instanceof AudioBuffer}function zh(s,e){return s==="value"||Tt(e)||ct(e)||Wr(e)}function qt(s,...e){if(!e.length)return s;const t=e.shift();if(vt(s)&&vt(t))for(const n in t)zh(n,t[n])?s[n]=t[n]:vt(t[n])?(s[n]||Object.assign(s,{[n]:{}}),qt(s[n],t[n])):Object.assign(s,{[n]:t[n]});return qt(s,...e)}function $h(s,e){return s.length===e.length&&s.every((t,n)=>e[n]===t)}function S(s,e,t=[],n){const i={},r=Array.from(e);if(vt(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(a=>Reflect.has(s,a))||(qt(i,{[n]:r[0]}),t.splice(t.indexOf(n),1),r.shift())),r.length===1&&vt(r[0]))qt(i,r[0]);else for(let o=0;o<t.length;o++)$(r[o])&&(i[t[o]]=r[o]);return qt(s,i)}function Zh(s){return s.constructor.getDefaults()}function Lt(s,e){return Oe(s)?e:s}function Ft(s,e){return e.forEach(t=>{Reflect.has(s,t)&&delete s[t]}),s}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class nt{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...e){(this.debug||yt&&this.toString()===yt.TONE_DEBUG_CLASS)&&Fh(this,...e)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}nt.version=zi;const ti=1e-6;function Zn(s,e){return s>e+ti}function Vs(s,e){return Zn(s,e)||Ie(s,e)}function jr(s,e){return s+ti<e}function Ie(s,e){return Math.abs(s-e)<ti}function Xh(s,e,t){return Math.max(Math.min(s,t),e)}class Xe extends nt{constructor(){super(),this.name="Timeline",this._timeline=[];const e=S(Xe.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(j(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const t=this._timeline[this.length-1];j(Vs(e.time,t.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const t=this._search(e.time);this._timeline.splice(t+1,0,e)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(e){const t=this._timeline.indexOf(e);return t!==-1&&this._timeline.splice(t,1),this}get(e,t="time"){const n=this._search(e,t);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e,t="time"){const n=this._search(e,t);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(e){const t=this._timeline.length;if(t>0&&this._timeline[t-1].time<e)return this._timeline[t-1];const n=this._search(e);return n-1>=0?this._timeline[n-1]:null}cancel(e){if(this._timeline.length>1){let t=this._search(e);if(t>=0)if(Ie(this._timeline[t].time,e)){for(let n=t;n>=0&&Ie(this._timeline[n].time,e);n--)t=n;this._timeline=this._timeline.slice(0,t)}else this._timeline=this._timeline.slice(0,t+1);else this._timeline=[]}else this._timeline.length===1&&Vs(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const t=this._search(e);return t>=0&&(this._timeline=this._timeline.slice(t+1)),this}previousEvent(e){const t=this._timeline.indexOf(e);return t>0?this._timeline[t-1]:null}_search(e,t="time"){if(this._timeline.length===0)return-1;let n=0;const i=this._timeline.length;let r=i;if(i>0&&this._timeline[i-1][t]<=e)return i-1;for(;n<r;){let o=Math.floor(n+(r-n)/2);const a=this._timeline[o],c=this._timeline[o+1];if(Ie(a[t],e)){for(let l=o;l<this._timeline.length;l++){const u=this._timeline[l];if(Ie(u[t],e))o=l;else break}return o}else{if(jr(a[t],e)&&Zn(c[t],e))return o;Zn(a[t],e)?r=o:n=o+1}}return-1}_iterate(e,t=0,n=this._timeline.length-1){this._timeline.slice(t,n+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,t){const n=this._search(e);return n!==-1&&this._iterate(t,0,n),this}forEachAfter(e,t){const n=this._search(e);return this._iterate(t,n+1),this}forEachBetween(e,t,n){let i=this._search(e),r=this._search(t);return i!==-1&&r!==-1?(this._timeline[i].time!==e&&(i+=1),this._timeline[r].time===t&&(r-=1),this._iterate(n,i,r)):i===-1&&this._iterate(n,0,r),this}forEachFrom(e,t){let n=this._search(e);for(;n>=0&&this._timeline[n].time>=e;)n--;return this._iterate(t,n+1),this}forEachAtTime(e,t){const n=this._search(e);if(n!==-1&&Ie(this._timeline[n].time,e)){let i=n;for(let r=n;r>=0&&Ie(this._timeline[r].time,e);r--)i=r;this._iterate(r=>{t(r)},i,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Br=[];function ms(s){Br.push(s)}function Hh(s){Br.forEach(e=>e(s))}const Ur=[];function gs(s){Ur.push(s)}function Yh(s){Ur.forEach(e=>e(s))}class Mn extends nt{constructor(){super(...arguments),this.name="Emitter"}on(e,t){return e.split(/\W+/).forEach(i=>{Oe(this._events)&&(this._events={}),this._events.hasOwnProperty(i)||(this._events[i]=[]),this._events[i].push(t)}),this}once(e,t){const n=(...i)=>{t(...i),this.off(e,n)};return this.on(e,n),this}off(e,t){return e.split(/\W+/).forEach(i=>{if(Oe(this._events)&&(this._events={}),this._events.hasOwnProperty(e))if(Oe(t))this._events[e]=[];else{const r=this._events[e];for(let o=r.length-1;o>=0;o--)r[o]===t&&r.splice(o,1)}}),this}emit(e,...t){if(this._events&&this._events.hasOwnProperty(e)){const n=this._events[e].slice(0);for(let i=0,r=n.length;i<r;i++)n[i].apply(this,t)}return this}static mixin(e){["on","once","off","emit"].forEach(t=>{const n=Object.getOwnPropertyDescriptor(Mn.prototype,t);Object.defineProperty(e.prototype,t,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class Gr extends Mn{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Dn extends Gr{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new Xe,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const e=S(Dn.getDefaults(),arguments,["context"]);e.context?this._context=e.context:this._context=Wh({latencyHint:e.latencyHint}),this._ticker=new Gh(this.emit.bind(this,"tick"),e.clockSource,e.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(e.latencyHint),this.lookAhead=e.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(Hh(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,t,n){return this._context.createBuffer(e,t,n)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,t){return this._context.createIIRFilter(e,t)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,t,n){return this._context.createPeriodicWave(e,t,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){return j(Rt(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(e)}createMediaElementSource(e){return j(Rt(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(e)}createMediaStreamDestination(){return j(Rt(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){j(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){j(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){j(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){j(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,t){return Uh(this.rawContext,e,t)}addAudioWorkletModule(e,t){return ue(this,void 0,void 0,function*(){j($(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(t)||this._workletModules.set(t,this.rawContext.audioWorklet.addModule(e)),yield this._workletModules.get(t)})}workletsAreReady(){return ue(this,void 0,void 0,function*(){const e=[];this._workletModules.forEach(t=>e.push(t)),yield Promise.all(e)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get latencyHint(){return this._latencyHint}_setLatencyHint(e){let t=0;if(this._latencyHint=e,Ue(e))switch(e){case"interactive":t=.1;break;case"playback":t=.5;break;case"balanced":t=.25;break}this.lookAhead=t,this.updateInterval=t/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return Rt(this._context)?this._context.resume():Promise.resolve()}close(){return ue(this,void 0,void 0,function*(){Rt(this._context)&&(yield this._context.close()),this._initialized&&Yh(this)})}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const t=this._context.createBuffer(1,128,this._context.sampleRate),n=t.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=e;const i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=t,i.loop=!0,i.start(0),this._constants.set(e,i),i}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(e=>this._constants[e].disconnect()),this}_timeoutLoop(){const e=this.now();let t=this._timeouts.peek();for(;this._timeouts.length&&t&&t.time<=e;)t.callback(),this._timeouts.shift(),t=this._timeouts.peek()}setTimeout(e,t){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:n+t}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach(t=>{t.id===e&&this._timeouts.remove(t)}),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,t){const n=++this._timeoutIds,i=()=>{const r=this.now();this._timeouts.add({callback:()=>{e(),i()},id:n,time:r+t})};return i(),n}}class Qh extends Gr{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,t,n){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,t){return{}}createPanner(){return{}}createPeriodicWave(e,t,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,t){return{}}get rawContext(){return{}}addAudioWorkletModule(e,t){return ue(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(e,t){return 0}clearTimeout(e){return this}setInterval(e,t){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}}function X(s,e){Ve(e)?e.forEach(t=>X(s,t)):Object.defineProperty(s,e,{enumerable:!0,writable:!1})}function ni(s,e){Ve(e)?e.forEach(t=>ni(s,t)):Object.defineProperty(s,e,{writable:!0})}const J=()=>{};class H extends nt{constructor(){super(),this.name="ToneAudioBuffer",this.onload=J;const e=S(H.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,e.url&&Wr(e.url)||e.url instanceof H?this.set(e.url):Ue(e.url)&&this.load(e.url).catch(e.onerror)}static getDefaults(){return{onerror:J,onload:J,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Me().sampleRate}set(e){return e instanceof H?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return ue(this,void 0,void 0,function*(){const t=H.load(e).then(n=>{this.set(n),this.onload(this)});H.downloads.push(t);try{yield t}finally{const n=H.downloads.indexOf(t);H.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const t=Ve(e)&&e[0].length>0,n=t?e.length:1,i=t?e[0].length:e.length,r=Me(),o=r.createBuffer(n,i,r.sampleRate),a=!t&&n===1?[e]:e;for(let c=0;c<n;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(e){if(lt(e))this.fromArray(this.toArray(e));else{let t=new Float32Array(this.length);const n=this.numberOfChannels;for(let i=0;i<n;i++){const r=this.toArray(i);for(let o=0;o<r.length;o++)t[o]+=r[o]}t=t.map(i=>i/n),this.fromArray(t)}return this}toArray(e){if(lt(e))return this.getChannelData(e);if(this.numberOfChannels===1)return this.toArray(0);{const t=[];for(let n=0;n<this.numberOfChannels;n++)t[n]=this.getChannelData(n);return t}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e,t=this.duration){const n=Math.floor(e*this.sampleRate),i=Math.floor(t*this.sampleRate);j(n<i,"The start time must be less than the end time");const r=i-n,o=Me().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(n,i),a);return new H(o)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return new H().fromArray(e)}static fromUrl(e){return ue(this,void 0,void 0,function*(){return yield new H().load(e)})}static load(e){return ue(this,void 0,void 0,function*(){const t=e.match(/\[([^\]\[]+\|.+)\]$/);if(t){const a=t[1].split("|");let c=a[0];for(const l of a)if(H.supportsType(l)){c=l;break}e=e.replace(t[0],c)}const n=H.baseUrl===""||H.baseUrl.endsWith("/")?H.baseUrl:H.baseUrl+"/",i=yield fetch(n+e);if(!i.ok)throw new Error(`could not load url: ${e}`);const r=yield i.arrayBuffer();return yield Me().decodeAudioData(r)})}static supportsType(e){const t=e.split("."),n=t[t.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return ue(this,void 0,void 0,function*(){for(yield Promise.resolve();H.downloads.length;)yield H.downloads[0]})}}H.baseUrl="";H.downloads=[];class _s extends Dn{constructor(){super({clockSource:"offline",context:Fn(arguments[0])?arguments[0]:jh(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:Fn(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=Fn(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return ue(this,void 0,void 0,function*(){let t=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,t++;const n=Math.floor(this.sampleRate/128);e&&t%n===0&&(yield new Promise(i=>setTimeout(i,1)))}})}render(e=!0){return ue(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(e);const t=yield this._context.startRendering();return new H(t)})}close(){return Promise.resolve()}}const zr=new Qh;let Kt=zr;function Me(){return Kt===zr&&Bh&&Jh(new Dn),Kt}function Jh(s){Rt(s)?Kt=new Dn(s):Fn(s)?Kt=new _s(s):Kt=s}if(yt&&!yt.TONE_SILENCE_LOGGING){const e=` * Tone.js v${zi} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function Kh(s){return Math.pow(10,s/20)}function ed(s){return 20*(Math.log(s)/Math.LN10)}function $r(s){return Math.pow(2,s/12)}let vs=440;function td(){return vs}function nd(s){vs=s}function Ps(s){return Math.round(Zr(s))}function Zr(s){return 69+12*Math.log2(s/vs)}function sd(s){return vs*Math.pow(2,(s-69)/12)}class si extends nt{constructor(e,t,n){super(),this.defaultUnits="s",this._val=t,this._units=n,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,t)=>{const n=parseInt(e,10),i=t==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*i:this._beatsToUnits(4/n)*i},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const t=parseInt(e,10);return this._beatsToUnits(8/(Math.floor(t)*3))},regexp:/^(\d+)t$/i},tr:{method:(e,t,n)=>{let i=0;return e&&e!=="0"&&(i+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(i+=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(i+=this._beatsToUnits(parseFloat(n)/4)),i},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof si&&this.fromType(this._val),Oe(this._val))return this._noArg();if(Ue(this._val)&&Oe(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(vt(this._val)){let e=0;for(const t in this._val)if($(this._val[t])){const n=this._val[t],i=new this.constructor(this.context,t).valueOf()*n;e+=i}return e}if($(this._units)){const e=this._expressions[this._units],t=this._val.toString().trim().match(e.regexp);return t?e.method.apply(this,t.slice(1)):e.method.call(this,this._val)}else return Ue(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Re extends si{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const t=new Re(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(t))},regexp:/^@(.+)/}})}quantize(e,t=1){const n=new this.constructor(this.context,e).valueOf(),i=this.valueOf(),a=Math.round(i/n)*n-i;return i+a*t}toNotation(){const e=this.toSeconds(),t=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);t.push(o+"n."),t.push(o+"n"),t.push(o+"t")}t.push("0");let n=t[0],i=new Re(this.context,t[0]).toSeconds();return t.forEach(r=>{const o=new Re(this.context,r).toSeconds();Math.abs(o-e)<Math.abs(i-e)&&(n=r,i=o)}),n}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let t=this.valueOf()/e;t=parseFloat(t.toFixed(4));const n=Math.floor(t/this._getTimeSignature());let i=t%1*4;t=Math.floor(t)%this._getTimeSignature();const r=i.toString();return r.length>3&&(i=parseFloat(parseFloat(r).toFixed(3))),[n,t,i].join(":")}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.round(t*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return Ps(this.toFrequency())}_now(){return this.context.now()}}class De extends Re{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return td()}static set A4(e){nd(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return this.defaultUnits==="midi"?e:De.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(e,t){const i=id[e.toLowerCase()]+(parseInt(t,10)+1)*12;return this.defaultUnits==="midi"?i:De.mtof(i)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,t,n){let i=1;return e&&e!=="0"&&(i*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(i*=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(i*=this._beatsToUnits(parseFloat(n)/4)),i}}})}transpose(e){return new De(this.context,this.valueOf()*$r(e))}harmonize(e){return e.map(t=>this.transpose(t))}toMidi(){return Ps(this.valueOf())}toNote(){const e=this.toFrequency(),t=Math.log2(e/De.A4);let n=Math.round(12*t)+57;const i=Math.floor(n/12);return i<0&&(n+=-12*i),rd[n%12]+i.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(e*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return sd(e)}static ftom(e){return Ps(e)}}const id={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},rd=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class en extends Re{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class xe extends nt{constructor(){super();const e=S(xe.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:Me()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return new Re(this.context,e).toSeconds()}toFrequency(e){return new De(this.context,e).toFrequency()}toTicks(e){return new en(this.context,e).toTicks()}_getPartialProperties(e){const t=this.get();return Object.keys(t).forEach(n=>{Oe(e[n])&&delete t[n]}),t}get(){const e=Zh(this);return Object.keys(e).forEach(t=>{if(Reflect.has(this,t)){const n=this[t];$(n)&&$(n.value)&&$(n.setValueAtTime)?e[t]=n.value:n instanceof xe?e[t]=n._getPartialProperties(e[t]):Ve(n)||lt(n)||Ue(n)||Lh(n)?e[t]=n:delete e[t]}}),e}set(e){return Object.keys(e).forEach(t=>{Reflect.has(this,t)&&$(this[t])&&(this[t]&&$(this[t].value)&&$(this[t].setValueAtTime)?this[t].value!==e[t]&&(this[t].value=e[t]):this[t]instanceof xe?this[t].set(e[t]):this[t]=e[t])}),this}}class ii extends Xe{constructor(e="stopped"){super(),this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const t=this.get(e);return t!==null?t.state:this._initial}setStateAtTime(e,t,n){return Fe(t,0),this.add(Object.assign({},n,{state:e,time:t})),this}getLastState(e,t){const n=this._search(t);for(let i=n;i>=0;i--){const r=this._timeline[i];if(r.state===e)return r}}getNextState(e,t){const n=this._search(t);if(n!==-1)for(let i=n;i<this._timeline.length;i++){const r=this._timeline[i];if(r.state===e)return r}}}class G extends xe{constructor(){super(S(G.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const e=S(G.getDefaults(),arguments,["param","units","convert"]);for(j($(e.param)&&(Tt(e.param)||e.param instanceof G),"param must be an AudioParam");!Tt(e.param);)e.param=e.param._param;this._swappable=$(e.swappable)?e.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new Xe(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,$(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(xe.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return $(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return $(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(e,t){return this.units===t}_assertRange(e){return $(this.maxValue)&&$(this.minValue)&&Fe(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?Kh(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&this.units==="decibels"?ed(e):e}setValueAtTime(e,t){const n=this.toSeconds(t),i=this._fromType(e);return j(isFinite(i)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(i),this.log(this.units,"setValueAtTime",e,n),this._events.add({time:n,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,n),this}getValueAtTime(e){const t=Math.max(this.toSeconds(e),0),n=this._events.getAfter(t),i=this._events.get(t);let r=this._initialValue;if(i===null)r=this._initialValue;else if(i.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const o=this._events.getBefore(i.time);let a;o===null?a=this._initialValue:a=o.value,i.type==="setTargetAtTime"&&(r=this._exponentialApproach(i.time,a,i.value,i.constant,t))}else if(n===null)r=i.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let o=i.value;if(i.type==="setTargetAtTime"){const a=this._events.getBefore(i.time);a===null?o=this._initialValue:o=a.value}n.type==="linearRampToValueAtTime"?r=this._linearInterpolate(i.time,o,n.time,n.value,t):r=this._exponentialInterpolate(i.time,o,n.time,n.value,t)}else r=i.value;return this._toType(r)}setRampPoint(e){e=this.toSeconds(e);let t=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),this._fromType(t)===0&&(t=this._toType(this._minOutput)),this.setValueAtTime(t,e),this}linearRampToValueAtTime(e,t){const n=this._fromType(e),i=this.toSeconds(t);return j(isFinite(n)&&isFinite(i),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(n),this._events.add({time:i,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",e,i),this._param.linearRampToValueAtTime(n,i),this}exponentialRampToValueAtTime(e,t){let n=this._fromType(e);n=Ie(n,0)?this._minOutput:n,this._assertRange(n);const i=this.toSeconds(t);return j(isFinite(n)&&isFinite(i),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({time:i,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",e,i),this._param.exponentialRampToValueAtTime(n,i),this}exponentialRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(e,n+this.toSeconds(t)),this}linearRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(e,n+this.toSeconds(t)),this}targetRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(e,n,t),this}exponentialApproachValueAtTime(e,t,n){t=this.toSeconds(t),n=this.toSeconds(n);const i=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(e,t,i),this.cancelAndHoldAtTime(t+n*.9),this.linearRampToValueAtTime(e,t+n),this}setTargetAtTime(e,t,n){const i=this._fromType(e);j(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(t);return this._assertRange(i),j(isFinite(i)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:i}),this.log(this.units,"setTargetAtTime",e,r,n),this._param.setTargetAtTime(i,r,n),this}setValueCurveAtTime(e,t,n,i=1){n=this.toSeconds(n),t=this.toSeconds(t);const r=this._fromType(e[0])*i;this.setValueAtTime(this._toType(r),t);const o=n/(e.length-1);for(let a=1;a<e.length;a++){const c=this._fromType(e[a])*i;this.linearRampToValueAtTime(this._toType(c),t+a*o)}return this}cancelScheduledValues(e){const t=this.toSeconds(e);return j(isFinite(t),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(t),this._param.cancelScheduledValues(t),this.log(this.units,"cancelScheduledValues",t),this}cancelAndHoldAtTime(e){const t=this.toSeconds(e),n=this._fromType(this.getValueAtTime(t));j(isFinite(t),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",t,"value="+n);const i=this._events.get(t),r=this._events.getAfter(t);return i&&Ie(i.time,t)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(t),this._events.cancel(t+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),t):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),t)),this._events.add({time:t,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,t),this}rampTo(e,t=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(e,t,n):this.linearRampTo(e,t,n),this}apply(e){const t=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(t),t);const n=this._events.get(t);if(n&&n.type==="setTargetAtTime"){const i=this._events.getAfter(n.time),r=i?i.time:t+2,o=(r-t)/10;for(let a=t;a<r;a+=o)e.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,i=>{i.type==="cancelScheduledValues"?e.cancelScheduledValues(i.time):i.type==="setTargetAtTime"?e.setTargetAtTime(i.value,i.time,i.constant):e[i.type](i.value,i.time)}),this}setParam(e){j(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const t=this.input;return t.disconnect(this._param),this.apply(e),this._param=e,t.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,t,n,i,r){return n+(t-n)*Math.exp(-(r-e)/i)}_linearInterpolate(e,t,n,i,r){return t+(i-t)*((r-e)/(n-e))}_exponentialInterpolate(e,t,n,i,r){return t*Math.pow(i/t,(r-e)/(n-e))}}class V extends xe{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return $(this.input)?Tt(this.input)||this.input instanceof G?1:this.input.numberOfInputs:0}get numberOfOutputs(){return $(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return $(e)&&(e instanceof V||ct(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach(n=>{n.channelCount=e.channelCount,n.channelCountMode=e.channelCountMode,n.channelInterpretation=e.channelInterpretation})}_getChannelProperties(){const e=this._getInternalNodes();j(e.length>0,"ToneAudioNode does not have any internal nodes");const t=e[0];return{channelCount:t.channelCount,channelCountMode:t.channelCountMode,channelInterpretation:t.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelInterpretation:e}))}connect(e,t=0,n=0){return qe(this,e,t,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Lr("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e,t=0,n=0){return Xr(this,e,t,n),this}chain(...e){return bt(this,...e),this}fan(...e){return e.forEach(t=>this.connect(t)),this}dispose(){return super.dispose(),$(this.input)&&(this.input instanceof V?this.input.dispose():ct(this.input)&&this.input.disconnect()),$(this.output)&&(this.output instanceof V?this.output.dispose():ct(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function bt(...s){const e=s.shift();s.reduce((t,n)=>(t instanceof V?t.connect(n):ct(t)&&qe(t,n),n),e)}function qe(s,e,t=0,n=0){for(j($(s),"Cannot connect from undefined node"),j($(e),"Cannot connect to undefined node"),(e instanceof V||ct(e))&&j(e.numberOfInputs>0,"Cannot connect to node with no inputs"),j(s.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof V||e instanceof G;)$(e.input)&&(e=e.input);for(;s instanceof V;)$(s.output)&&(s=s.output);Tt(e)?s.connect(e,t):s.connect(e,t,n)}function Xr(s,e,t=0,n=0){if($(e))for(;e instanceof V;)e=e.input;for(;!ct(s);)$(s.output)&&(s=s.output);Tt(e)?s.disconnect(e,t):ct(e)?s.disconnect(e,t,n):s.disconnect()}class K extends V{constructor(){super(S(K.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const e=S(K.getDefaults(),arguments,["gain","units"]);this.gain=new G({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),X(this,"gain")}static getDefaults(){return Object.assign(V.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Bt extends V{constructor(e){super(e),this.onended=J,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new K({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const n=this.toSeconds(t);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(V.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:J})}_startGain(e,t=1){j(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=e+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,e),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(t,e+n):this._gainNode.gain.exponentialApproachValueAtTime(t,e,n)):this._gainNode.gain.setValueAtTime(t,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){j(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const t=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+t,this._stopTime=Math.max(this._stopTime,this.context.currentTime),t>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,t,e):this._gainNode.gain.targetRampTo(0,t,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?t*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==J&&(this.onended(this),this.onended=J,!this.context.isOffline)){const e=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(e):setTimeout(e,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),j(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class Xn extends Bt{constructor(){super(S(Xn.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const e=S(Xn.getDefaults(),arguments,["offset"]);qe(this._source,this._gainNode),this.offset=new G({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(Bt.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._source.start(t),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Y extends V{constructor(){super(S(Y.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const e=S(Y.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new Xn({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(V.getDefaults(),{convert:!0,units:"number",value:0})}connect(e,t=0,n=0){return ys(this,e,t,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,t){return this._param.setValueAtTime(e,t),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,t){return this._param.linearRampToValueAtTime(e,t),this}exponentialRampToValueAtTime(e,t){return this._param.exponentialRampToValueAtTime(e,t),this}exponentialRampTo(e,t,n){return this._param.exponentialRampTo(e,t,n),this}linearRampTo(e,t,n){return this._param.linearRampTo(e,t,n),this}targetRampTo(e,t,n){return this._param.targetRampTo(e,t,n),this}exponentialApproachValueAtTime(e,t,n){return this._param.exponentialApproachValueAtTime(e,t,n),this}setTargetAtTime(e,t,n){return this._param.setTargetAtTime(e,t,n),this}setValueCurveAtTime(e,t,n,i){return this._param.setValueCurveAtTime(e,t,n,i),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,t,n){return this._param.rampTo(e,t,n),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function ys(s,e,t,n){(e instanceof G||Tt(e)||e instanceof Y&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof Y&&(e.overridden=!0)),qe(s,e,t,n)}class Hn extends G{constructor(){super(S(Hn.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new Xe(1/0),this._multiplier=1;const e=S(Hn.getDefaults(),arguments,["value"]);this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(G.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,t,n){t=this.toSeconds(t),this.setRampPoint(t);const i=this._fromType(e),r=this._events.get(t),o=Math.round(Math.max(1/n,1));for(let a=0;a<=o;a++){const c=n*a+t,l=this._exponentialApproach(r.time,r.value,i,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}setValueAtTime(e,t){const n=this.toSeconds(t);super.setValueAtTime(e,t);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}linearRampToValueAtTime(e,t){const n=this.toSeconds(t);super.linearRampToValueAtTime(e,t);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(e,t){t=this.toSeconds(t);const n=this._fromType(e),i=this._events.get(t),r=Math.round(Math.max((t-i.time)*10,1)),o=(t-i.time)/r;for(let a=0;a<=r;a++){const c=o*a+i.time,l=this._exponentialInterpolate(i.time,i.value,t,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}_getTicksUntilEvent(e,t){if(e===null)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Oe(e.ticks)){const o=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(o,e.time)}const n=this._fromType(this.getValueAtTime(e.time));let i=this._fromType(this.getValueAtTime(t));const r=this._events.get(t);return r&&r.time===t&&r.type==="setValueAtTime"&&(i=this._fromType(this.getValueAtTime(t-this.sampleTime))),.5*(t-e.time)*(n+i)+e.ticks}getTicksAtTime(e){const t=this.toSeconds(e),n=this._events.get(t);return Math.max(this._getTicksUntilEvent(n,t),0)}getDurationOfTicks(e,t){const n=this.toSeconds(t),i=this.getTicksAtTime(t);return this.getTimeOfTick(i+e)-n}getTimeOfTick(e){const t=this._events.get(e,"ticks"),n=this._events.getAfter(e,"ticks");if(t&&t.ticks===e)return t.time;if(t&&n&&n.type==="linearRampToValueAtTime"&&t.value!==n.value){const i=this._fromType(this.getValueAtTime(t.time)),o=(this._fromType(this.getValueAtTime(n.time))-i)/(n.time-t.time),a=Math.sqrt(Math.pow(i,2)-2*o*(t.ticks-e)),c=(-i+a)/o,l=(-i-a)/o;return(c>0?c:l)+t.time}else return t?t.value===0?1/0:t.time+(e-t.ticks)/t.value:e/this._initialValue}ticksToTime(e,t){return this.getDurationOfTicks(e,t)}timeToTicks(e,t){const n=this.toSeconds(t),i=this.toSeconds(e),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+i)-r}_fromType(e){return this.units==="bpm"&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return this.units==="bpm"&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const t=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(t,0)}}class Yn extends Y{constructor(){super(S(Yn.getDefaults(),arguments,["value"])),this.name="TickSignal";const e=S(Yn.getDefaults(),arguments,["value"]);this.input=this._param=new Hn({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(Y.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,t){return this._param.ticksToTime(e,t)}timeToTicks(e,t){return this._param.timeToTicks(e,t)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,t){return this._param.getDurationOfTicks(e,t)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class Qn extends xe{constructor(){super(S(Qn.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new ii,this._tickOffset=new Xe;const e=S(Qn.getDefaults(),arguments,["frequency"]);this.frequency=new Yn({context:this.context,units:e.units,value:e.frequency}),X(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},xe.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,t){const n=this.toSeconds(e);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),$(t)&&this.setTicksAtTime(t,n)),this}stop(e){const t=this.toSeconds(e);if(this._state.getValueAtTime(t)==="stopped"){const n=this._state.get(t);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this.setTicksAtTime(0,t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&this._state.setStateAtTime("paused",t),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this}getTicksAtTime(e){const t=this.toSeconds(e),n=this._state.getLastState("stopped",t),i={state:"paused",time:t};this._state.add(i);let r=n,o=0;return this._state.forEachBetween(n.time,t+this.sampleTime,a=>{let c=r.time;const l=this._tickOffset.get(a.time);l&&l.time>=r.time&&(o=l.ticks,c=l.time),r.state==="started"&&a.state!=="started"&&(o+=this.frequency.getTicksAtTime(a.time)-this.frequency.getTicksAtTime(c)),r=a}),this._state.remove(i),o}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const t=this.now(),n=this.frequency.timeToTicks(e,t);this.setTicksAtTime(n,t)}getSecondsAtTime(e){e=this.toSeconds(e);const t=this._state.getLastState("stopped",e),n={state:"paused",time:e};this._state.add(n);let i=t,r=0;return this._state.forEachBetween(t.time,e+this.sampleTime,o=>{let a=i.time;const c=this._tickOffset.get(o.time);c&&c.time>=i.time&&(r=c.seconds,a=c.time),i.state==="started"&&o.state!=="started"&&(r+=o.time-a),i=o}),this._state.remove(n),r}setTicksAtTime(e,t){return t=this.toSeconds(t),this._tickOffset.cancel(t),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,t),ticks:e,time:t}),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e,t=this.now()){const n=this._tickOffset.get(t),i=this._state.get(t),r=Math.max(n.time,i.time),o=this.frequency.getTicksAtTime(r)+e-n.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(e,t,n){let i=this._state.get(e);this._state.forEachBetween(e,t,o=>{i&&i.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(i.time,e),o.time-this.sampleTime,n),i=o});let r=null;if(i&&i.state==="started"){const o=Math.max(i.time,e),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(i.time),l=a-c;let u=Math.ceil(l)-l;u=Ie(u,1)?0:u;let h=this.frequency.getTimeOfTick(a+u);for(;h<t;){try{n(h,Math.round(this.getTicksAtTime(h)))}catch(d){r=d;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class rn extends xe{constructor(){super(S(rn.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=J,this._lastUpdate=0,this._state=new ii("stopped"),this._boundLoop=this._loop.bind(this);const e=S(rn.getDefaults(),arguments,["callback","frequency"]);this.callback=e.callback,this._tickSource=new Qn({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,X(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(xe.getDefaults(),{callback:J,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,t){Fr(this.context);const n=this.toSeconds(e);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,t),n<this._lastUpdate&&this.emit("start",n,t)),this}stop(e){const t=this.toSeconds(e);return this.log("stop",t),this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._tickSource.stop(t),t<this._lastUpdate&&this.emit("stop",t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._tickSource.pause(t),t<this._lastUpdate&&this.emit("pause",t)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,t){return this._tickSource.setTicksAtTime(e,t),this}getTimeOfTick(e,t=this.now()){return this._tickSource.getTimeOfTick(e,t)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,t){const n=this.toSeconds(t),i=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(i+e,n)}_loop(){const e=this._lastUpdate,t=this.now();this._lastUpdate=t,this.log("loop",e,t),e!==t&&(this._state.forEachBetween(e,t,n=>{switch(n.state){case"started":const i=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,i);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(e,t,(n,i)=>{this.callback(n,i)}))}getStateAtTime(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Mn.mixin(rn);class ri extends nt{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=S(ri.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach(t=>{this._loadingCount++;const n=e.urls[t];this.add(t,n,this._bufferLoaded.bind(this,e.onload),e.onerror)})}static getDefaults(){return{baseUrl:"",onerror:J,onload:J,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return j(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,this._loadingCount===0&&e&&e()}get loaded(){return Array.from(this._buffers).every(([e,t])=>t.loaded)}add(e,t,n=J,i=J){return Ue(t)?this._buffers.set(e.toString(),new H(this.baseUrl+t,n,i)):this._buffers.set(e.toString(),new H(t,n,i)),this}dispose(){return super.dispose(),this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this}}class Qe extends en{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class od extends xe{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Xe,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,t){return this._events.add({callback:e,time:this.toSeconds(t)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=e;){const t=this._events.shift();t&&e-t.time<=this.expiration&&t.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}ms(s=>{s.draw=new od({context:s})});gs(s=>{s.draw.dispose()});class ad extends nt{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(e){j($(e.time),"Events must have a time property"),j($(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let t=new cd(e.time,e.time+e.duration,e);for(this._root===null?this._root=t:this._root.insert(t),this._length++;t!==null;)t.updateHeight(),t.updateMax(),this._rebalance(t),t=t.parent;return this}remove(e){if(this._root!==null){const t=[];this._root.search(e.time,t);for(const n of t)if(n.event===e){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,t=>this.remove(t)),this}_setRoot(e){this._root=e,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(e,t){e.parent!==null?(e.isLeftChild()?e.parent.left=t:e.parent.right=t,this._rebalance(e.parent)):this._setRoot(t)}_removeNode(e){if(e.left===null&&e.right===null)this._replaceNodeInParent(e,null);else if(e.right===null)this._replaceNodeInParent(e,e.left);else if(e.left===null)this._replaceNodeInParent(e,e.right);else{const t=e.getBalance();let n,i=null;if(t>0)if(e.left.right===null)n=e.left,n.right=e.right,i=n;else{for(n=e.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,i=n.parent,n.left=e.left,n.right=e.right)}else if(e.right.left===null)n=e.right,n.left=e.left,i=n;else{for(n=e.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,i=n.parent,n.left=e.left,n.right=e.right)}e.parent!==null?e.isLeftChild()?e.parent.left=n:e.parent.right=n:this._setRoot(n),i&&this._rebalance(i)}e.dispose()}_rotateLeft(e){const t=e.parent,n=e.isLeftChild(),i=e.right;i&&(e.right=i.left,i.left=e),t!==null?n?t.left=i:t.right=i:this._setRoot(i)}_rotateRight(e){const t=e.parent,n=e.isLeftChild(),i=e.left;i&&(e.left=i.right,i.right=e),t!==null?n?t.left=i:t.right=i:this._setRoot(i)}_rebalance(e){const t=e.getBalance();t>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):t<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(this._root!==null){const t=[];if(this._root.search(e,t),t.length>0){let n=t[0];for(let i=1;i<t.length;i++)t[i].low>n.low&&(n=t[i]);return n.event}}return null}forEach(e){if(this._root!==null){const t=[];this._root.traverse(n=>t.push(n)),t.forEach(n=>{n.event&&e(n.event)})}return this}forEachAtTime(e,t){if(this._root!==null){const n=[];this._root.search(e,n),n.forEach(i=>{i.event&&t(i.event)})}return this}forEachFrom(e,t){if(this._root!==null){const n=[];this._root.searchAfter(e,n),n.forEach(i=>{i.event&&t(i.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(e=>e.dispose()),this._root=null,this}}class cd{constructor(e,t,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=e,this.high=t,this.max=this.high}insert(e){e.low<=this.low?this.left===null?this.left=e:this.left.insert(e):this.right===null?this.right=e:this.right.insert(e)}search(e,t){e>this.max||(this.left!==null&&this.left.search(e,t),this.low<=e&&this.high>e&&t.push(this),!(this.low>e)&&this.right!==null&&this.right.search(e,t))}searchAfter(e,t){this.low>=e&&(t.push(this),this.left!==null&&this.left.searchAfter(e,t)),this.right!==null&&this.right.searchAfter(e,t)}traverse(e){e(this),this.left!==null&&this.left.traverse(e),this.right!==null&&this.right.traverse(e)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return this.left!==null&&this.right!==null?e=this.left.height-this.right.height:this.left!==null?e=this.left.height+1:this.right!==null&&(e=-(this.right.height+1)),e}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class ut extends V{constructor(){super(S(ut.getDefaults(),arguments,["volume"])),this.name="Volume";const e=S(ut.getDefaults(),arguments,["volume"]);this.input=this.output=new K({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,X(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(V.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Jn extends V{constructor(){super(S(Jn.getDefaults(),arguments)),this.name="Destination",this.input=new ut({context:this.context}),this.output=new K({context:this.context}),this.volume=this.input.volume;const e=S(Jn.getDefaults(),arguments);bt(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(V.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(...e){return this.input.disconnect(),e.unshift(this.input),e.push(this.output),bt(...e),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}ms(s=>{s.destination=new Jn({context:s})});gs(s=>{s.destination.dispose()});class ld extends nt{constructor(e){super(),this.name="TimelineValue",this._timeline=new Xe({memory:10}),this._initialValue=e}set(e,t){return this._timeline.add({value:e,time:t}),this}get(e){const t=this._timeline.get(e);return t?t.value:this._initialValue}}class ht{constructor(e,t){this.id=ht._eventId++;const n=Object.assign(ht.getDefaults(),t);this.transport=e,this.callback=n.callback,this._once=n.once,this.time=n.time}static getDefaults(){return{callback:J,once:!1,time:0}}invoke(e){this.callback&&(this.callback(e),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}ht._eventId=0;class oi extends ht{constructor(e,t){super(e,t),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(oi.getDefaults(),t);this.duration=new Qe(e.context,n.duration).valueOf(),this._interval=new Qe(e.context,n.interval).valueOf(),this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},ht.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvents(e){const t=this.transport.getTicksAtTime(e);t>=this.time&&t>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Qe(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const t=this.transport.getTicksAtTime(e);t>this.time&&(this._nextTick=this.time+Math.ceil((t-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new Qe(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Qe(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}class on extends xe{constructor(){super(S(on.getDefaults(),arguments)),this.name="Transport",this._loop=new ld(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Xe,this._repeatedEvents=new ad,this._syncedSignals=[],this._swingAmount=0;const e=S(on.getDefaults(),arguments);this._ppq=e.ppq,this._clock=new rn({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),X(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(xe.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,t){if(this._loop.get(e)&&t>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),t=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&t%this._ppq!==0&&t%(this._swingTicks*2)!==0){const n=t%(this._swingTicks*2)/(this._swingTicks*2),i=Math.sin(n*Math.PI)*this._swingAmount;e+=new Qe(this.context,this._swingTicks*2/3).toSeconds()*i}this._timeline.forEachAtTime(t,n=>n.invoke(e))}schedule(e,t){const n=new ht(this,{callback:e,time:new en(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(e,t,n,i=1/0){const r=new oi(this,{callback:e,duration:new Re(this.context,i).toTicks(),interval:new Re(this.context,t).toTicks(),time:new en(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(e,t){const n=new ht(this,{callback:e,once:!0,time:new en(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const t=this._scheduledEvents[e.toString()];t.timeline.remove(t.event),t.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,t){return this._scheduledEvents[e.id.toString()]={event:e,timeline:t},t.add(e),e.id}cancel(e=0){const t=this.toTicks(e);return this._timeline.forEachFrom(t,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(t,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(e,t)=>{t=new Qe(this.context,t).toSeconds(),this.emit("start",e,t)}),this._clock.on("stop",e=>{this.emit("stop",e)}),this._clock.on("pause",e=>{this.emit("pause",e)})}get state(){return this._clock.getStateAtTime(this.now())}start(e,t){let n;return $(t)&&(n=this.toTicks(t)),this._clock.start(e,n),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),this._clock.getStateAtTime(e)!=="started"?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){Ve(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new Re(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new Re(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new Qe(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),t=this._clock.getTicksAtTime(e);return new Qe(this.context,t).toBarsBeatsSixteenths()}set position(e){const t=this.toTicks(e);this.ticks=t}get seconds(){return this._clock.seconds}set seconds(e){const t=this.now(),n=this._clock.frequency.timeToTicks(e,t);this.ticks=n}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const t=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(t),i=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,t),r=t+i;this.emit("stop",r),this._clock.setTicksAtTime(e,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this._clock.setTicksAtTime(e,t)}}getTicksAtTime(e){return Math.round(this._clock.getTicksAtTime(e))}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),this.state!=="started")return 0;{const t=this.now(),n=this.getTicksAtTime(t),i=e-n%e;return this._clock.nextTickTime(i,t)}}syncSignal(e,t){if(!t){const i=this.now();if(e.getValueAtTime(i)!==0){const o=1/(60/this.bpm.getValueAtTime(i)/this.PPQ);t=e.getValueAtTime(i)/o}else t=0}const n=new K(t);return this.bpm.connect(n),n.connect(e._param),this._syncedSignals.push({initial:e.value,ratio:n,signal:e}),e.value=0,this}unsyncSignal(e){for(let t=this._syncedSignals.length-1;t>=0;t--){const n=this._syncedSignals[t];n.signal===e&&(n.ratio.dispose(),n.signal.value=n.initial,this._syncedSignals.splice(t,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),ni(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Mn.mixin(on);ms(s=>{s.transport=new on({context:s})});gs(s=>{s.transport.dispose()});class ge extends V{constructor(e){super(e),this.input=void 0,this._state=new ii("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=J,this._syncedStop=J,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new ut({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,X(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(V.getDefaults(),{mute:!1,onstop:J,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,t,n){let i=Oe(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(i=this._clampToCurrentTime(i),!this._synced&&this._state.getValueAtTime(i)==="started")j(Zn(i,this._state.get(i).time),"Start time must be strictly greater than previous start time"),this._state.cancel(i),this._state.setStateAtTime("started",i),this.log("restart",i),this.restart(i,t,n);else if(this.log("start",i),this._state.setStateAtTime("started",i),this._synced){const r=this._state.get(i);r&&(r.offset=this.toSeconds(Lt(t,0)),r.duration=n?this.toSeconds(n):void 0);const o=this.context.transport.schedule(a=>{this._start(a,t,n)},i);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>i&&this._syncedStart(this.now(),this.context.transport.seconds)}else Fr(this.context),this._start(i,t,n);return this}stop(e){let t=Oe(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(t=this._clampToCurrentTime(t),this._state.getValueAtTime(t)==="started"||$(this._state.getNextState("started",t))){if(this.log("stop",t),!this._synced)this._stop(t);else{const n=this.context.transport.schedule(this._stop.bind(this),t);this._scheduled.push(n)}this._state.cancel(t),this._state.setStateAtTime("stopped",t)}return this}restart(e,t,n){return e=this.toSeconds(e),this._state.getValueAtTime(e)==="started"&&(this._state.cancel(e),this._restart(e,t,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,t)=>{if(t>0){const n=this._state.get(t);if(n&&n.state==="started"&&n.time!==t){const i=t-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-i),this._start(e,this.toSeconds(n.offset)+i,r)}}},this._syncedStop=e=>{const t=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));this._state.getValueAtTime(t)==="started"&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(e=>this.context.transport.clear(e)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=J,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class Ut extends Bt{constructor(){super(S(Ut.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const e=S(Ut.getDefaults(),arguments,["url","onload"]);qe(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new G({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new H(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Bt.getDefaults(),{url:new H,loop:!1,loopEnd:0,loopStart:0,onload:J,onerror:J,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,t,n,i=1){j(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(e);this._startGain(r,i),this.loop?t=Lt(t,this.loopStart):t=Lt(t,0);let o=Math.max(this.toSeconds(t),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),l=a-c;Vs(o,a)&&(o=(o-c)%l+c),Ie(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,jr(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),$(n)){let a=this.toSeconds(n);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Gt extends ge{constructor(){super(S(Gt.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const e=S(Gt.getDefaults(),arguments,["type"]);this._playbackRate=e.playbackRate,this.type=e.type,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(ge.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(e){if(j(e in Pi,"Noise: invalid type: "+e),this._type!==e&&(this._type=e,this.state==="started")){const t=this.now();this._stop(t),this._start(t)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._source&&(this._source.playbackRate.value=e)}_start(e){const t=Pi[this._type];this._source=new Ut({url:t,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(e),Math.random()*(t.duration-.001))}_stop(e){this._source&&(this._source.stop(this.toSeconds(e)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(e){this._stop(e),this._start(e)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const Et=44100*5,Ss=2,He={brown:null,pink:null,white:null},Pi={get brown(){if(!He.brown){const s=[];for(let e=0;e<Ss;e++){const t=new Float32Array(Et);s[e]=t;let n=0;for(let i=0;i<Et;i++){const r=Math.random()*2-1;t[i]=(n+.02*r)/1.02,n=t[i],t[i]*=3.5}}He.brown=new H().fromArray(s)}return He.brown},get pink(){if(!He.pink){const s=[];for(let e=0;e<Ss;e++){const t=new Float32Array(Et);s[e]=t;let n,i,r,o,a,c,l;n=i=r=o=a=c=l=0;for(let u=0;u<Et;u++){const h=Math.random()*2-1;n=.99886*n+h*.0555179,i=.99332*i+h*.0750759,r=.969*r+h*.153852,o=.8665*o+h*.3104856,a=.55*a+h*.5329522,c=-.7616*c-h*.016898,t[u]=n+i+r+o+a+c+l+h*.5362,t[u]*=.11,l=h*.115926}}He.pink=new H().fromArray(s)}return He.pink},get white(){if(!He.white){const s=[];for(let e=0;e<Ss;e++){const t=new Float32Array(Et);s[e]=t;for(let n=0;n<Et;n++)t[n]=Math.random()*2-1}He.white=new H().fromArray(s)}return He.white}};function Nt(s,e){return ue(this,void 0,void 0,function*(){const t=e/s.context.sampleRate,n=new _s(1,t,s.context.sampleRate);return new s.constructor(Object.assign(s.get(),{frequency:2/t,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class Kn extends Bt{constructor(){super(S(Kn.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const e=S(Kn.getDefaults(),arguments,["frequency","type"]);qe(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new G({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new G({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),X(this,["frequency","detune"])}static getDefaults(){return Object.assign(Bt.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._oscillator.start(t),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class oe extends ge{constructor(){super(S(oe.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const e=S(oe.getDefaults(),arguments,["frequency","type"]);this.frequency=new Y({context:this.context,units:"frequency",value:e.frequency}),X(this,"frequency"),this.detune=new Y({context:this.context,units:"cents",value:e.detune}),X(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&e.type!=="custom"&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(ge.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const t=this.toSeconds(e),n=new Kn({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(t)}_stop(e){const t=this.toSeconds(e);this._oscillator&&this._oscillator.stop(t)}_restart(e){const t=this.toSeconds(e);return this.log("restart",t),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(t),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return oe._periodicWaveCache.find(t=>t.phase===this._phase&&$h(t.partials,this._partials));{const e=oe._periodicWaveCache.find(t=>t.type===this._type&&t.phase===this._phase);return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const t=["sine","square","sawtooth","triangle"].indexOf(e)!==-1;if(this._phase===0&&t)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=e);else{const n=this._getCachedPeriodicWave();if($(n)){const{partials:i,wave:r}=n;this._wave=r,this._partials=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[i,r]=this._getRealImaginary(e,this._phase),o=this.context.createPeriodicWave(i,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),oe._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:i,type:this._type,wave:this._wave}),oe._periodicWaveCache.length>100&&oe._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&this._type!=="custom"&&e!=="custom"?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){Fe(e,0);let t=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(t=n[1]),this._type!=="custom")e===0?this.type=t:this.type=t+e.toString();else{const i=new Float32Array(e);this._partials.forEach((r,o)=>i[o]=r),this._partials=Array.from(i),this.type=this._type}}_getRealImaginary(e,t){let i=2048;const r=new Float32Array(i),o=new Float32Array(i);let a=1;if(e==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,i=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),e=c[1],a=Math.max(a,2),i=a):this._partialCount=0,this._partials=[]}for(let c=1;c<i;++c){const l=2/(c*Math.PI);let u;switch(e){case"sine":u=c<=a?1:0,this._partials[c-1]=u;break;case"square":u=c&1?2*l:0,this._partials[c-1]=u;break;case"sawtooth":u=l*(c&1?1:-1),this._partials[c-1]=u;break;case"triangle":c&1?u=2*(l*l)*(c-1>>1&1?-1:1):u=0,this._partials[c-1]=u;break;case"custom":u=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}u!==0?(r[c]=-u*Math.sin(t*c),o[c]=u*Math.cos(t*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(e,t,n){let i=0;const r=e.length;for(let o=0;o<r;o++)i+=e[o]*Math.cos(o*n)+t[o]*Math.sin(o*n);return i}getInitialValue(){const[e,t]=this._getRealImaginary(this._type,0);let n=0;const i=Math.PI*2,r=32;for(let o=0;o<r;o++)n=Math.max(this._inverseFFT(e,t,o/r*i),n);return Xh(-this._inverseFFT(e,t,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(e=1024){return ue(this,void 0,void 0,function*(){return Nt(this,e)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}oe._periodicWaveCache=[];class Ge extends V{constructor(){super(Object.assign(S(Ge.getDefaults(),arguments,["context"])))}connect(e,t=0,n=0){return ys(this,e,t,n),this}}class xt extends Ge{constructor(){super(Object.assign(S(xt.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const e=S(xt.getDefaults(),arguments,["mapping","length"]);Ve(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):qh(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(Y.getDefaults(),{length:1024})}setMap(e,t=1024){const n=new Float32Array(t);for(let i=0,r=t;i<r;i++){const o=i/(r-1)*2-1;n[i]=e(o,i)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){const t=["none","2x","4x"].some(n=>n.includes(e));j(t,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class Hr extends Ge{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new xt({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class dt extends Y{constructor(){super(Object.assign(S(dt.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const e=S(dt.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new K({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Y.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class an extends ge{constructor(){super(S(an.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new Hr({context:this.context}),this._modulationNode=new K({context:this.context});const e=S(an.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new oe({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new oe({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new dt({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),X(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(oe.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return ue(this,void 0,void 0,function*(){return Nt(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class cn extends ge{constructor(){super(S(cn.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new K({context:this.context,gain:0});const e=S(cn.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new oe({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new Y({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new oe({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new dt({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new dt({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),X(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(oe.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return ue(this,void 0,void 0,function*(){return Nt(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class zt extends ge{constructor(){super(S(zt.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new K({context:this.context,gain:0}),this._thresh=new xt({context:this.context,mapping:t=>t<=0?-1:1});const e=S(zt.getDefaults(),arguments,["frequency","width"]);this.width=new Y({context:this.context,units:"audioRange",value:e.width}),this._triangle=new oe({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),X(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(ge.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(e=1024){return ue(this,void 0,void 0,function*(){return Nt(this,e)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class ln extends ge{constructor(){super(S(ln.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const e=S(ln.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Y({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Y({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,X(this,["frequency","detune"])}static getDefaults(){return Object.assign(oe.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach(t=>t.start(e))}_stop(e){e=this.toSeconds(e),this._forEach(t=>t.stop(e))}_restart(e){this._forEach(t=>t.restart(e))}_forEach(e){for(let t=0;t<this._oscillators.length;t++)e(this._oscillators[t],t)}get type(){return this._type}set type(e){this._type=e,this._forEach(t=>t.type=e)}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const t=-e/2,n=e/(this._oscillators.length-1);this._forEach((i,r)=>i.detune.value=t+n*r)}}get count(){return this._oscillators.length}set count(e){if(Fe(e,1),this._oscillators.length!==e){this._forEach(t=>t.dispose()),this._oscillators=[];for(let t=0;t<e;t++){const n=new oe({context:this.context,volume:-6-e*1.1,type:this._type,phase:this._phase+t/e*360,partialCount:this._partialCount,onstop:t===0?()=>this.onstop(this):J});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[t]=n}this.spread=this._spread,this.state==="started"&&this._forEach(t=>t.start())}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach((t,n)=>t.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach(t=>t.baseType=e),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach(t=>t.partials=e))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach(t=>t.partialCount=e),this._type=this._oscillators[0].type}asArray(e=1024){return ue(this,void 0,void 0,function*(){return Nt(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(e=>e.dispose()),this}}class un extends ge{constructor(){super(S(un.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new dt({context:this.context,value:2});const e=S(un.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new zt({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new oe({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),X(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(ge.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(e=1024){return ue(this,void 0,void 0,function*(){return Nt(this,e)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Fi={am:an,fat:ln,fm:cn,oscillator:oe,pulse:zt,pwm:un};class St extends ge{constructor(){super(S(St.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const e=S(St.getDefaults(),arguments,["frequency","type"]);this.frequency=new Y({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Y({context:this.context,units:"cents",value:e.detune}),X(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(oe.getDefaults(),cn.getDefaults(),an.getDefaults(),ln.getDefaults(),zt.getDefaults(),un.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some(t=>this._sourceType===t)&&(e=this._sourceType),e+this._oscillator.type}set type(e){e.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):e==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):e==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const t=Fi[e],n=this.now();if(this._oscillator){const i=this._oscillator;i.stop(n),this.context.setTimeout(()=>i.dispose(),this.blockTime)}this._oscillator=new t({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let t="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(t=this._oscillator.type),e==="fm"?this.type="fm"+t:e==="am"?this.type="am"+t:e==="fat"?this.type="fat"+t:e==="oscillator"?this.type=t:e==="pulse"?this.type="pulse":e==="pwm"&&(this.type="pwm")}_getOscType(e,t){return e instanceof Fi[t]}get baseType(){return this._oscillator.baseType}set baseType(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&e!=="pulse"&&e!=="pwm"&&(this._oscillator.baseType=e)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(e){this._getOscType(this._oscillator,"fat")&&lt(e)&&(this._oscillator.count=e)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(e){this._getOscType(this._oscillator,"fat")&&lt(e)&&(this._oscillator.spread=e)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Ue(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(e=1024){return ue(this,void 0,void 0,function*(){return Nt(this,e)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class ai extends Y{constructor(){super(Object.assign(S(ai.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new K({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,bt(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Y.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class hn extends Ge{constructor(){super(Object.assign(S(hn.getDefaults(),arguments,["min","max"]))),this.name="Scale";const e=S(hn.getDefaults(),arguments,["min","max"]);this._mult=this.input=new dt({context:this.context,value:e.max-e.min}),this._add=this.output=new ai({context:this.context,value:e.min}),this._min=e.min,this._max=e.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Ge.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(e){this._min=e,this._setRange()}get max(){return this._max}set max(e){this._max=e,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class ci extends Ge{constructor(){super(Object.assign(S(ci.getDefaults(),arguments))),this.name="Zero",this._gain=new K({context:this.context}),this.output=this._gain,this.input=void 0,qe(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),Xr(this.context.getConstant(0),this._gain),this}}class dn extends V{constructor(){super(S(dn.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=G.prototype._fromType,this._toType=G.prototype._toType,this._is=G.prototype._is,this._clampValue=G.prototype._clampValue;const e=S(dn.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new oe(e),this.frequency=this._oscillator.frequency,this._amplitudeGain=new K({context:this.context,gain:e.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Y({context:this.context,units:"audioRange",value:0}),this._zeros=new ci({context:this.context}),this._a2g=new Hr({context:this.context}),this._scaler=this.output=new hn({context:this.context,max:e.max,min:e.min}),this.units=e.units,this.min=e.min,this.max=e.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),X(this,["amplitude","frequency"]),this.phase=e.phase}static getDefaults(){return Object.assign(oe.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(0,e),this._oscillator.start(e),this}stop(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(this._stoppedValue,e),this._oscillator.stop(e),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(e){e=this._fromType(e),this._scaler.min=e}get max(){return this._toType(this._scaler.max)}set max(e){e=this._fromType(e),this._scaler.max=e}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(e){this._oscillator.partials=e,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e,this._setStoppedValue()}get units(){return this._units}set units(e){const t=this.min,n=this.max;this._units=e,this.min=t,this.max=n}get state(){return this._oscillator.state}connect(e,t,n){return(e instanceof G||e instanceof Y)&&(this.convert=e.convert,this.units=e.units),ys(this,e,t,n),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function Yr(s,e=1/0){const t=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){Fe(r,s,e),t.set(this,r)}})}}function st(s,e=1/0){const t=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){Fe(this.toSeconds(r),s,e),t.set(this,r)}})}}class $t extends ge{constructor(){super(S($t.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const e=S($t.getDefaults(),arguments,["url","onload"]);this._buffer=new H({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(ge.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:J,onerror:J,playbackRate:1,reverse:!1})}load(e){return ue(this,void 0,void 0,function*(){return yield this._buffer.load(e),this._onload(),this})}_onload(e=J){e(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,t,n){return super.start(e,t,n),this}_start(e,t,n){this._loop?t=Lt(t,this._loopStart):t=Lt(t,0);const i=this.toSeconds(t),r=n;n=Lt(n,Math.max(this._buffer.duration-i,0));let o=this.toSeconds(n);o=o/this._playbackRate,e=this.toSeconds(e);const a=new Ut({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(e+o),this._state.setStateAtTime("stopped",e+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&Oe(r)?a.start(e,i):a.start(e,i,o-this.toSeconds(this.fadeOut))}_stop(e){const t=this.toSeconds(e);this._activeSources.forEach(n=>n.stop(t))}restart(e,t,n){return super.restart(e,t,n),this}_restart(e,t,n){this._stop(e),this._start(e,t,n)}seek(e,t){const n=this.toSeconds(t);if(this._state.getValueAtTime(n)==="started"){const i=this.toSeconds(e);this._stop(n),this._start(n,i)}return this}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&Fe(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopStart=e})}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&Fe(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopEnd=e})}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach(t=>{t.loop=e}),e)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const t=this.now(),n=this._state.getNextState("stopped",t);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(i=>i.cancelStop())),this._activeSources.forEach(i=>{i.playbackRate.setValueAtTime(e,t)})}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(e=>e.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}je([st(0)],$t.prototype,"fadeIn",void 0);je([st(0)],$t.prototype,"fadeOut",void 0);class ud extends Ge{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new xt({context:this.context,mapping:e=>Math.abs(e)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class es extends Ge{constructor(){super(Object.assign(S(es.getDefaults(),arguments,["value"]))),this.name="Pow";const e=S(es.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new xt({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(Ge.getDefaults(),{value:1})}_expFunc(e){return t=>Math.pow(Math.abs(t),e)}get value(){return this._exponent}set value(e){this._exponent=e,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class Ee extends V{constructor(){super(S(Ee.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new Y({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const e=S(Ee.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(V.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,t){if(Ue(e))return e;{let n;for(n in Vn)if(Vn[n][t]===e)return n;return e}}_setCurve(e,t,n){if(Ue(n)&&Reflect.has(Vn,n)){const i=Vn[n];vt(i)?e!=="_decayCurve"&&(this[e]=i[t]):this[e]=i}else if(Ve(n)&&e!=="_decayCurve")this[e]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._decayCurve}set decayCurve(e){j(["linear","exponential"].some(t=>t===e),`Invalid envelope curve: ${e}`),this._decayCurve=e}triggerAttack(e,t=1){this.log("triggerAttack",e,t),e=this.toSeconds(e);let i=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(e);if(o>0){const a=1/i;i=(1-o)/a}if(i<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(t,e);else if(this._attackCurve==="linear")this._sig.linearRampTo(t,i,e);else if(this._attackCurve==="exponential")this._sig.targetRampTo(t,i,e);else{this._sig.cancelAndHoldAtTime(e);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,e,i,t)}if(r&&this.sustain<1){const a=t*this.sustain,c=e+i;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const t=this.getValueAtTime(e);if(t>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,e):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,e):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,e):(j(Ve(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,n,t))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,t,n=1){return t=this.toSeconds(t),this.triggerAttack(t,n),this.triggerRelease(t+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e,t=0,n=0){return ys(this,e,t,n),this}asArray(e=1024){return ue(this,void 0,void 0,function*(){const t=e/this.context.sampleRate,n=new _s(1,t,this.context.sampleRate),i=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=i+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:t*this.toSeconds(this.attack)/a,decay:t*this.toSeconds(this.decay)/a,release:t*this.toSeconds(this.release)/a,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(t*(i+o)/a,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}je([st(0)],Ee.prototype,"attack",void 0);je([st(0)],Ee.prototype,"decay",void 0);je([Yr(0,1)],Ee.prototype,"sustain",void 0);je([st(0)],Ee.prototype,"release",void 0);const Vn=(()=>{let e,t;const n=[];for(e=0;e<128;e++)n[e]=Math.sin(e/127*(Math.PI/2));const i=[],r=6.4;for(e=0;e<127;e++){t=e/127;const d=Math.sin(t*(Math.PI*2)*r-Math.PI/2)+1;i[e]=d/10+t*.83}i[127]=1;const o=[],a=5;for(e=0;e<128;e++)o[e]=Math.ceil(e/127*a)/a;const c=[];for(e=0;e<128;e++)t=e/127,c[e]=.5*(1-Math.cos(Math.PI*t));const l=[];for(e=0;e<128;e++){t=e/127;const d=Math.pow(t,3)*4+.2,f=Math.cos(d*Math.PI*2*t);l[e]=Math.abs(f*(1-t))}function u(d){const f=new Array(d.length);for(let p=0;p<d.length;p++)f[p]=1-d[p];return f}function h(d){return d.slice(0).reverse()}return{bounce:{In:u(l),Out:l},cosine:{In:n,Out:h(n)},exponential:"exponential",linear:"linear",ripple:{In:i,Out:u(i)},sine:{In:c,Out:u(c)},step:{In:o,Out:u(o)}}})();class Ct extends V{constructor(){super(S(Ct.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const e=S(Ct.getDefaults(),arguments);this._volume=this.output=new ut({context:this.context,volume:e.volume}),this.volume=this._volume.volume,X(this,"volume")}static getDefaults(){return Object.assign(V.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,t){const n=this["_original_"+e]=this[e];this[e]=(...i)=>{const r=i[t],o=this.context.transport.schedule(a=>{i[t]=a,n.apply(this,i)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(e=>this.context.transport.clear(e)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(e,t,n,i){const r=this.toSeconds(n),o=this.toSeconds(t);return this.triggerAttack(e,r,i),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class et extends Ct{constructor(){super(S(et.getDefaults(),arguments));const e=S(et.getDefaults(),arguments);this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(Ct.getDefaults(),{detune:0,onsilence:J,portamento:0})}triggerAttack(e,t,n=1){this.log("triggerAttack",e,t,n);const i=this.toSeconds(t);return this._triggerEnvelopeAttack(i,n),this.setNote(e,i),this}triggerRelease(e){this.log("triggerRelease",e);const t=this.toSeconds(e);return this._triggerEnvelopeRelease(t),this}setNote(e,t){const n=this.toSeconds(t),i=e instanceof De?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,r,n)}else this.frequency.setValueAtTime(i,n);return this}}je([st(0)],et.prototype,"portamento",void 0);class ws extends Ee{constructor(){super(S(ws.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new K({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class pn extends et{constructor(){super(S(pn.getDefaults(),arguments)),this.name="Synth";const e=S(pn.getDefaults(),arguments);this.oscillator=new St(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new ws(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),X(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(et.getDefaults(),{envelope:Object.assign(Ft(Ee.getDefaults(),Object.keys(V.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(Ft(St.getDefaults(),[...Object.keys(ge.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,t){if(this.envelope.triggerAttack(e,t),this.oscillator.start(e),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+n+i)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class fn extends V{constructor(){super(S(fn.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const e=S(fn.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new G({context:this.context,units:"number",value:e.Q,param:this._filter.Q}),this.frequency=new G({context:this.context,units:"frequency",value:e.frequency,param:this._filter.frequency}),this.detune=new G({context:this.context,units:"cents",value:e.detune,param:this._filter.detune}),this.gain=new G({context:this.context,units:"decibels",convert:!1,value:e.gain,param:this._filter.gain}),this.type=e.type}static getDefaults(){return Object.assign(V.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(e){j(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._filter.type=e}getFrequencyResponse(e=128){const t=new Float32Array(e);for(let o=0;o<e;o++){const c=Math.pow(o/e,2)*19980+20;t[o]=c}const n=new Float32Array(e),i=new Float32Array(e),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(t,n,i),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class mn extends V{constructor(){super(S(mn.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new K({context:this.context}),this.output=new K({context:this.context}),this._filters=[];const e=S(mn.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Y({context:this.context,units:"positive",value:e.Q}),this.frequency=new Y({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Y({context:this.context,units:"cents",value:e.detune}),this.gain=new Y({context:this.context,units:"decibels",convert:!1,value:e.gain}),this._type=e.type,this.rolloff=e.rolloff,X(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(V.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(e){j(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._type=e,this._filters.forEach(n=>n.type=e)}get rolloff(){return this._rolloff}set rolloff(e){const t=lt(e)?e:parseInt(e,10),n=[-12,-24,-48,-96];let i=n.indexOf(t);j(i!==-1,`rolloff can only be ${n.join(", ")}`),i+=1,this._rolloff=t,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(i);for(let r=0;r<i;r++){const o=new fn({context:this.context});o.type=this._type,this.frequency.connect(o.frequency),this.detune.connect(o.detune),this.Q.connect(o.Q),this.gain.connect(o.gain),this._filters[r]=o}this._internalChannels=this._filters,bt(this.input,...this._internalChannels,this.output)}getFrequencyResponse(e=128){const t=new fn({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(e).map(()=>1);return this._filters.forEach(()=>{t.getFrequencyResponse(e).forEach((r,o)=>n[o]*=r)}),t.dispose(),n}dispose(){return super.dispose(),this._filters.forEach(e=>{e.dispose()}),ni(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class gn extends Ee{constructor(){super(S(gn.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const e=S(gn.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=e.octaves,this._baseFrequency=this.toFrequency(e.baseFrequency),this._exponent=this.input=new es({context:this.context,value:e.exponent}),this._scale=this.output=new hn({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(Ee.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){const t=this.toFrequency(e);Fe(t,0),this._baseFrequency=t,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._scale.max=this._baseFrequency*Math.pow(2,e)}get exponent(){return this._exponent.value}set exponent(e){this._exponent.value=e}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class ts extends et{constructor(){super(S(ts.getDefaults(),arguments)),this.name="MonoSynth";const e=S(ts.getDefaults(),arguments);this.oscillator=new St(Object.assign(e.oscillator,{context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new mn(Object.assign(e.filter,{context:this.context})),this.filterEnvelope=new gn(Object.assign(e.filterEnvelope,{context:this.context})),this.envelope=new ws(Object.assign(e.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),X(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(et.getDefaults(),{envelope:Object.assign(Ft(Ee.getDefaults(),Object.keys(V.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(Ft(mn.getDefaults(),Object.keys(V.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(Ft(gn.getDefaults(),Object.keys(V.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(Ft(St.getDefaults(),Object.keys(ge.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(e,t=1){if(this.envelope.triggerAttack(e,t),this.filterEnvelope.triggerAttack(e),this.oscillator.start(e),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+n+i)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.filterEnvelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class _n extends pn{constructor(){super(S(_n.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const e=S(_n.getDefaults(),arguments);this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,X(this,["oscillator","envelope"])}static getDefaults(){return qt(et.getDefaults(),pn.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,t){const n=this.toSeconds(t),i=this.toFrequency(e instanceof De?e.toFrequency():e),r=i*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(i,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}je([Yr(0)],_n.prototype,"octaves",void 0);je([st(0)],_n.prototype,"pitchDecay",void 0);const Qr=new Set;function li(s){Qr.add(s)}function Jr(s,e){const t=`registerProcessor("${s}", ${e})`;Qr.add(t)}const hd=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;li(hd);const dd=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;li(dd);const pd=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;li(pd);const fd="feedback-comb-filter",md=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;Jr(fd,md);class vn extends Ct{constructor(){super(S(vn.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const e=S(vn.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),t={};Object.keys(e.urls).forEach(n=>{const i=parseInt(n,10);if(j(Rn(n)||lt(i)&&isFinite(i),`url key is neither a note or midi pitch: ${n}`),Rn(n)){const r=new De(this.context,n).toMidi();t[r]=e.urls[n]}else lt(i)&&isFinite(i)&&(t[i]=e.urls[i])}),this._buffers=new ri({urls:t,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(Ct.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:J,onerror:J,release:.1,urls:{}})}_findClosest(e){let n=0;for(;n<96;){if(this._buffers.has(e+n))return-n;if(this._buffers.has(e-n))return n;n++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,t,n=1){return this.log("triggerAttack",e,t,n),Array.isArray(e)||(e=[e]),e.forEach(i=>{const r=Zr(new De(this.context,i).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),l=o-c,u=this._buffers.get(l),h=$r(c+a),d=new Ut({url:u,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:h}).connect(this.output);d.start(t,0,u.duration/h,n),Ve(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(d),d.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const f=this._activeSources.get(o),p=f.indexOf(d);p!==-1&&f.splice(p,1)}}}),this}triggerRelease(e,t){return this.log("triggerRelease",e,t),Array.isArray(e)||(e=[e]),e.forEach(n=>{const i=new De(this.context,n).toMidi();if(this._activeSources.has(i)&&this._activeSources.get(i).length){const r=this._activeSources.get(i);t=this.toSeconds(t),r.forEach(o=>{o.stop(t)}),this._activeSources.set(i,[])}}),this}releaseAll(e){const t=this.toSeconds(e);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(t)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,t,n,i=1){const r=this.toSeconds(n);return this.triggerAttack(e,r,i),Ve(t)?(j(Ve(e),"notes must be an array when duration is array"),e.forEach((o,a)=>{const c=t[Math.min(a,t.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(e,r+this.toSeconds(t)),this}add(e,t,n){if(j(Rn(e)||isFinite(e),`note must be a pitch or midi: ${e}`),Rn(e)){const i=new De(this.context,e).toMidi();this._buffers.add(i,t,n)}else this._buffers.add(e,t,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(e=>{e.forEach(t=>t.dispose())}),this._activeSources.clear(),this}}je([st(0)],vn.prototype,"attack",void 0);je([st(0)],vn.prototype,"release",void 0);class yn extends V{constructor(){super(Object.assign(S(yn.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new ud({context:this.context}),this.a=new K({context:this.context,gain:0}),this.b=new K({context:this.context,gain:0}),this.output=new K({context:this.context}),this._internalChannels=[this.a,this.b];const e=S(yn.getDefaults(),arguments,["fade"]);this.fade=new Y({context:this.context,units:"normalRange",value:e.fade}),X(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",qe(this._split,this.a.gain,0),qe(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(V.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class qi extends V{constructor(e){super(e),this.name="Effect",this._dryWet=new yn({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new K({context:this.context}),this.effectReturn=new K({context:this.context}),this.input=new K({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(e.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],X(this,"wet")}static getDefaults(){return Object.assign(V.getDefaults(),{wet:1})}connectEffect(e){return this._internalChannels.push(e),this.effectSend.chain(e,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class ns extends V{constructor(){super(Object.assign(S(ns.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const e=S(ns.getDefaults(),arguments,["pan"]);this.pan=new G({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",X(this,"pan")}static getDefaults(){return Object.assign(V.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const gd="bit-crusher",_d=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;Jr(gd,_d);class ss extends V{constructor(){super(S(ss.getDefaults(),arguments,["channels"])),this.name="Split";const e=S(ss.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(e.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(V.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class wn extends V{constructor(){super(S(wn.getDefaults(),arguments,["channels"])),this.name="Merge";const e=S(wn.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(e.channels)}static getDefaults(){return Object.assign(V.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class Li extends V{constructor(e){super(e),this.name="StereoEffect",this.input=new K({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new yn({context:this.context,fade:e.wet}),this.wet=this._dryWet.fade,this._split=new ss({context:this.context,channels:2}),this._merge=new wn({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),X(this,["wet"])}connectEffectLeft(...e){this._split.connect(e[0],0,0),bt(...e),qe(e[e.length-1],this._merge,0,0)}connectEffectRight(...e){this._split.connect(e[0],1,0),bt(...e),qe(e[e.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(V.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class is extends Li{constructor(){super(S(is.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const e=S(is.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new dn({context:this.context,frequency:e.frequency,min:0,max:1}),this._lfoR=new dn({context:this.context,frequency:e.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(e.baseFrequency),this._octaves=e.octaves,this.Q=new Y({context:this.context,value:e.Q,units:"positive"}),this._filtersL=this._makeFilters(e.stages,this._lfoL),this._filtersR=this._makeFilters(e.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=e.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=e.baseFrequency,this.octaves=e.octaves,this._lfoL.start(),this._lfoR.start(),X(this,["frequency","Q"])}static getDefaults(){return Object.assign(Li.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(e,t){const n=[];for(let i=0;i<e;i++){const r=this.context.createBiquadFilter();r.type="allpass",this.Q.connect(r.Q),t.connect(r.frequency),n.push(r)}return n}get octaves(){return this._octaves}set octaves(e){this._octaves=e;const t=this._baseFrequency*Math.pow(2,e);this._lfoL.max=t,this._lfoR.max=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){this._baseFrequency=this.toFrequency(e),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(e=>e.disconnect()),this._filtersR.forEach(e=>e.disconnect()),this.frequency.dispose(),this}}class rs extends qi{constructor(){super(S(rs.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const e=S(rs.getDefaults(),arguments,["decay"]);this._decay=e.decay,this._preDelay=e.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(qi.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(e){e=this.toSeconds(e),Fe(e,.001),this._decay=e,this.generate()}get preDelay(){return this._preDelay}set preDelay(e){e=this.toSeconds(e),Fe(e,0),this._preDelay=e,this.generate()}generate(){return ue(this,void 0,void 0,function*(){const e=this.ready,t=new _s(2,this._decay+this._preDelay,this.context.sampleRate),n=new Gt({context:t}),i=new Gt({context:t}),r=new wn({context:t});n.connect(r,0,0),i.connect(r,0,1);const o=new K({context:t}).toDestination();r.connect(o),n.start(0),i.start(0),o.gain.setValueAtTime(0,0),o.gain.setValueAtTime(1,this._preDelay),o.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=t.render();return this.ready=a.then(J),yield e,this._convolver.buffer=(yield a).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class le extends V{constructor(){super(S(le.getDefaults(),arguments,["solo"])),this.name="Solo";const e=S(le.getDefaults(),arguments,["solo"]);this.input=this.output=new K({context:this.context}),le._allSolos.has(this.context)||le._allSolos.set(this.context,new Set),le._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(V.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),le._allSolos.get(this.context).forEach(t=>t._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){le._soloed.has(this.context)||le._soloed.set(this.context,new Set),le._soloed.get(this.context).add(this)}_removeSolo(){le._soloed.has(this.context)&&le._soloed.get(this.context).delete(this)}_isSoloed(){return le._soloed.has(this.context)&&le._soloed.get(this.context).has(this)}_noSolos(){return!le._soloed.has(this.context)||le._soloed.has(this.context)&&le._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),le._allSolos.get(this.context).delete(this),this._removeSolo(),this}}le._allSolos=new Map;le._soloed=new Map;class os extends V{constructor(){super(S(os.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const e=S(os.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new ns({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new ut({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,X(this,["pan","volume"])}static getDefaults(){return Object.assign(V.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class _t extends V{constructor(){super(S(_t.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const e=S(_t.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new le({solo:e.solo,context:this.context}),this._panVol=this.output=new os({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),X(this,["pan","volume"])}static getDefaults(){return Object.assign(V.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return _t.buses.has(e)||_t.buses.set(e,new K({context:this.context})),_t.buses.get(e)}send(e,t=0){const n=this._getBus(e),i=new K({context:this.context,units:"decibels",gain:t});return this.connect(i),i.connect(n),i}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}_t.buses=new Map;class vd extends V{constructor(){super(...arguments),this.name="Listener",this.positionX=new G({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new G({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new G({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new G({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new G({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new G({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new G({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new G({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new G({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(V.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}ms(s=>{s.listener=new vd({context:s})});gs(s=>{s.listener.dispose()});class as extends V{constructor(){super(S(as.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const e=S(as.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new G({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:e.threshold}),this.attack=new G({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:e.attack}),this.release=new G({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:e.release}),this.knee=new G({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:e.knee}),this.ratio=new G({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:e.ratio}),X(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(V.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}Me().transport;Me().destination;Me().destination;function yd(){return Me().destination}Me().listener;Me().draw;Me();const wd=at.Component("LandingAudio",{props(){return{ready:!1,debugMode:(s,{context:e})=>e.$rendererProps.mode==="debug",intersects:[],mouseDownSmooth:{value:0},muted:!1}},setup(){this.refs=[],window.addEventListener("mousedown",this.init)},destroy(){window.removeEventListener("mousedown",this.init),this.refs.forEach(s=>s.dispose())},methods:{init(){window.removeEventListener("mousedown",this.init);const s=yd();s.volume.value=25,this.masterVolume=new ut(-20).toDestination(),this.refs.push(this.masterVolume),this.bg=new $t("/audio/bg.mp3").connect(this.masterVolume),this.bg.volume.value=-20,this.bg.loop=!0,this.bg.autostart=!0,this.refs.push(this.bg),this.noise=new Gt("pink").connect(this.masterVolume).start(),this.noise.volume.value=-20,this.noise.mute=!0,this.refs.push(this.noise);const e=new rs(.1).connect(this.masterVolume);this.refs.push(e);const t=new is({frequency:.5,octaves:5,baseFrequency:1200}).connect(e);this.refs.push(t);const n=new as(-5,20).connect(t);this.signals=Ne.range(5).map(i=>{const r=new ts().connect(n),o=["Db4","f#4","b3","cb5","db5"][i];return{synth:r,isOn:!1,note:o}}),this.refs.push(n),this.$trigger("audioReady"),this.props.ready=!0}},hooks:{"while:ready"(){const{intersects:s}=this.props;this.bg.volume.value=It(this.props.mouseDownSmooth.value,0,1,-1,-8),s.forEach((e,t)=>{const n=this.signals[t];n&&(!n.isOn&&e&&n.synth.triggerAttack(n.note,0),n.isOn&&!e&&n.synth.triggerRelease(),n.isOn=e)})},"set:debugMode"(s){this.noise&&(this.noise.mute=!s)},"set:muted"(s){this.masterVolume&&(this.masterVolume.volume.value=s?-100:-40,s?this.bg.stop():this.bg.start())}}}),sp=at.Component("LandingScene",{options:{addTo:null},props(){return{active:!1,mouseDown:!1,mouseDownSmooth:Gi({value:s=>s.mouseDown?1:0,friction:.05})}},async setup({options:s}){s.addTo.fog=new yo(12633286,25,40),this.bg=new Cs(new Bi(100,100),new Je({color:"#C0C4C6",depthTest:!1})),this.bg.onBeforeRender=(e,t,n)=>{this.bg.quaternion.copy(n.quaternion)},s.addTo&&s.addTo.add(this.bg),this.cd=new So({options:{addTo:s.addTo},props:{mouseDownSmooth:e=>this.props.mouseDownSmooth}}),this.lasers=new Mo({options:{addTo:s.addTo,hitMeshes:[this.cd.hitMesh,this.cd.hitMeshBack]},props:{mouseDownSmooth:e=>this.props.mouseDownSmooth}}),this.audio=new wd({props:{intersects:e=>this.lasers.props.intersects,mouseDownSmooth:e=>this.props.mouseDownSmooth}}),this.$renderer.domElement.addEventListener("mousedown",this.handleMouseDown),this.$renderer.domElement.addEventListener("mouseup",this.handleMouseUp),this.props.active=!0},destroy(){this.$renderer.domElement.removeEventListener("mousedown",this.handleMouseDown),this.$renderer.domElement.removeEventListener("mouseup",this.handleMouseUp)},methods:{handleMouseDown(){this.props.mouseDown=!0},handleMouseUp(){this.props.mouseDown=!1}}});export{sp as default};
